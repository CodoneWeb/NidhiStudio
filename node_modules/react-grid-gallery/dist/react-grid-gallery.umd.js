(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom')) :
  typeof define === 'function' && define.amd ? define(['react', 'react-dom'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Gallery = factory(global.React, global.ReactDOM));
})(this, (function (React, require$$6) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
  var require$$6__default = /*#__PURE__*/_interopDefaultLegacy(require$$6);

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      enumerableOnly && (symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      })), keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {};
      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }

    return target;
  }

  function _classCallCheck$7(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass$7(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends$a() {
    _extends$a = Object.assign ? Object.assign.bind() : function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };
    return _extends$a.apply(this, arguments);
  }

  function _inherits$7(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    Object.defineProperty(subClass, "prototype", {
      writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
    return _setPrototypeOf(o, p);
  }

  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn$7(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }

    return _assertThisInitialized(self);
  }

  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
          result;

      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;

        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }

      return _possibleConstructorReturn$7(this, result);
    };
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getAugmentedNamespace(n) {
    var f = n.default;
  	if (typeof f == "function") {
  		var a = function () {
  			return f.apply(this, arguments);
  		};
  		a.prototype = f.prototype;
    } else a = {};
    Object.defineProperty(a, '__esModule', {value: true});
  	Object.keys(n).forEach(function (k) {
  		var d = Object.getOwnPropertyDescriptor(n, k);
  		Object.defineProperty(a, k, d.get ? d : {
  			enumerable: true,
  			get: function () {
  				return n[k];
  			}
  		});
  	});
  	return a;
  }

  var propTypes = {exports: {}};

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var ReactPropTypesSecret_1;
  var hasRequiredReactPropTypesSecret;

  function requireReactPropTypesSecret() {
    if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
    hasRequiredReactPropTypesSecret = 1;

    var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
    ReactPropTypesSecret_1 = ReactPropTypesSecret;
    return ReactPropTypesSecret_1;
  }

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var factoryWithThrowingShims;
  var hasRequiredFactoryWithThrowingShims;

  function requireFactoryWithThrowingShims() {
    if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
    hasRequiredFactoryWithThrowingShims = 1;

    var ReactPropTypesSecret = requireReactPropTypesSecret();

    function emptyFunction() {}

    function emptyFunctionWithReset() {}

    emptyFunctionWithReset.resetWarningCache = emptyFunction;

    factoryWithThrowingShims = function () {
      function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret === ReactPropTypesSecret) {
          // It is still safe when called from React.
          return;
        }

        var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        err.name = 'Invariant Violation';
        throw err;
      }
      shim.isRequired = shim;

      function getShim() {
        return shim;
      }
      // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

      var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: emptyFunctionWithReset,
        resetWarningCache: emptyFunction
      };
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };

    return factoryWithThrowingShims;
  }

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  {
    // By explicitly using `prop-types` you are opting into new production behavior.
    // http://fb.me/prop-types-in-prod
    propTypes.exports = requireFactoryWithThrowingShims()();
  }

  var Lightbox$1 = {};

  var lib$1 = {exports: {}};

  var util = {};

  Object.defineProperty(util, '__esModule', {
    value: true
  });

  var _slicedToArray$1 = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i['return']) _i['return']();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError('Invalid attempt to destructure non-iterable instance');
      }
    };
  }();

  var _extends$9 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var objectToPairs = function objectToPairs(obj) {
    return Object.keys(obj).map(function (key) {
      return [key, obj[key]];
    });
  };

  util.objectToPairs = objectToPairs; // [[K1, V1], [K2, V2]] -> {K1: V1, K2: V2, ...}

  var pairsToObject = function pairsToObject(pairs) {
    var result = {};
    pairs.forEach(function (_ref) {
      var _ref2 = _slicedToArray$1(_ref, 2);

      var key = _ref2[0];
      var val = _ref2[1];
      result[key] = val;
    });
    return result;
  };

  var mapObj = function mapObj(obj, fn) {
    return pairsToObject(objectToPairs(obj).map(fn));
  };

  util.mapObj = mapObj; // Flattens an array one level
  // [[A], [B, C, [D]]] -> [A, B, C, [D]]

  var flatten = function flatten(list) {
    return list.reduce(function (memo, x) {
      return memo.concat(x);
    }, []);
  };

  util.flatten = flatten;
  var UPPERCASE_RE = /([A-Z])/g;
  var MS_RE = /^ms-/;

  var kebabify = function kebabify(string) {
    return string.replace(UPPERCASE_RE, '-$1').toLowerCase();
  };

  var kebabifyStyleName = function kebabifyStyleName(string) {
    return kebabify(string).replace(MS_RE, '-ms-');
  };

  util.kebabifyStyleName = kebabifyStyleName;

  var recursiveMerge = function recursiveMerge(a, b) {
    // TODO(jlfwong): Handle malformed input where a and b are not the same
    // type.
    if (typeof a !== 'object') {
      return b;
    }

    var ret = _extends$9({}, a);

    Object.keys(b).forEach(function (key) {
      if (ret.hasOwnProperty(key)) {
        ret[key] = recursiveMerge(a[key], b[key]);
      } else {
        ret[key] = b[key];
      }
    });
    return ret;
  };

  util.recursiveMerge = recursiveMerge;
  /**
   * CSS properties which accept numbers but are not in units of "px".
   * Taken from React's CSSProperty.js
   */

  var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridColumn: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    // SVG-related properties
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  };
  /**
   * Taken from React's CSSProperty.js
   *
   * @param {string} prefix vendor-specific prefix, eg: Webkit
   * @param {string} key style name, eg: transitionDuration
   * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
   * WebkitTransitionDuration
   */

  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }
  /**
   * Support style names that may come passed in prefixed by adding permutations
   * of vendor prefixes.
   * Taken from React's CSSProperty.js
   */


  var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
  // infinite loop, because it iterates over the newly added props too.
  // Taken from React's CSSProperty.js

  Object.keys(isUnitlessNumber).forEach(function (prop) {
    prefixes.forEach(function (prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });

  var stringifyValue = function stringifyValue(key, prop) {
    if (typeof prop === "number") {
      if (isUnitlessNumber[key]) {
        return "" + prop;
      } else {
        return prop + "px";
      }
    } else {
      return prop;
    }
  };

  util.stringifyValue = stringifyValue;
  /**
   * JS Implementation of MurmurHash2
   *
   * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
   * @see http://github.com/garycourt/murmurhash-js
   * @author <a href="mailto:aappleby@gmail.com">Austin Appleby</a>
   * @see http://sites.google.com/site/murmurhash/
   *
   * @param {string} str ASCII only
   * @return {string} Base 36 encoded hash result
   */

  function murmurhash2_32_gc(str) {
    var l = str.length;
    var h = l;
    var i = 0;
    var k = undefined;

    while (l >= 4) {
      k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
      k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
      k ^= k >>> 24;
      k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;
      l -= 4;
      ++i;
    }

    switch (l) {
      case 3:
        h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

      case 2:
        h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

      case 1:
        h ^= str.charCodeAt(i) & 0xff;
        h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    }

    h ^= h >>> 13;
    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    h ^= h >>> 15;
    return (h >>> 0).toString(36);
  } // Hash a javascript object using JSON.stringify. This is very fast, about 3
  // microseconds on my computer for a sample object:
  // http://jsperf.com/test-hashfnv32a-hash/5
  //
  // Note that this uses JSON.stringify to stringify the objects so in order for
  // this to produce consistent hashes browsers need to have a consistent
  // ordering of objects. Ben Alpert says that Facebook depends on this, so we
  // can probably depend on this too.


  var hashObject = function hashObject(object) {
    return murmurhash2_32_gc(JSON.stringify(object));
  };

  util.hashObject = hashObject;
  var IMPORTANT_RE = /^([^:]+:.*?)( !important)?;$/; // Given a single style rule string like "a: b;", adds !important to generate
  // "a: b !important;".

  var importantify = function importantify(string) {
    return string.replace(IMPORTANT_RE, function (_, base, important) {
      return base + " !important;";
    });
  };

  util.importantify = importantify;

  var inject = {};

  // priority over other events including IO, animation, reflow, and redraw
  // events in browsers.
  //
  // An exception thrown by a task will permanently interrupt the processing of
  // subsequent tasks. The higher level `asap` function ensures that if an
  // exception is thrown by a task, that the task queue will continue flushing as
  // soon as possible, but if you use `rawAsap` directly, you are responsible to
  // either ensure that no exceptions are thrown from your task, or to manually
  // call `rawAsap.requestFlush` if an exception is thrown.


  var browserRaw = rawAsap$1;

  function rawAsap$1(task) {
    if (!queue.length) {
      requestFlush();
    } // Equivalent to push, but avoids a function call.


    queue[queue.length] = task;
  }

  var queue = []; // Once a flush has been requested, no further calls to `requestFlush` are
  // off a `flush` event as quickly as possible. `flush` will attempt to exhaust
  // the event queue before yielding to the browser's own event loop.

  var requestFlush; // The position of the next task to execute in the task queue. This is
  // preserved between calls to `flush` so that it can be resumed if
  // a task throws an exception.

  var index = 0; // If a task schedules additional tasks recursively, the task queue can grow
  // unbounded. To prevent memory exhaustion, the task queue will periodically
  // truncate already-completed tasks.

  var capacity = 1024; // The flush function processes all tasks that have been scheduled with
  // `rawAsap` unless and until one of those tasks throws an exception.
  // If a task throws an exception, `flush` ensures that its state will remain
  // consistent and will resume where it left off when called again.
  // However, `flush` does not make any arrangements to be called again if an
  // exception is thrown.

  function flush$1() {
    while (index < queue.length) {
      var currentIndex = index; // Advance the index before calling the task. This ensures that we will
      // begin flushing on the next task the task throws an error.

      index = index + 1;
      queue[currentIndex].call(); // Prevent leaking memory for long chains of recursive calls to `asap`.
      // If we call `asap` within tasks scheduled by `asap`, the queue will
      // grow, but to avoid an O(n) walk for every task we execute, we don't
      // shift tasks off the queue after they have been executed.
      // Instead, we periodically shift 1024 tasks off the queue.

      if (index > capacity) {
        // Manually shift all values starting at the index back to the
        // beginning of the queue.
        for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
          queue[scan] = queue[scan + index];
        }

        queue.length -= index;
        index = 0;
      }
    }

    queue.length = 0;
    index = 0;
  } // `requestFlush` is implemented using a strategy based on data collected from
  // every available SauceLabs Selenium web driver worker at time of writing.
  // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593
  // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
  // have WebKitMutationObserver but not un-prefixed MutationObserver.
  // Must use `global` or `self` instead of `window` to work in both frames and web
  // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

  /* globals self */


  var scope = typeof commonjsGlobal !== "undefined" ? commonjsGlobal : self;
  var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver; // MutationObservers are desirable because they have high priority and work
  // reliably everywhere they are implemented.
  // They are implemented in all modern browsers.
  //
  // - Android 4-4.3
  // - Chrome 26-34
  // - Firefox 14-29
  // - Internet Explorer 11
  // - iPad Safari 6-7.1
  // - iPhone Safari 7-7.1
  // - Safari 6-7

  if (typeof BrowserMutationObserver === "function") {
    requestFlush = makeRequestCallFromMutationObserver(flush$1); // MessageChannels are desirable because they give direct access to the HTML
    // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
    // 11-12, and in web workers in many engines.
    // Although message channels yield to any queued rendering and IO tasks, they
    // would be better than imposing the 4ms delay of timers.
    // However, they do not work reliably in Internet Explorer or Safari.
    // Internet Explorer 10 is the only browser that has setImmediate but does
    // not have MutationObservers.
    // Although setImmediate yields to the browser's renderer, it would be
    // preferrable to falling back to setTimeout since it does not have
    // the minimum 4ms penalty.
    // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
    // Desktop to a lesser extent) that renders both setImmediate and
    // MessageChannel useless for the purposes of ASAP.
    // https://github.com/kriskowal/q/issues/396
    // Timers are implemented universally.
    // We fall back to timers in workers in most engines, and in foreground
    // contexts in the following browsers.
    // However, note that even this simple case requires nuances to operate in a
    // broad spectrum of browsers.
    //
    // - Firefox 3-13
    // - Internet Explorer 6-9
    // - iPad Safari 4.3
    // - Lynx 2.8.7
  } else {
    requestFlush = makeRequestCallFromTimer(flush$1);
  } // `requestFlush` requests that the high priority event queue be flushed as
  // soon as possible.
  // This is useful to prevent an error thrown in a task from stalling the event
  // queue if the exception handled by Node.js’s
  // `process.on("uncaughtException")` or by a domain.


  rawAsap$1.requestFlush = requestFlush; // To request a high priority event, we induce a mutation observer by toggling
  // the text of a text node between "1" and "-1".

  function makeRequestCallFromMutationObserver(callback) {
    var toggle = 1;
    var observer = new BrowserMutationObserver(callback);
    var node = document.createTextNode("");
    observer.observe(node, {
      characterData: true
    });
    return function requestCall() {
      toggle = -toggle;
      node.data = toggle;
    };
  } // The message channel technique was discovered by Malte Ubl and was the
  // original foundation for this library.
  // http://www.nonblocking.io/2011/06/windownexttick.html
  // Safari 6.0.5 (at least) intermittently fails to create message ports on a
  // page's first load. Thankfully, this version of Safari supports
  // MutationObservers, so we don't need to fall back in that case.
  // function makeRequestCallFromMessageChannel(callback) {
  //     var channel = new MessageChannel();
  //     channel.port1.onmessage = callback;
  //     return function requestCall() {
  //         channel.port2.postMessage(0);
  //     };
  // }
  // For reasons explained above, we are also unable to use `setImmediate`
  // under any circumstances.
  // Even if we were, there is another bug in Internet Explorer 10.
  // It is not sufficient to assign `setImmediate` to `requestFlush` because
  // `setImmediate` must be called *by name* and therefore must be wrapped in a
  // closure.
  // Never forget.
  // function makeRequestCallFromSetImmediate(callback) {
  //     return function requestCall() {
  //         setImmediate(callback);
  //     };
  // }
  // Safari 6.0 has a problem where timers will get lost while the user is
  // scrolling. This problem does not impact ASAP because Safari 6.0 supports
  // mutation observers, so that implementation is used instead.
  // However, if we ever elect to use timers in Safari, the prevalent work-around
  // is to add a scroll event listener that calls for a flush.
  // `setTimeout` does not call the passed callback if the delay is less than
  // approximately 7 in web workers in Firefox 8 through 18, and sometimes not
  // even then.


  function makeRequestCallFromTimer(callback) {
    return function requestCall() {
      // We dispatch a timeout with a specified delay of 0 for engines that
      // can reliably accommodate that request. This will usually be snapped
      // to a 4 milisecond delay, but once we're flushing, there's no delay
      // between events.
      var timeoutHandle = setTimeout(handleTimer, 0); // However, since this timer gets frequently dropped in Firefox
      // workers, we enlist an interval handle that will try to fire
      // an event 20 times per second until it succeeds.

      var intervalHandle = setInterval(handleTimer, 50);

      function handleTimer() {
        // Whichever timer succeeds will cancel both timers and
        // execute the callback.
        clearTimeout(timeoutHandle);
        clearInterval(intervalHandle);
        callback();
      }
    };
  } // This is for `asap.js` only.
  // Its name will be periodically randomized to break any code that depends on
  // its existence.


  rawAsap$1.makeRequestCallFromTimer = makeRequestCallFromTimer; // ASAP was originally a nextTick shim included in Q. This was factored out

  var rawAsap = browserRaw; // RawTasks are recycled to reduce GC churn.

  var freeTasks = []; // We queue errors to ensure they are thrown in right order (FIFO).
  // Array-as-queue is good enough here, since we are just dealing with exceptions.

  var pendingErrors = [];
  var requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);

  function throwFirstError() {
    if (pendingErrors.length) {
      throw pendingErrors.shift();
    }
  }
  /**
   * Calls a task as soon as possible after returning, in its own event, with priority
   * over other events like animation, reflow, and repaint. An error thrown from an
   * event will not interrupt, nor even substantially slow down the processing of
   * other events, but will be rather postponed to a lower priority event.
   * @param {{call}} task A callable object, typically a function that takes no
   * arguments.
   */


  var browserAsap = asap;

  function asap(task) {
    var rawTask;

    if (freeTasks.length) {
      rawTask = freeTasks.pop();
    } else {
      rawTask = new RawTask();
    }

    rawTask.task = task;
    rawAsap(rawTask);
  } // We wrap tasks with recyclable task objects.  A task object implements
  // `call`, just like a function.


  function RawTask() {
    this.task = null;
  } // The sole purpose of wrapping the task is to catch the exception and recycle
  // the task object after its single use.


  RawTask.prototype.call = function () {
    try {
      this.task.call();
    } catch (error) {
      if (asap.onerror) {
        // This hook exists purely for testing purposes.
        // Its name will be periodically randomized to break any code that
        // depends on its existence.
        asap.onerror(error);
      } else {
        // In a web browser, exceptions are not fatal. However, to avoid
        // slowing down the queue of pending tasks, we rethrow the error in a
        // lower priority turn.
        pendingErrors.push(error);
        requestErrorThrow();
      }
    } finally {
      this.task = null;
      freeTasks[freeTasks.length] = this;
    }
  };

  var generate = {};

  var _static = {exports: {}};

  var prefixAll = {exports: {}};

  var prefixProps = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = {
      "Webkit": {
        "transform": true,
        "transformOrigin": true,
        "transformOriginX": true,
        "transformOriginY": true,
        "backfaceVisibility": true,
        "perspective": true,
        "perspectiveOrigin": true,
        "transformStyle": true,
        "transformOriginZ": true,
        "animation": true,
        "animationDelay": true,
        "animationDirection": true,
        "animationFillMode": true,
        "animationDuration": true,
        "animationIterationCount": true,
        "animationName": true,
        "animationPlayState": true,
        "animationTimingFunction": true,
        "appearance": true,
        "userSelect": true,
        "fontKerning": true,
        "textEmphasisPosition": true,
        "textEmphasis": true,
        "textEmphasisStyle": true,
        "textEmphasisColor": true,
        "boxDecorationBreak": true,
        "clipPath": true,
        "maskImage": true,
        "maskMode": true,
        "maskRepeat": true,
        "maskPosition": true,
        "maskClip": true,
        "maskOrigin": true,
        "maskSize": true,
        "maskComposite": true,
        "mask": true,
        "maskBorderSource": true,
        "maskBorderMode": true,
        "maskBorderSlice": true,
        "maskBorderWidth": true,
        "maskBorderOutset": true,
        "maskBorderRepeat": true,
        "maskBorder": true,
        "maskType": true,
        "textDecorationStyle": true,
        "textDecorationSkip": true,
        "textDecorationLine": true,
        "textDecorationColor": true,
        "filter": true,
        "fontFeatureSettings": true,
        "breakAfter": true,
        "breakBefore": true,
        "breakInside": true,
        "columnCount": true,
        "columnFill": true,
        "columnGap": true,
        "columnRule": true,
        "columnRuleColor": true,
        "columnRuleStyle": true,
        "columnRuleWidth": true,
        "columns": true,
        "columnSpan": true,
        "columnWidth": true,
        "flex": true,
        "flexBasis": true,
        "flexDirection": true,
        "flexGrow": true,
        "flexFlow": true,
        "flexShrink": true,
        "flexWrap": true,
        "alignContent": true,
        "alignItems": true,
        "alignSelf": true,
        "justifyContent": true,
        "order": true,
        "transition": true,
        "transitionDelay": true,
        "transitionDuration": true,
        "transitionProperty": true,
        "transitionTimingFunction": true,
        "backdropFilter": true,
        "scrollSnapType": true,
        "scrollSnapPointsX": true,
        "scrollSnapPointsY": true,
        "scrollSnapDestination": true,
        "scrollSnapCoordinate": true,
        "shapeImageThreshold": true,
        "shapeImageMargin": true,
        "shapeImageOutside": true,
        "hyphens": true,
        "flowInto": true,
        "flowFrom": true,
        "regionFragment": true,
        "textSizeAdjust": true
      },
      "Moz": {
        "appearance": true,
        "userSelect": true,
        "boxSizing": true,
        "textAlignLast": true,
        "textDecorationStyle": true,
        "textDecorationSkip": true,
        "textDecorationLine": true,
        "textDecorationColor": true,
        "tabSize": true,
        "hyphens": true,
        "fontFeatureSettings": true,
        "breakAfter": true,
        "breakBefore": true,
        "breakInside": true,
        "columnCount": true,
        "columnFill": true,
        "columnGap": true,
        "columnRule": true,
        "columnRuleColor": true,
        "columnRuleStyle": true,
        "columnRuleWidth": true,
        "columns": true,
        "columnSpan": true,
        "columnWidth": true
      },
      "ms": {
        "flex": true,
        "flexBasis": false,
        "flexDirection": true,
        "flexGrow": false,
        "flexFlow": true,
        "flexShrink": false,
        "flexWrap": true,
        "alignContent": false,
        "alignItems": false,
        "alignSelf": false,
        "justifyContent": false,
        "order": false,
        "transform": true,
        "transformOrigin": true,
        "transformOriginX": true,
        "transformOriginY": true,
        "userSelect": true,
        "wrapFlow": true,
        "wrapThrough": true,
        "wrapMargin": true,
        "scrollSnapType": true,
        "scrollSnapPointsX": true,
        "scrollSnapPointsY": true,
        "scrollSnapDestination": true,
        "scrollSnapCoordinate": true,
        "touchAction": true,
        "hyphens": true,
        "flowInto": true,
        "flowFrom": true,
        "breakBefore": true,
        "breakAfter": true,
        "breakInside": true,
        "regionFragment": true,
        "gridTemplateColumns": true,
        "gridTemplateRows": true,
        "gridTemplateAreas": true,
        "gridTemplate": true,
        "gridAutoColumns": true,
        "gridAutoRows": true,
        "gridAutoFlow": true,
        "grid": true,
        "gridRowStart": true,
        "gridColumnStart": true,
        "gridRowEnd": true,
        "gridRow": true,
        "gridColumn": true,
        "gridColumnEnd": true,
        "gridColumnGap": true,
        "gridRowGap": true,
        "gridArea": true,
        "gridGap": true,
        "textSizeAdjust": true
      }
    };
    module.exports = exports["default"];
  })(prefixProps, prefixProps.exports);

  var capitalizeString = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    }); // helper to capitalize strings

    exports.default = function (str) {
      return str.charAt(0).toUpperCase() + str.slice(1);
    };

    module.exports = exports["default"];
  })(capitalizeString, capitalizeString.exports);

  var sortPrefixedStyle = {exports: {}};

  var isPrefixedProperty = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    exports.default = function (property) {
      return property.match(/^(Webkit|Moz|O|ms)/) !== null;
    };

    module.exports = exports["default"];
  })(isPrefixedProperty, isPrefixedProperty.exports);

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sortPrefixedStyle;
    var _isPrefixedProperty = isPrefixedProperty.exports;

    var _isPrefixedProperty2 = _interopRequireDefault(_isPrefixedProperty);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    function sortPrefixedStyle(style) {
      return Object.keys(style).sort(function (left, right) {
        if ((0, _isPrefixedProperty2.default)(left) && !(0, _isPrefixedProperty2.default)(right)) {
          return -1;
        } else if (!(0, _isPrefixedProperty2.default)(left) && (0, _isPrefixedProperty2.default)(right)) {
          return 1;
        }

        return 0;
      }).reduce(function (sortedStyle, prop) {
        sortedStyle[prop] = style[prop];
        return sortedStyle;
      }, {});
    }

    module.exports = exports['default'];
  })(sortPrefixedStyle, sortPrefixedStyle.exports);

  var position = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = position;

    function position(property, value) {
      if (property === 'position' && value === 'sticky') {
        return {
          position: ['-webkit-sticky', 'sticky']
        };
      }
    }

    module.exports = exports['default'];
  })(position, position.exports);

  var calc = {exports: {}};

  var joinPrefixedValue = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    } // returns a style object with a single concated prefixed value string


    exports.default = function (property, value) {
      var replacer = arguments.length <= 2 || arguments[2] === undefined ? function (prefix, value) {
        return prefix + value;
      } : arguments[2];
      return _defineProperty({}, property, ['-webkit-', '-moz-', ''].map(function (prefix) {
        return replacer(prefix, value);
      }));
    };

    module.exports = exports['default'];
  })(joinPrefixedValue, joinPrefixedValue.exports);

  var isPrefixedValue = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    exports.default = function (value) {
      if (Array.isArray(value)) value = value.join(',');
      return value.match(/-webkit-|-moz-|-ms-/) !== null;
    };

    module.exports = exports['default'];
  })(isPrefixedValue, isPrefixedValue.exports);

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = calc;
    var _joinPrefixedValue = joinPrefixedValue.exports;

    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

    var _isPrefixedValue = isPrefixedValue.exports;

    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    function calc(property, value) {
      if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('calc(') > -1) {
        return (0, _joinPrefixedValue2.default)(property, value, function (prefix, value) {
          return value.replace(/calc\(/g, prefix + 'calc(');
        });
      }
    }

    module.exports = exports['default'];
  })(calc, calc.exports);

  var cursor = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = cursor;
    var _joinPrefixedValue = joinPrefixedValue.exports;

    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    var values = {
      'zoom-in': true,
      'zoom-out': true,
      grab: true,
      grabbing: true
    };

    function cursor(property, value) {
      if (property === 'cursor' && values[value]) {
        return (0, _joinPrefixedValue2.default)(property, value);
      }
    }

    module.exports = exports['default'];
  })(cursor, cursor.exports);

  var flex = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flex;
    var values = {
      flex: true,
      'inline-flex': true
    };

    function flex(property, value) {
      if (property === 'display' && values[value]) {
        return {
          display: ['-webkit-box', '-moz-box', '-ms-' + value + 'box', '-webkit-' + value, value]
        };
      }
    }

    module.exports = exports['default'];
  })(flex, flex.exports);

  var sizing = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = sizing;
    var _joinPrefixedValue = joinPrefixedValue.exports;

    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    var properties = {
      maxHeight: true,
      maxWidth: true,
      width: true,
      height: true,
      columnWidth: true,
      minWidth: true,
      minHeight: true
    };
    var values = {
      'min-content': true,
      'max-content': true,
      'fill-available': true,
      'fit-content': true,
      'contain-floats': true
    };

    function sizing(property, value) {
      if (properties[property] && values[value]) {
        return (0, _joinPrefixedValue2.default)(property, value);
      }
    }

    module.exports = exports['default'];
  })(sizing, sizing.exports);

  var gradient = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = gradient;
    var _joinPrefixedValue = joinPrefixedValue.exports;

    var _joinPrefixedValue2 = _interopRequireDefault(_joinPrefixedValue);

    var _isPrefixedValue = isPrefixedValue.exports;

    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

    function gradient(property, value) {
      if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.match(values) !== null) {
        return (0, _joinPrefixedValue2.default)(property, value);
      }
    }

    module.exports = exports['default'];
  })(gradient, gradient.exports);

  var transition = {exports: {}};

  /* eslint-disable no-var, prefer-template */
  var uppercasePattern = /[A-Z]/g;
  var msPattern = /^ms-/;
  var cache = {};

  function toHyphenLower(match) {
    return '-' + match.toLowerCase();
  }

  function hyphenateStyleName(name) {
    if (cache.hasOwnProperty(name)) {
      return cache[name];
    }

    var hName = name.replace(uppercasePattern, toHyphenLower);
    return cache[name] = msPattern.test(hName) ? '-' + hName : hName;
  }

  var hyphenateStyleName$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': hyphenateStyleName
  });

  var require$$0 = /*@__PURE__*/getAugmentedNamespace(hyphenateStyleName$1);

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = transition;
    var _hyphenateStyleName = require$$0;

    var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

    var _capitalizeString = capitalizeString.exports;

    var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

    var _isPrefixedValue = isPrefixedValue.exports;

    var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

    var _prefixProps = prefixProps.exports;

    var _prefixProps2 = _interopRequireDefault(_prefixProps);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var properties = {
      transition: true,
      transitionProperty: true,
      WebkitTransition: true,
      WebkitTransitionProperty: true
    };

    function transition(property, value) {
      // also check for already prefixed transitions
      if (typeof value === 'string' && properties[property]) {
        var _ref2;

        var outputValue = prefixValue(value);
        var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (value) {
          return value.match(/-moz-|-ms-/) === null;
        }).join(','); // if the property is already prefixed

        if (property.indexOf('Webkit') > -1) {
          return _defineProperty({}, property, webkitOutput);
        }

        return _ref2 = {}, _defineProperty(_ref2, 'Webkit' + (0, _capitalizeString2.default)(property), webkitOutput), _defineProperty(_ref2, property, outputValue), _ref2;
      }
    }

    function prefixValue(value) {
      if ((0, _isPrefixedValue2.default)(value)) {
        return value;
      } // only split multi values, not cubic beziers


      var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g); // iterate each single value and check for transitioned properties
      // that need to be prefixed as well

      multipleValues.forEach(function (val, index) {
        multipleValues[index] = Object.keys(_prefixProps2.default).reduce(function (out, prefix) {
          var dashCasePrefix = '-' + prefix.toLowerCase() + '-';
          Object.keys(_prefixProps2.default[prefix]).forEach(function (prop) {
            var dashCaseProperty = (0, _hyphenateStyleName2.default)(prop);

            if (val.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
              // join all prefixes and create a new value
              out = val.replace(dashCaseProperty, dashCasePrefix + dashCaseProperty) + ',' + out;
            }
          });
          return out;
        }, val);
      });
      return multipleValues.join(',');
    }

    module.exports = exports['default'];
  })(transition, transition.exports);

  var flexboxIE = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flexboxIE;

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var alternativeValues = {
      'space-around': 'distribute',
      'space-between': 'justify',
      'flex-start': 'start',
      'flex-end': 'end'
    };
    var alternativeProps = {
      alignContent: 'msFlexLinePack',
      alignSelf: 'msFlexItemAlign',
      alignItems: 'msFlexAlign',
      justifyContent: 'msFlexPack',
      order: 'msFlexOrder',
      flexGrow: 'msFlexPositive',
      flexShrink: 'msFlexNegative',
      flexBasis: 'msPreferredSize'
    };

    function flexboxIE(property, value) {
      if (alternativeProps[property]) {
        return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
      }
    }

    module.exports = exports['default'];
  })(flexboxIE, flexboxIE.exports);

  var flexboxOld = {exports: {}};

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = flexboxOld;

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var alternativeValues = {
      'space-around': 'justify',
      'space-between': 'justify',
      'flex-start': 'start',
      'flex-end': 'end',
      'wrap-reverse': 'multiple',
      wrap: 'multiple'
    };
    var alternativeProps = {
      alignItems: 'WebkitBoxAlign',
      justifyContent: 'WebkitBoxPack',
      flexWrap: 'WebkitBoxLines'
    };

    function flexboxOld(property, value) {
      if (property === 'flexDirection' && typeof value === 'string') {
        return {
          WebkitBoxOrient: value.indexOf('column') > -1 ? 'vertical' : 'horizontal',
          WebkitBoxDirection: value.indexOf('reverse') > -1 ? 'reverse' : 'normal'
        };
      }

      if (alternativeProps[property]) {
        return _defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
      }
    }

    module.exports = exports['default'];
  })(flexboxOld, flexboxOld.exports);

  (function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = prefixAll;
    var _prefixProps = prefixProps.exports;

    var _prefixProps2 = _interopRequireDefault(_prefixProps);

    var _capitalizeString = capitalizeString.exports;

    var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

    var _sortPrefixedStyle = sortPrefixedStyle.exports;

    var _sortPrefixedStyle2 = _interopRequireDefault(_sortPrefixedStyle);

    var _position = position.exports;

    var _position2 = _interopRequireDefault(_position);

    var _calc = calc.exports;

    var _calc2 = _interopRequireDefault(_calc);

    var _cursor = cursor.exports;

    var _cursor2 = _interopRequireDefault(_cursor);

    var _flex = flex.exports;

    var _flex2 = _interopRequireDefault(_flex);

    var _sizing = sizing.exports;

    var _sizing2 = _interopRequireDefault(_sizing);

    var _gradient = gradient.exports;

    var _gradient2 = _interopRequireDefault(_gradient);

    var _transition = transition.exports;

    var _transition2 = _interopRequireDefault(_transition);

    var _flexboxIE = flexboxIE.exports;

    var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

    var _flexboxOld = flexboxOld.exports;

    var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    } // special flexbox specifications


    var plugins = [_position2.default, _calc2.default, _cursor2.default, _sizing2.default, _gradient2.default, _transition2.default, _flexboxIE2.default, _flexboxOld2.default, _flex2.default];
    /**
     * Returns a prefixed version of the style object using all vendor prefixes
     * @param {Object} styles - Style object that gets prefixed properties added
     * @returns {Object} - Style object with prefixed properties and values
     */

    function prefixAll(styles) {
      Object.keys(styles).forEach(function (property) {
        var value = styles[property];

        if (value instanceof Object && !Array.isArray(value)) {
          // recurse through nested style objects
          styles[property] = prefixAll(value);
        } else {
          Object.keys(_prefixProps2.default).forEach(function (prefix) {
            var properties = _prefixProps2.default[prefix]; // add prefixes if needed

            if (properties[property]) {
              styles[prefix + (0, _capitalizeString2.default)(property)] = value;
            }
          });
        }
      });
      Object.keys(styles).forEach(function (property) {
        [].concat(styles[property]).forEach(function (value, index) {
          // resolve every special plugins
          plugins.forEach(function (plugin) {
            return assignStyles(styles, plugin(property, value));
          });
        });
      });
      return (0, _sortPrefixedStyle2.default)(styles);
    }

    function assignStyles(base) {
      var extend = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      Object.keys(extend).forEach(function (property) {
        var baseValue = base[property];

        if (Array.isArray(baseValue)) {
          [].concat(extend[property]).forEach(function (value) {
            var valueIndex = baseValue.indexOf(value);

            if (valueIndex > -1) {
              base[property].splice(valueIndex, 1);
            }

            base[property].push(value);
          });
        } else {
          base[property] = extend[property];
        }
      });
    }

    module.exports = exports['default'];
  })(prefixAll, prefixAll.exports);

  (function (module) {
    module.exports = prefixAll.exports;
  })(_static);

  Object.defineProperty(generate, '__esModule', {
    value: true
  });

  var _slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i['return']) _i['return']();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError('Invalid attempt to destructure non-iterable instance');
      }
    };
  }();

  function _interopRequireDefault$i(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var _inlineStylePrefixerStatic = _static.exports;

  var _inlineStylePrefixerStatic2 = _interopRequireDefault$i(_inlineStylePrefixerStatic);

  var _util$1 = util;
  /**
   * Generate CSS for a selector and some styles.
   *
   * This function handles the media queries, pseudo selectors, and descendant
   * styles that can be used in aphrodite styles.
   *
   * @param {string} selector: A base CSS selector for the styles to be generated
   *     with.
   * @param {Object} styleTypes: A list of properties of the return type of
   *     StyleSheet.create, e.g. [styles.red, styles.blue].
   * @param stringHandlers: See `generateCSSRuleset`
   * @param useImportant: See `generateCSSRuleset`
   *
   * To actually generate the CSS special-construct-less styles are passed to
   * `generateCSSRuleset`.
   *
   * For instance, a call to
   *
   *     generateCSSInner(".foo", {
   *       color: "red",
   *       "@media screen": {
   *         height: 20,
   *         ":hover": {
   *           backgroundColor: "black"
   *         }
   *       },
   *       ":active": {
   *         fontWeight: "bold",
   *         ">>bar": {
   *           _names: { "foo_bar": true },
   *           height: 10,
   *         }
   *       }
   *     });
   *
   * will make 5 calls to `generateCSSRuleset`:
   *
   *     generateCSSRuleset(".foo", { color: "red" }, ...)
   *     generateCSSRuleset(".foo:active", { fontWeight: "bold" }, ...)
   *     generateCSSRuleset(".foo:active .foo_bar", { height: 10 }, ...)
   *     // These 2 will be wrapped in @media screen {}
   *     generateCSSRuleset(".foo", { height: 20 }, ...)
   *     generateCSSRuleset(".foo:hover", { backgroundColor: "black" }, ...)
   */

  var generateCSS = function generateCSS(selector, styleTypes, stringHandlers, useImportant) {
    var merged = styleTypes.reduce(_util$1.recursiveMerge);
    var declarations = {};
    var mediaQueries = {};
    var pseudoStyles = {};
    Object.keys(merged).forEach(function (key) {
      if (key[0] === ':') {
        pseudoStyles[key] = merged[key];
      } else if (key[0] === '@') {
        mediaQueries[key] = merged[key];
      } else {
        declarations[key] = merged[key];
      }
    });
    return generateCSSRuleset(selector, declarations, stringHandlers, useImportant) + Object.keys(pseudoStyles).map(function (pseudoSelector) {
      return generateCSSRuleset(selector + pseudoSelector, pseudoStyles[pseudoSelector], stringHandlers, useImportant);
    }).join("") + Object.keys(mediaQueries).map(function (mediaQuery) {
      var ruleset = generateCSS(selector, [mediaQueries[mediaQuery]], stringHandlers, useImportant);
      return mediaQuery + '{' + ruleset + '}';
    }).join("");
  };

  generate.generateCSS = generateCSS;
  /**
   * Helper method of generateCSSRuleset to facilitate custom handling of certain
   * CSS properties. Used for e.g. font families.
   *
   * See generateCSSRuleset for usage and documentation of paramater types.
   */

  var runStringHandlers = function runStringHandlers(declarations, stringHandlers) {
    var result = {};
    Object.keys(declarations).forEach(function (key) {
      // If a handler exists for this particular key, let it interpret
      // that value first before continuing
      if (stringHandlers && stringHandlers.hasOwnProperty(key)) {
        result[key] = stringHandlers[key](declarations[key]);
      } else {
        result[key] = declarations[key];
      }
    });
    return result;
  };
  /**
   * Generate a CSS ruleset with the selector and containing the declarations.
   *
   * This function assumes that the given declarations don't contain any special
   * children (such as media queries, pseudo-selectors, or descendant styles).
   *
   * Note that this method does not deal with nesting used for e.g.
   * psuedo-selectors or media queries. That responsibility is left to  the
   * `generateCSS` function.
   *
   * @param {string} selector: the selector associated with the ruleset
   * @param {Object} declarations: a map from camelCased CSS property name to CSS
   *     property value.
   * @param {Object.<string, function>} stringHandlers: a map from camelCased CSS
   *     property name to a function which will map the given value to the value
   *     that is output.
   * @param {bool} useImportant: A boolean saying whether to append "!important"
   *     to each of the CSS declarations.
   * @returns {string} A string of raw CSS.
   *
   * Examples:
   *
   *    generateCSSRuleset(".blah", { color: "red" })
   *    -> ".blah{color: red !important;}"
   *    generateCSSRuleset(".blah", { color: "red" }, {}, false)
   *    -> ".blah{color: red}"
   *    generateCSSRuleset(".blah", { color: "red" }, {color: c => c.toUpperCase})
   *    -> ".blah{color: RED}"
   *    generateCSSRuleset(".blah:hover", { color: "red" })
   *    -> ".blah:hover{color: red}"
   */


  var generateCSSRuleset = function generateCSSRuleset(selector, declarations, stringHandlers, useImportant) {
    var handledDeclarations = runStringHandlers(declarations, stringHandlers);
    var prefixedDeclarations = (0, _inlineStylePrefixerStatic2['default'])(handledDeclarations);
    var prefixedRules = (0, _util$1.flatten)((0, _util$1.objectToPairs)(prefixedDeclarations).map(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2);

      var key = _ref2[0];
      var value = _ref2[1];

      if (Array.isArray(value)) {
        var _ret = function () {
          // inline-style-prefix-all returns an array when there should be
          // multiple rules, we will flatten to single rules
          var prefixedValues = [];
          var unprefixedValues = [];
          value.forEach(function (v) {
            if (v.indexOf('-') === 0) {
              prefixedValues.push(v);
            } else {
              unprefixedValues.push(v);
            }
          });
          prefixedValues.sort();
          unprefixedValues.sort();
          return {
            v: prefixedValues.concat(unprefixedValues).map(function (v) {
              return [key, v];
            })
          };
        }();

        if (typeof _ret === 'object') return _ret.v;
      }

      return [[key, value]];
    }));
    var rules = prefixedRules.map(function (_ref3) {
      var _ref32 = _slicedToArray(_ref3, 2);

      var key = _ref32[0];
      var value = _ref32[1];
      var stringValue = (0, _util$1.stringifyValue)(key, value);
      var ret = (0, _util$1.kebabifyStyleName)(key) + ':' + stringValue + ';';
      return useImportant === false ? ret : (0, _util$1.importantify)(ret);
    }).join("");

    if (rules) {
      return selector + '{' + rules + '}';
    } else {
      return "";
    }
  };

  generate.generateCSSRuleset = generateCSSRuleset;

  Object.defineProperty(inject, '__esModule', {
    value: true
  });

  function _interopRequireDefault$h(obj) {
    return obj && obj.__esModule ? obj : {
      'default': obj
    };
  }

  var _asap = browserAsap;

  var _asap2 = _interopRequireDefault$h(_asap);

  var _generate = generate;
  var _util = util; // The current <style> tag we are inserting into, or null if we haven't
  // inserted anything yet. We could find this each time using
  // `document.querySelector("style[data-aphrodite"])`, but holding onto it is
  // faster.

  var styleTag = null; // Inject a string of styles into a <style> tag in the head of the document. This
  // will automatically create a style tag and then continue to use it for
  // multiple injections. It will also use a style tag with the `data-aphrodite`
  // tag on it if that exists in the DOM. This could be used for e.g. reusing the
  // same style tag that server-side rendering inserts.

  var injectStyleTag = function injectStyleTag(cssContents) {
    if (styleTag == null) {
      // Try to find a style tag with the `data-aphrodite` attribute first.
      styleTag = document.querySelector("style[data-aphrodite]"); // If that doesn't work, generate a new style tag.

      if (styleTag == null) {
        // Taken from
        // http://stackoverflow.com/questions/524696/how-to-create-a-style-tag-with-javascript
        var head = document.head || document.getElementsByTagName('head')[0];
        styleTag = document.createElement('style');
        styleTag.type = 'text/css';
        styleTag.setAttribute("data-aphrodite", "");
        head.appendChild(styleTag);
      }
    }

    if (styleTag.styleSheet) {
      styleTag.styleSheet.cssText += cssContents;
    } else {
      styleTag.appendChild(document.createTextNode(cssContents));
    }
  }; // Custom handlers for stringifying CSS values that have side effects
  // (such as fontFamily, which can cause @font-face rules to be injected)


  var stringHandlers = {
    // With fontFamily we look for objects that are passed in and interpret
    // them as @font-face rules that we need to inject. The value of fontFamily
    // can either be a string (as normal), an object (a single font face), or
    // an array of objects and strings.
    fontFamily: function fontFamily(val) {
      if (Array.isArray(val)) {
        return val.map(fontFamily).join(",");
      } else if (typeof val === "object") {
        injectStyleOnce(val.fontFamily, "@font-face", [val], false);
        return '"' + val.fontFamily + '"';
      } else {
        return val;
      }
    },
    // With animationName we look for an object that contains keyframes and
    // inject them as an `@keyframes` block, returning a uniquely generated
    // name. The keyframes object should look like
    //  animationName: {
    //    from: {
    //      left: 0,
    //      top: 0,
    //    },
    //    '50%': {
    //      left: 15,
    //      top: 5,
    //    },
    //    to: {
    //      left: 20,
    //      top: 20,
    //    }
    //  }
    // TODO(emily): `stringHandlers` doesn't let us rename the key, so I have
    // to use `animationName` here. Improve that so we can call this
    // `animation` instead of `animationName`.
    animationName: function animationName(val) {
      if (typeof val !== "object") {
        return val;
      } // Generate a unique name based on the hash of the object. We can't
      // just use the hash because the name can't start with a number.
      // TODO(emily): this probably makes debugging hard, allow a custom
      // name?


      var name = 'keyframe_' + (0, _util.hashObject)(val); // Since keyframes need 3 layers of nesting, we use `generateCSS` to
      // build the inner layers and wrap it in `@keyframes` ourselves.

      var finalVal = '@keyframes ' + name + '{';
      Object.keys(val).forEach(function (key) {
        finalVal += (0, _generate.generateCSS)(key, [val[key]], stringHandlers, false);
      });
      finalVal += '}';
      injectGeneratedCSSOnce(name, finalVal);
      return name;
    }
  }; // This is a map from Aphrodite's generated class names to `true` (acting as a
  // set of class names)

  var alreadyInjected = {}; // This is the buffer of styles which have not yet been flushed.

  var injectionBuffer = ""; // A flag to tell if we are already buffering styles. This could happen either
  // because we scheduled a flush call already, so newly added styles will
  // already be flushed, or because we are statically buffering on the server.

  var isBuffering = false;

  var injectGeneratedCSSOnce = function injectGeneratedCSSOnce(key, generatedCSS) {
    if (!alreadyInjected[key]) {
      if (!isBuffering) {
        // We should never be automatically buffering on the server (or any
        // place without a document), so guard against that.
        if (typeof document === "undefined") {
          throw new Error("Cannot automatically buffer without a document");
        } // If we're not already buffering, schedule a call to flush the
        // current styles.


        isBuffering = true;
        (0, _asap2['default'])(flushToStyleTag);
      }

      injectionBuffer += generatedCSS;
      alreadyInjected[key] = true;
    }
  };

  var injectStyleOnce = function injectStyleOnce(key, selector, definitions, useImportant) {
    if (!alreadyInjected[key]) {
      var generated = (0, _generate.generateCSS)(selector, definitions, stringHandlers, useImportant);
      injectGeneratedCSSOnce(key, generated);
    }
  };

  inject.injectStyleOnce = injectStyleOnce;

  var reset = function reset() {
    injectionBuffer = "";
    alreadyInjected = {};
    isBuffering = false;
    styleTag = null;
  };

  inject.reset = reset;

  var startBuffering = function startBuffering() {
    if (isBuffering) {
      throw new Error("Cannot buffer while already buffering");
    }

    isBuffering = true;
  };

  inject.startBuffering = startBuffering;

  var flushToString = function flushToString() {
    isBuffering = false;
    var ret = injectionBuffer;
    injectionBuffer = "";
    return ret;
  };

  inject.flushToString = flushToString;

  var flushToStyleTag = function flushToStyleTag() {
    var cssContent = flushToString();

    if (cssContent.length > 0) {
      injectStyleTag(cssContent);
    }
  };

  inject.flushToStyleTag = flushToStyleTag;

  var getRenderedClassNames = function getRenderedClassNames() {
    return Object.keys(alreadyInjected);
  };

  inject.getRenderedClassNames = getRenderedClassNames;

  var addRenderedClassNames = function addRenderedClassNames(classNames) {
    classNames.forEach(function (className) {
      alreadyInjected[className] = true;
    });
  };

  inject.addRenderedClassNames = addRenderedClassNames;
  /**
   * Inject styles associated with the passed style definition objects, and return
   * an associated CSS class name.
   *
   * @param {boolean} useImportant If true, will append !important to generated
   *     CSS output. e.g. {color: red} -> "color: red !important".
   * @param {Object[]} styleDefinitions style definition objects as returned as
   *     properties of the return value of StyleSheet.create().
   */

  var injectAndGetClassName = function injectAndGetClassName(useImportant, styleDefinitions) {
    // Filter out falsy values from the input, to allow for
    // `css(a, test && c)`
    var validDefinitions = styleDefinitions.filter(function (def) {
      return def;
    }); // Break if there aren't any valid styles.

    if (validDefinitions.length === 0) {
      return "";
    }

    var className = validDefinitions.map(function (s) {
      return s._name;
    }).join("-o_O-");
    injectStyleOnce(className, '.' + className, validDefinitions.map(function (d) {
      return d._definition;
    }), useImportant);
    return className;
  };

  inject.injectAndGetClassName = injectAndGetClassName;

  (function (module, exports) {

    Object.defineProperty(exports, '__esModule', {
      value: true
    });

    var _slicedToArray = function () {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;

        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);

            if (i && _arr.length === i) break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i['return']) _i['return']();
          } finally {
            if (_d) throw _e;
          }
        }

        return _arr;
      }

      return function (arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError('Invalid attempt to destructure non-iterable instance');
        }
      };
    }();

    var _util = util;
    var _inject = inject;
    var StyleSheet = {
      create: function create(sheetDefinition) {
        return (0, _util.mapObj)(sheetDefinition, function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2);

          var key = _ref2[0];
          var val = _ref2[1];
          return [key, {
            // TODO(emily): Make a 'production' mode which doesn't prepend
            // the class name here, to make the generated CSS smaller.
            _name: key + '_' + (0, _util.hashObject)(val),
            _definition: val
          }];
        });
      },
      rehydrate: function rehydrate() {
        var renderedClassNames = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
        (0, _inject.addRenderedClassNames)(renderedClassNames);
      }
    };
    /**
     * Utilities for using Aphrodite server-side.
     */

    var StyleSheetServer = {
      renderStatic: function renderStatic(renderFunc) {
        (0, _inject.reset)();
        (0, _inject.startBuffering)();
        var html = renderFunc();
        var cssContent = (0, _inject.flushToString)();
        return {
          html: html,
          css: {
            content: cssContent,
            renderedClassNames: (0, _inject.getRenderedClassNames)()
          }
        };
      }
    };
    /**
     * Utilities for using Aphrodite in tests.
     *
     * Not meant to be used in production.
     */

    var StyleSheetTestUtils = {
      /**
       * Prevent styles from being injected into the DOM.
       *
       * This is useful in situations where you'd like to test rendering UI
       * components which use Aphrodite without any of the side-effects of
       * Aphrodite happening. Particularly useful for testing the output of
       * components when you have no DOM, e.g. testing in Node without a fake DOM.
       *
       * Should be paired with a subsequent call to
       * clearBufferAndResumeStyleInjection.
       */
      suppressStyleInjection: function suppressStyleInjection() {
        (0, _inject.reset)();
        (0, _inject.startBuffering)();
      },

      /**
       * Opposite method of preventStyleInject.
       */
      clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {
        (0, _inject.reset)();
      }
    };

    var css = function css() {
      for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {
        styleDefinitions[_key] = arguments[_key];
      }

      var useImportant = true; // Append !important to all style definitions

      return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);
    };

    exports['default'] = {
      StyleSheet: StyleSheet,
      StyleSheetServer: StyleSheetServer,
      StyleSheetTestUtils: StyleSheetTestUtils,
      css: css
    };
    module.exports = exports['default'];
  })(lib$1, lib$1.exports);

  var dist$2 = {};

  var ScrollLock$1 = {};

  var exenv = {exports: {}};

  /*!
    Copyright (c) 2015 Jed Watson.
    Based on code that is Copyright 2013-2015, Facebook, Inc.
    All rights reserved.
  */

  (function (module) {
    /* global define */
    (function () {

      var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
      var ExecutionEnvironment = {
        canUseDOM: canUseDOM,
        canUseWorkers: typeof Worker !== 'undefined',
        canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
        canUseViewport: canUseDOM && !!window.screen
      };

      if (module.exports) {
        module.exports = ExecutionEnvironment;
      } else {
        window.ExecutionEnvironment = ExecutionEnvironment;
      }
    })();
  })(exenv);

  var dist$1 = {};

  var LifeCycleProvider$1 = {};

  var PropToggle$1 = {};

  Object.defineProperty(PropToggle$1, "__esModule", {
    value: true
  });
  PropToggle$1.defaultProps = undefined;

  var _createClass$6 = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _react$f = React__default["default"];

  _interopRequireDefault$g(_react$f);

  function _interopRequireDefault$g(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck$6(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn$6(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits$6(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  } // create defaults


  var defaultProps$1 = PropToggle$1.defaultProps = {
    attributes: {},
    styles: {}
  };

  var PropToggle = function (_PureComponent) {
    _inherits$6(PropToggle, _PureComponent);

    function PropToggle() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck$6(this, PropToggle);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn$6(this, (_ref = PropToggle.__proto__ || Object.getPrototypeOf(PropToggle)).call.apply(_ref, [this].concat(args))), _this), _this.originalAttributes = {}, _this.originalStyles = {}, _temp), _possibleConstructorReturn$6(_this, _ret);
    }

    _createClass$6(PropToggle, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        var _this2 = this;

        var _props = this.props,
            attributes = _props.attributes,
            styles = _props.styles,
            _props$target = _props.target,
            target = _props$target === undefined ? document.body : _props$target;
        if (!target) return;
        this.attributeKeys = Object.keys(attributes);
        this.styleKeys = Object.keys(styles); // styles

        if (this.styleKeys.length) {
          this.styleKeys.forEach(function (k) {
            _this2.originalStyles[k] = target.style.getPropertyValue(k);
            target.style.setProperty(k, styles[k]);
          });
        } // attributes


        if (this.attributeKeys.length) {
          this.attributeKeys.forEach(function (k) {
            _this2.originalAttributes[k] = target.getAttribute(k) || '';
            target.setAttribute(k, attributes[k]);
          });
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        var _this3 = this;

        var _props$target2 = this.props.target,
            target = _props$target2 === undefined ? document.body : _props$target2;
        if (!target) return; // styles

        if (this.styleKeys.length) {
          this.styleKeys.forEach(function (k) {
            target.style.setProperty(k, _this3.originalStyles[k]);
          });
        } // attributes


        if (this.attributeKeys.length) {
          this.attributeKeys.forEach(function (k) {
            if (_this3.originalAttributes[k]) {
              target.setAttribute(k, _this3.originalAttributes[k]);
            } else {
              target.removeAttribute(k);
            }
          });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return null;
      }
    }]);

    return PropToggle;
  }(_react$f.PureComponent);

  PropToggle.defaultProps = defaultProps$1;

  PropToggle$1.default = PropToggle;

  Object.defineProperty(LifeCycleProvider$1, "__esModule", {
    value: true
  });
  var _react$e = React__default["default"];

  var _react2$b = _interopRequireDefault$f(_react$e);

  var _PropToggle = PropToggle$1;

  var _PropToggle2 = _interopRequireDefault$f(_PropToggle);

  function _interopRequireDefault$f(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties$5(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  var LifeCycleProvider = function LifeCycleProvider(_ref) {
    var isActive = _ref.isActive,
        props = _objectWithoutProperties$5(_ref, ['isActive']);

    return isActive ? _react2$b.default.createElement(_PropToggle2.default, props) : null;
  };

  LifeCycleProvider.defaultProps = _PropToggle.defaultProps;

  LifeCycleProvider$1.default = LifeCycleProvider;

  (function (exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _LifeCycleProvider = LifeCycleProvider$1;
    Object.defineProperty(exports, 'default', {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_LifeCycleProvider).default;
      }
    });
    var _PropToggle = PropToggle$1;
    Object.defineProperty(exports, 'SimpleToggle', {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_PropToggle).default;
      }
    });

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  })(dist$1);

  var utils = {};

  Object.defineProperty(utils, "__esModule", {
    value: true
  });
  utils.preventTouchMove = preventTouchMove;
  utils.allowTouchMove = allowTouchMove;
  utils.preventInertiaScroll = preventInertiaScroll;
  utils.isTouchDevice = isTouchDevice;
  utils.getPadding = getPadding;
  utils.camelToKebab = camelToKebab;
  utils.getWindowHeight = getWindowHeight;
  utils.getDocumentHeight = getDocumentHeight;
  utils.parse = parse;

  function preventTouchMove(e) {
    e.preventDefault();
  }

  function allowTouchMove(e) {
    e.stopPropagation();
  }

  function preventInertiaScroll() {
    var top = this.scrollTop;
    var totalScroll = this.scrollHeight;
    var currentScroll = top + this.offsetHeight;

    if (top === 0) {
      this.scrollTop = 1;
    } else if (currentScroll === totalScroll) {
      this.scrollTop = top - 1;
    }
  } // `ontouchstart` check works on most browsers
  // `maxTouchPoints` works on IE10/11 and Surface


  function isTouchDevice() {
    if (!window) return false;
    return 'ontouchstart' in window || navigator.maxTouchPoints;
  }

  function getPadding() {
    if (!document || !window) return 0;
    var currentPadding = parseInt(document.body.paddingRight, 10) || 0;
    var clientWidth = document.body ? document.body.clientWidth : 0;
    var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;
    return adjustedPadding;
  }

  function camelToKebab(str) {
    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
  }

  function getWindowHeight() {
    var multiplier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    if (window && window.innerHeight) {
      return window.innerHeight * multiplier;
    }
  }

  function getDocumentHeight() {
    if (document && document.body) {
      return document.body.clientHeight;
    }
  }

  function parse(val) {
    return isNaN(val) ? val : val + 'px';
  }

  var withTouchListeners$1 = {};

  Object.defineProperty(withTouchListeners$1, "__esModule", {
    value: true
  });

  var _createClass$5 = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  withTouchListeners$1.default = withTouchListeners;

  var _react$d = React__default["default"];

  var _react2$a = _interopRequireDefault$e(_react$d);

  var _exenv$1 = exenv.exports;
  var _utils$1 = utils;

  function _interopRequireDefault$e(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck$5(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn$5(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits$5(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function withTouchListeners(WrappedComponent) {
    return function (_PureComponent) {
      _inherits$5(TouchProvider, _PureComponent);

      function TouchProvider() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck$5(this, TouchProvider);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn$5(this, (_ref = TouchProvider.__proto__ || Object.getPrototypeOf(TouchProvider)).call.apply(_ref, [this].concat(args))), _this), _this.listenerOptions = {
          capture: false,
          passive: false
        }, _temp), _possibleConstructorReturn$5(_this, _ret);
      }

      _createClass$5(TouchProvider, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
          if (!_exenv$1.canUseDOM) return;
          var touchScrollTarget = this.props.touchScrollTarget;
          var target = document.body; // account for touch devices

          if (target && (0, _utils$1.isTouchDevice)()) {
            // Mobile Safari ignores { overflow: hidden } declaration on the body.
            target.addEventListener('touchmove', _utils$1.preventTouchMove, this.listenerOptions); // Allow scroll on provided target

            if (touchScrollTarget) {
              touchScrollTarget.addEventListener('touchstart', _utils$1.preventInertiaScroll, this.listenerOptions);
              touchScrollTarget.addEventListener('touchmove', _utils$1.allowTouchMove, this.listenerOptions);
            }
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          if (!_exenv$1.canUseDOM) return;
          var touchScrollTarget = this.props.touchScrollTarget;
          var target = document.body; // remove touch listeners

          if (target && (0, _utils$1.isTouchDevice)()) {
            target.removeEventListener('touchmove', _utils$1.preventTouchMove, this.listenerOptions);

            if (touchScrollTarget) {
              touchScrollTarget.removeEventListener('touchstart', _utils$1.preventInertiaScroll, this.listenerOptions);
              touchScrollTarget.removeEventListener('touchmove', _utils$1.allowTouchMove, this.listenerOptions);
            }
          }
        }
      }, {
        key: 'render',
        value: function render() {
          return _react2$a.default.createElement(WrappedComponent, this.props);
        }
      }]);

      return TouchProvider;
    }(_react$d.PureComponent);
  }

  Object.defineProperty(ScrollLock$1, "__esModule", {
    value: true
  });

  var _extends$8 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _createClass$4 = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _react$c = React__default["default"];

  var _react2$9 = _interopRequireDefault$d(_react$c);

  var _exenv = exenv.exports;
  var _reactPropToggle = dist$1;
  var _utils = utils;
  var _withTouchListeners = withTouchListeners$1;

  var _withTouchListeners2 = _interopRequireDefault$d(_withTouchListeners);

  function _interopRequireDefault$d(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck$4(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn$4(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits$4(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var LOCK_COUNT = 0;

  var ScrollLock = function (_PureComponent) {
    _inherits$4(ScrollLock, _PureComponent);

    function ScrollLock() {
      _classCallCheck$4(this, ScrollLock);

      return _possibleConstructorReturn$4(this, (ScrollLock.__proto__ || Object.getPrototypeOf(ScrollLock)).apply(this, arguments));
    }

    _createClass$4(ScrollLock, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        LOCK_COUNT++;

        if (_exenv.canUseDOM) {
          this.initialHeight = window.innerHeight;
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        LOCK_COUNT = Math.max(LOCK_COUNT - 1, 0);

        if (_exenv.canUseDOM) {
          var offset = window.innerHeight - this.initialHeight; // adjust scroll if the window has been resized since the lock was engaged

          if (offset) {
            window.scrollTo(0, window.pageYOffset + offset);
          }
        } // reset the initial height in case this scroll lock is used again


        this.initialHeight = window.innerHeight;
      }
    }, {
      key: 'render',
      value: function render() {
        var accountForScrollbars = this.props.accountForScrollbars; // avoid overly incrementing padding

        var scrollbarSpacer = accountForScrollbars && LOCK_COUNT < 1 ? {
          'padding-right': (0, _utils.getPadding)() + 'px'
        } : {};
        var height = (0, _utils.getDocumentHeight)() + 'px';
        return _react2$9.default.createElement(_reactPropToggle.SimpleToggle, {
          styles: _extends$8({
            'box-sizing': 'border-box',
            // account for possible declaration `width: 100%;` on body
            overflow: 'hidden',
            position: 'relative',
            height: height
          }, scrollbarSpacer)
        });
      }
    }]);

    return ScrollLock;
  }(_react$c.PureComponent);

  ScrollLock.defaultProps = {
    accountForScrollbars: true
  };

  ScrollLock$1.default = (0, _withTouchListeners2.default)(ScrollLock);

  (function (exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _ScrollLock = ScrollLock$1;
    Object.defineProperty(exports, 'default', {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_ScrollLock).default;
      }
    });

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
  })(dist$2);

  var reactSpinners = {exports: {}};

  var dist = {exports: {}};

  var BarLoader = {};

  // murmurhash2 via https://gist.github.com/raycmorgan/588423
  function hashString(str) {
    return hash$1(str, str.length).toString(36);
  }

  function hash$1(str, seed) {
    var m = 0x5bd1e995;
    var r = 24;
    var h = seed ^ str.length;
    var length = str.length;
    var currentIndex = 0;

    while (length >= 4) {
      var k = UInt32(str, currentIndex);
      k = Umul32(k, m);
      k ^= k >>> r;
      k = Umul32(k, m);
      h = Umul32(h, m);
      h ^= k;
      currentIndex += 4;
      length -= 4;
    }

    switch (length) {
      case 3:
        h ^= UInt16(str, currentIndex);
        h ^= str.charCodeAt(currentIndex + 2) << 16;
        h = Umul32(h, m);
        break;

      case 2:
        h ^= UInt16(str, currentIndex);
        h = Umul32(h, m);
        break;

      case 1:
        h ^= str.charCodeAt(currentIndex);
        h = Umul32(h, m);
        break;
    }

    h ^= h >>> 13;
    h = Umul32(h, m);
    h ^= h >>> 15;
    return h >>> 0;
  }

  function UInt32(str, pos) {
    return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
  }

  function UInt16(str, pos) {
    return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
  }

  function Umul32(n, m) {
    n = n | 0;
    m = m | 0;
    var nlo = n & 0xffff;
    var nhi = n >>> 16;
    var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
    return res;
  }

  var pa = function fa(ha) {
    function V(b, c, d, k, l) {
      for (var a = 0, f = 0, n = 0, e = 0, h, q, m, v = 0, A = 0, B = 0, x = 0, C = 0, p = 0, G = 0, r = 0, N = q = 0, L = 0, t = 0, D = d.length, F = D - 1, g = "", u = "", S = "", M = "", H; r < D;) {
        m = d.charCodeAt(r);
        r === F && 0 !== f + e + n + a && (0 !== f && (m = 47 === f ? 10 : 47), e = n = a = 0, D++, F++);

        if (0 === f + e + n + a) {
          if (r === F && (0 < q && (g = g.replace(P, "")), 0 < g.trim().length)) {
            switch (m) {
              case 32:
              case 9:
              case 59:
              case 13:
              case 10:
                break;

              default:
                g += d.charAt(r);
            }

            m = 59;
          }

          if (1 === N) switch (m) {
            case 123:
            case 125:
            case 59:
            case 34:
            case 39:
            case 40:
            case 41:
            case 44:
              N = 0;

            case 9:
            case 13:
            case 10:
            case 32:
              break;

            default:
              for (N = 0, t = r, h = m, r--, m = 59; t < D;) {
                switch (d.charCodeAt(++t)) {
                  case 10:
                  case 13:
                  case 59:
                    r++, m = h;

                  case 58:
                  case 123:
                    t = D;
                }
              }

          }

          switch (m) {
            case 123:
              g = g.trim();
              h = g.charCodeAt(0);
              x = 1;

              for (t = ++r; r < D;) {
                m = d.charCodeAt(r);

                switch (m) {
                  case 123:
                    x++;
                    break;

                  case 125:
                    x--;
                }

                if (0 === x) break;
                r++;
              }

              p = d.substring(t, r);
              0 === h && (h = (g = g.replace(qa, "").trim()).charCodeAt(0));

              switch (h) {
                case 64:
                  0 < q && (g = g.replace(P, ""));
                  q = g.charCodeAt(1);

                  switch (q) {
                    case 100:
                    case 109:
                    case 115:
                    case 45:
                      h = c;
                      break;

                    default:
                      h = W;
                  }

                  p = V(c, h, p, q, l + 1);
                  t = p.length;
                  0 < X && 0 === t && (t = g.length);
                  0 < E && (h = ia(W, g, L), H = O(3, p, h, c, I, y, t, q, l), g = h.join(""), void 0 !== H && 0 === (t = (p = H.trim()).length) && (q = 0, p = ""));
                  if (0 < t) switch (q) {
                    case 115:
                      g = g.replace(ra, sa);

                    case 100:
                    case 109:
                    case 45:
                      p = g + "{" + p + "}";
                      break;

                    case 107:
                      g = g.replace(ta, "$1 $2" + (0 < Q ? T : ""));
                      p = g + "{" + p + "}";
                      p = 1 === w || 2 === w && U("@" + p, 3) ? "@-webkit-" + p + "@" + p : "@" + p;
                      break;

                    default:
                      p = g + p, 112 === k && (p = (u += p, ""));
                  } else p = "";
                  break;

                default:
                  p = V(c, ia(c, g, L), p, k, l + 1);
              }

              S += p;
              p = L = q = G = N = C = 0;
              g = "";
              m = d.charCodeAt(++r);
              break;

            case 125:
            case 59:
              g = (0 < q ? g.replace(P, "") : g).trim();
              if (1 < (t = g.length)) switch (0 === G && (h = g.charCodeAt(0), 45 === h || 96 < h && 123 > h) && (t = (g = g.replace(" ", ":")).length), 0 < E && void 0 !== (H = O(1, g, c, b, I, y, u.length, k, l)) && 0 === (t = (g = H.trim()).length) && (g = "\x00\x00"), h = g.charCodeAt(0), q = g.charCodeAt(1), h + q) {
                case 0:
                  break;

                case 169:
                case 163:
                  M += g + d.charAt(r);
                  break;

                default:
                  58 !== g.charCodeAt(t - 1) && (u += ja(g, h, q, g.charCodeAt(2)));
              }
              L = q = G = N = C = 0;
              g = "";
              m = d.charCodeAt(++r);
          }
        }

        switch (m) {
          case 13:
          case 10:
            if (0 === f + e + n + a + ka) switch (B) {
              case 41:
              case 39:
              case 34:
              case 64:
              case 126:
              case 62:
              case 42:
              case 43:
              case 47:
              case 45:
              case 58:
              case 44:
              case 59:
              case 123:
              case 125:
                break;

              default:
                0 < G && (N = 1);
            }
            47 === f ? f = 0 : 0 === z + C && (q = 1, g += "\x00");
            0 < E * la && O(0, g, c, b, I, y, u.length, k, l);
            y = 1;
            I++;
            break;

          case 59:
          case 125:
            if (0 === f + e + n + a) {
              y++;
              break;
            }

          default:
            y++;
            h = d.charAt(r);

            switch (m) {
              case 9:
              case 32:
                if (0 === e + a + f) switch (v) {
                  case 44:
                  case 58:
                  case 9:
                  case 32:
                    h = "";
                    break;

                  default:
                    32 !== m && (h = " ");
                }
                break;

              case 0:
                h = "\\0";
                break;

              case 12:
                h = "\\f";
                break;

              case 11:
                h = "\\v";
                break;

              case 38:
                0 === e + f + a && 0 < z && (q = L = 1, h = "\f" + h);
                break;

              case 108:
                if (0 === e + f + a + J && 0 < G) switch (r - G) {
                  case 2:
                    112 === v && 58 === d.charCodeAt(r - 3) && (J = v);

                  case 8:
                    111 === A && (J = A);
                }
                break;

              case 58:
                0 === e + f + a && (G = r);
                break;

              case 44:
                0 === f + n + e + a && (q = 1, h += "\r");
                break;

              case 34:
                0 === f && (e = e === m ? 0 : 0 === e ? m : e);
                break;

              case 39:
                0 === f && (e = e === m ? 0 : 0 === e ? m : e);
                break;

              case 91:
                0 === e + f + n && a++;
                break;

              case 93:
                0 === e + f + n && a--;
                break;

              case 41:
                0 === e + f + a && n--;
                break;

              case 40:
                if (0 === e + f + a) {
                  if (0 === C) switch (2 * v + 3 * A) {
                    case 533:
                      break;

                    default:
                      x = 0, C = 1;
                  }
                  n++;
                }

                break;

              case 64:
                0 === f + n + e + a + G + p && (p = 1);
                break;

              case 42:
              case 47:
                if (!(0 < e + a + n)) switch (f) {
                  case 0:
                    switch (2 * m + 3 * d.charCodeAt(r + 1)) {
                      case 235:
                        f = 47;
                        break;

                      case 220:
                        t = r, f = 42;
                    }

                    break;

                  case 42:
                    47 === m && 42 === v && (33 === d.charCodeAt(t + 2) && (u += d.substring(t, r + 1)), h = "", f = 0);
                }
            }

            if (0 === f) {
              if (0 === z + e + a + p && 107 !== k && 59 !== m) switch (m) {
                case 44:
                case 126:
                case 62:
                case 43:
                case 41:
                case 40:
                  if (0 === C) {
                    switch (v) {
                      case 9:
                      case 32:
                      case 10:
                      case 13:
                        h += "\x00";
                        break;

                      default:
                        h = "\x00" + h + (44 === m ? "" : "\x00");
                    }

                    q = 1;
                  } else switch (m) {
                    case 40:
                      C = ++x;
                      break;

                    case 41:
                      0 === (C = --x) && (q = 1, h += "\x00");
                  }

                  break;

                case 9:
                case 32:
                  switch (v) {
                    case 0:
                    case 123:
                    case 125:
                    case 59:
                    case 44:
                    case 12:
                    case 9:
                    case 32:
                    case 10:
                    case 13:
                      break;

                    default:
                      0 === C && (q = 1, h += "\x00");
                  }

              }
              g += h;
              32 !== m && 9 !== m && (B = m);
            }

        }

        A = v;
        v = m;
        r++;
      }

      t = u.length;
      0 < X && 0 === t && 0 === S.length && 0 === c[0].length === !1 && (109 !== k || 1 === c.length && (0 < z ? K : R) === c[0]) && (t = c.join(",").length + 2);

      if (0 < t) {
        if (0 === z && 107 !== k) {
          d = 0;
          a = c.length;

          for (f = Array(a); d < a; ++d) {
            v = c[d].split(ua);
            A = "";
            B = 0;

            for (D = v.length; B < D; ++B) {
              if (!(0 === (x = (e = v[B]).length) && 1 < D)) {
                r = A.charCodeAt(A.length - 1);
                L = e.charCodeAt(0);
                n = "";
                if (0 !== B) switch (r) {
                  case 42:
                  case 126:
                  case 62:
                  case 43:
                  case 32:
                  case 40:
                    break;

                  default:
                    n = " ";
                }

                switch (L) {
                  case 38:
                    e = n + K;

                  case 126:
                  case 62:
                  case 43:
                  case 32:
                  case 41:
                  case 40:
                    break;

                  case 91:
                    e = n + e + K;
                    break;

                  case 58:
                    switch (2 * e.charCodeAt(1) + 3 * e.charCodeAt(2)) {
                      case 530:
                        if (0 < Y) {
                          e = n + e.substring(8, x - 1);
                          break;
                        }

                      default:
                        if (1 > B || 1 > v[B - 1].length) e = n + K + e;
                    }

                    break;

                  case 44:
                    n = "";

                  default:
                    e = 1 < x && 0 < e.indexOf(":") ? n + e.replace(va, "$1" + K + "$2") : n + e + K;
                }

                A += e;
              }
            }

            f[d] = A.replace(P, "").trim();
          }

          c = f;
        }

        h = c;
        if (0 < E && (H = O(2, u, h, b, I, y, t, k, l), void 0 !== H && 0 === (u = H).length)) return M + u + S;
        u = h.join(",") + "{" + u + "}";

        if (0 !== w * J) {
          2 !== w || U(u, 2) || (J = 0);

          switch (J) {
            case 111:
              u = u.replace(wa, ":-moz-$1") + u;
              break;

            case 112:
              u = u.replace(Z, "::-webkit-input-$1") + u.replace(Z, "::-moz-$1") + u.replace(Z, ":-ms-input-$1") + u;
          }

          J = 0;
        }
      }

      return M + u + S;
    }

    function ia(b, c, d) {
      var k = c.trim().split(xa);
      c = k;
      var l = k.length,
          a = b.length;

      switch (a) {
        case 0:
        case 1:
          var f = 0;

          for (b = 0 === a ? "" : b[0] + " "; f < l; ++f) {
            c[f] = ma(b, c[f], d, a).trim();
          }

          break;

        default:
          var n = f = 0;

          for (c = []; f < l; ++f) {
            for (var e = 0; e < a; ++e) {
              c[n++] = ma(b[e] + " ", k[f], d, a).trim();
            }
          }

      }

      return c;
    }

    function ma(b, c, d, k) {
      var l = c.charCodeAt(0);
      33 > l && (l = (c = c.trim()).charCodeAt(0));

      switch (l) {
        case 38:
          switch (z + k) {
            case 0:
            case 1:
              if (0 === b.trim().length) break;

            default:
              return c.replace(M, "$1" + b.trim());
          }

          break;

        case 58:
          switch (c.charCodeAt(1)) {
            case 103:
              if (0 < Y && 0 < z) return c.replace(ya, "$1").replace(M, "$1" + R);
              break;

            default:
              return b.trim() + c;
          }

        default:
          if (0 < d * z && 0 < c.indexOf("\f")) return c.replace(M, (58 === b.charCodeAt(0) ? "" : "$1") + b.trim());
      }

      return b + c;
    }

    function ja(b, c, d, k) {
      var l = 0,
          a = b + ";";
      c = 2 * c + 3 * d + 4 * k;

      if (944 === c) {
        l = a.length;
        b = a.indexOf(":", 9) + 1;
        d = a.substring(0, b).trim();
        k = a.substring(b, l - 1).trim();

        switch (a.charCodeAt(9) * Q) {
          case 0:
            break;

          case 45:
            if (110 !== a.charCodeAt(10)) break;

          default:
            for (a = k.split((k = "", za)), b = c = 0, l = a.length; c < l; b = 0, ++c) {
              for (var f = a[c], n = f.split(Aa); f = n[b];) {
                var e = f.charCodeAt(0);
                if (1 === Q && (64 < e && 90 > e || 96 < e && 123 > e || 95 === e || 45 === e && 45 !== f.charCodeAt(1))) switch (isNaN(parseFloat(f)) + (-1 !== f.indexOf("("))) {
                  case 1:
                    switch (f) {
                      case "infinite":
                      case "alternate":
                      case "backwards":
                      case "running":
                      case "normal":
                      case "forwards":
                      case "both":
                      case "none":
                      case "linear":
                      case "ease":
                      case "ease-in":
                      case "ease-out":
                      case "ease-in-out":
                      case "paused":
                      case "reverse":
                      case "alternate-reverse":
                      case "inherit":
                      case "initial":
                      case "unset":
                      case "step-start":
                      case "step-end":
                        break;

                      default:
                        f += T;
                    }

                }
                n[b++] = f;
              }

              k += (0 === c ? "" : ",") + n.join(" ");
            }

        }

        k = d + k + ";";
        return 1 === w || 2 === w && U(k, 1) ? "-webkit-" + k + k : k;
      }

      if (0 === w || 2 === w && !U(a, 1)) return a;

      switch (c) {
        case 1015:
          return 45 === a.charCodeAt(9) ? "-webkit-" + a + a : a;

        case 951:
          return 116 === a.charCodeAt(3) ? "-webkit-" + a + a : a;

        case 963:
          return 110 === a.charCodeAt(5) ? "-webkit-" + a + a : a;

        case 1009:
          if (100 !== a.charCodeAt(4)) break;

        case 969:
        case 942:
          return "-webkit-" + a + a;

        case 978:
          return "-webkit-" + a + "-moz-" + a + a;

        case 1019:
        case 983:
          return "-webkit-" + a + "-moz-" + a + "-ms-" + a + a;

        case 883:
          return 45 === a.charCodeAt(8) ? "-webkit-" + a + a : a;

        case 932:
          if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
            case 103:
              return "-webkit-box-" + a.replace("-grow", "") + "-webkit-" + a + "-ms-" + a.replace("grow", "positive") + a;

            case 115:
              return "-webkit-" + a + "-ms-" + a.replace("shrink", "negative") + a;

            case 98:
              return "-webkit-" + a + "-ms-" + a.replace("basis", "preferred-size") + a;
          }
          return "-webkit-" + a + "-ms-" + a + a;

        case 964:
          return "-webkit-" + a + "-ms-flex-" + a + a;

        case 1023:
          if (99 !== a.charCodeAt(8)) break;
          b = a.substring(a.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify");
          return "-webkit-box-pack" + b + "-webkit-" + a + "-ms-flex-pack" + b + a;

        case 1005:
          return Ba.test(a) ? a.replace(na, ":-webkit-") + a.replace(na, ":-moz-") + a : a;

        case 1E3:
          b = a.substring(13).trim();
          l = b.indexOf("-") + 1;

          switch (b.charCodeAt(0) + b.charCodeAt(l)) {
            case 226:
              b = a.replace(aa, "tb");
              break;

            case 232:
              b = a.replace(aa, "tb-rl");
              break;

            case 220:
              b = a.replace(aa, "lr");
              break;

            default:
              return a;
          }

          return "-webkit-" + a + "-ms-" + b + a;

        case 1017:
          if (-1 === a.indexOf("sticky", 9)) break;

        case 975:
          l = (a = b).length - 10;
          b = (33 === a.charCodeAt(l) ? a.substring(0, l) : a).substring(b.indexOf(":", 7) + 1).trim();

          switch (c = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
            case 203:
              if (111 > b.charCodeAt(8)) break;

            case 115:
              a = a.replace(b, "-webkit-" + b) + ";" + a;
              break;

            case 207:
            case 102:
              a = a.replace(b, "-webkit-" + (102 < c ? "inline-" : "") + "box") + ";" + a.replace(b, "-webkit-" + b) + ";" + a.replace(b, "-ms-" + b + "box") + ";" + a;
          }

          return a + ";";

        case 938:
          if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
            case 105:
              return b = a.replace("-items", ""), "-webkit-" + a + "-webkit-box-" + b + "-ms-flex-" + b + a;

            case 115:
              return "-webkit-" + a + "-ms-flex-item-" + a.replace(Ca, "") + a;

            default:
              return "-webkit-" + a + "-ms-flex-line-pack" + a.replace("align-content", "") + a;
          }
          break;

        case 953:
          if (0 < (l = a.indexOf("-content", 9)) && 109 === a.charCodeAt(l - 3) && 45 !== a.charCodeAt(l - 4)) return b = a.substring(l - 3), "width:-webkit-" + b + "width:-moz-" + b + "width:" + b;
          break;

        case 962:
          if (a = "-webkit-" + a + (102 === a.charCodeAt(5) ? "-ms-" + a : "") + a, 211 === d + k && 105 === a.charCodeAt(13) && 0 < a.indexOf("transform", 10)) return a.substring(0, a.indexOf(";", 27) + 1).replace(Da, "$1-webkit-$2") + a;
      }

      return a;
    }

    function U(b, c) {
      var d = b.indexOf(1 === c ? ":" : "{"),
          k = b.substring(0, 3 !== c ? d : 10);
      d = b.substring(d + 1, b.length - 1);
      return ba(2 !== c ? k : k.replace(Ea, "$1"), d, c);
    }

    function sa(b, c) {
      var d = ja(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
      return d !== c + ";" ? d.replace(Fa, " or ($1)").substring(4) : "(" + c + ")";
    }

    function O(b, c, d, k, l, a, f, n, e) {
      for (var h = 0, q = c, m; h < E; ++h) {
        switch (m = ca[h].call(F, b, q, d, k, l, a, f, n, e)) {
          case void 0:
          case !1:
          case !0:
          case null:
            break;

          default:
            q = m;
        }
      }

      switch (q) {
        case void 0:
        case !1:
        case !0:
        case null:
        case c:
          break;

        default:
          return q;
      }
    }

    function da(b) {
      switch (b) {
        case void 0:
        case null:
          E = ca.length = 0;
          break;

        default:
          switch (b.constructor) {
            case Array:
              for (var c = 0, d = b.length; c < d; ++c) {
                da(b[c]);
              }

              break;

            case Function:
              ca[E++] = b;
              break;

            case Boolean:
              la = !!b | 0;
          }

      }

      return da;
    }

    function ea(b) {
      for (var c in b) {
        var d = b[c];

        switch (c) {
          case "keyframe":
            Q = d | 0;
            break;

          case "global":
            Y = d | 0;
            break;

          case "cascade":
            z = d | 0;
            break;

          case "compress":
            oa = d | 0;
            break;

          case "semicolon":
            ka = d | 0;
            break;

          case "preserve":
            X = d | 0;
            break;

          case "prefix":
            ba = null, d ? "function" !== typeof d ? w = 1 : (w = 2, ba = d) : w = 0;
        }
      }

      return ea;
    }

    function F(b, c) {
      if (void 0 !== this && this.constructor === F) return fa(b);
      var d = b,
          k = d.charCodeAt(0);
      33 > k && (k = (d = d.trim()).charCodeAt(0));
      0 < Q && (T = d.replace(Ga, 91 === k ? "" : "-"));
      k = 1;
      1 === z ? R = d : K = d;
      d = [R];

      if (0 < E) {
        var l = O(-1, c, d, d, I, y, 0, 0, 0);
        void 0 !== l && "string" === typeof l && (c = l);
      }

      var a = V(W, d, c, 0, 0);
      0 < E && (l = O(-2, a, d, d, I, y, a.length, 0, 0), void 0 !== l && "string" !== typeof (a = l) && (k = 0));
      K = R = T = "";
      J = 0;
      y = I = 1;
      return 0 === oa * k ? a : a.replace(P, "").replace(Ha, "").replace(Ia, "$1").replace(Ja, "$1").replace(Ka, " ");
    }

    var qa = /^\0+/g,
        P = /[\0\r\f]/g,
        na = /: */g,
        Ba = /zoo|gra/,
        Da = /([,: ])(transform)/g,
        za = /,+\s*(?![^(]*[)])/g,
        Aa = / +\s*(?![^(]*[)])/g,
        ua = / *[\0] */g,
        xa = /,\r+?/g,
        M = /([\t\r\n ])*\f?&/g,
        ya = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g,
        Ga = /\W+/g,
        ta = /@(k\w+)\s*(\S*)\s*/,
        Z = /::(place)/g,
        wa = /:(read-only)/g,
        Ha = /\s+(?=[{\];=:>])/g,
        Ia = /([[}=:>])\s+/g,
        Ja = /(\{[^{]+?);(?=\})/g,
        Ka = /\s{2,}/g,
        va = /([^\(])(:+) */g,
        aa = /[svh]\w+-[tblr]{2}/,
        ra = /\(\s*(.*)\s*\)/g,
        Fa = /([^]*?);/g,
        Ca = /-self|flex-/g,
        Ea = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
        y = 1,
        I = 1,
        J = 0,
        z = 1,
        w = 1,
        Y = 1,
        oa = 0,
        ka = 0,
        X = 0,
        W = [],
        ca = [],
        E = 0,
        ba = null,
        la = 0,
        Q = 1,
        T = "",
        K = "",
        R = "";
    F.use = da;
    F.set = ea;
    void 0 !== ha && ea(ha);
    return F;
  }; //  weak


  function memoize(fn) {
    var cache = {};
    return function (arg) {
      if (cache[arg] === undefined) cache[arg] = fn(arg);
      return cache[arg];
    };
  }

  var STYLES_KEY = '__emotion_styles';
  var TARGET_KEY = '__emotion_target';
  var unitless = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    fontWeight: 1,
    lineClamp: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
  };

  var stylisRuleSheet$1 = {exports: {}};

  (function (module, exports) {
    (function (factory) {
      module['exports'] = factory() ;
    })(function () {

      return function (insertRule) {
        var delimiter = '/*|*/';
        var needle = delimiter + '}';

        function toSheet(block) {
          if (block) try {
            insertRule(block + '}');
          } catch (e) {}
        }

        return function ruleSheet(context, content, selectors, parents, line, column, length, at, depth) {
          switch (context) {
            // property
            case 1:
              // @import
              if (depth === 0 && content.charCodeAt(0) === 64) insertRule(content);
              break;
            // selector

            case 2:
              if (at === 0) return content + delimiter;
              break;
            // at-rule

            case 3:
              switch (at) {
                // @font-face, @page
                case 102:
                case 112:
                  return insertRule(selectors[0] + content), '';

                default:
                  return content + delimiter;
              }

            case -2:
              content.split(needle).forEach(toSheet);
          }
        };
      };
    });
  })(stylisRuleSheet$1);

  var stylisRuleSheet = stylisRuleSheet$1.exports;

  /*

  high performance StyleSheet for css-in-js systems

  - uses multiple style tags behind the scenes for millions of rules
  - uses `insertRule` for appending in production for *much* faster performance
  - 'polyfills' on server side

  // usage

  import StyleSheet from 'glamor/lib/sheet'
  let styleSheet = new StyleSheet()

  styleSheet.inject()
  - 'injects' the stylesheet into the page (or into memory if on server)

  styleSheet.insert('#box { border: 1px solid red; }')
  - appends a css rule into the stylesheet

  styleSheet.flush()
  - empties the stylesheet of all its contents

  */

  function sheetForTag(tag) {
    if (tag.sheet) {
      return tag.sheet;
    } // this weirdness brought to you by firefox


    for (var i = 0; i < document.styleSheets.length; i++) {
      if (document.styleSheets[i].ownerNode === tag) {
        return document.styleSheets[i];
      }
    }
  }

  function makeStyleTag() {
    var tag = document.createElement('style');
    tag.type = 'text/css';
    tag.setAttribute('data-emotion', '');
    tag.appendChild(document.createTextNode(''));
    document.head.appendChild(tag);
    return tag;
  }

  var StyleSheet = /*#__PURE__*/function () {
    function StyleSheet() {
      this.isBrowser = typeof window !== 'undefined';
      this.isSpeedy = "production" === 'production'; // the big drawback here is that the css won't be editable in devtools

      this.tags = [];
      this.ctr = 0;
    }

    var _proto = StyleSheet.prototype;

    _proto.inject = function inject() {
      if (this.injected) {
        throw new Error('already injected!');
      }

      if (this.isBrowser) {
        this.tags[0] = makeStyleTag();
      } else {
        // server side 'polyfill'. just enough behavior to be useful.
        this.sheet = [];
      }

      this.injected = true;
    };

    _proto.speedy = function speedy(bool) {
      if (this.ctr !== 0) {
        // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})
        throw new Error("cannot change speedy now");
      }

      this.isSpeedy = !!bool;
    };

    _proto.insert = function insert(rule, sourceMap) {
      if (this.isBrowser) {
        // this is the ultrafast version, works across browsers
        if (this.isSpeedy) {
          var tag = this.tags[this.tags.length - 1];
          var sheet = sheetForTag(tag);

          try {
            sheet.insertRule(rule, sheet.cssRules.length);
          } catch (e) {
          }
        } else {
          var _tag = makeStyleTag();

          this.tags.push(_tag);

          _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));
        }

        this.ctr++;

        if (this.ctr % 65000 === 0) {
          this.tags.push(makeStyleTag());
        }
      } else {
        // enough 'spec compliance' to be able to extract the rules later
        // in other words, just the rule
        this.sheet.push(rule);
      }
    };

    _proto.flush = function flush() {
      if (this.isBrowser) {
        this.tags.forEach(function (tag) {
          return tag.parentNode.removeChild(tag);
        });
        this.tags = [];
        this.ctr = 0; // todo - look for remnants in document.styleSheets
      } else {
        // simpler on server
        this.sheet = [];
      }

      this.injected = false;
    };

    return StyleSheet;
  }();

  var sheet = new StyleSheet(); // 🚀

  sheet.inject();
  var stylisOptions = {
    keyframe: false
  };

  var stylis = new pa(stylisOptions);
  var externalStylisPlugins = [];
  var use = stylis.use;

  function insertRule(rule) {
    sheet.insert(rule, currentSourceMap);
  }

  var insertionPlugin = stylisRuleSheet(insertRule);

  var useStylisPlugin = function useStylisPlugin(plugin) {
    externalStylisPlugins.push(plugin);
    use(null)(externalStylisPlugins)(insertionPlugin);
  };

  var registered = {};
  var inserted = {};
  var currentSourceMap = '';
  stylis.use(insertionPlugin);

  function handleInterpolation(interpolation, couldBeSelectorInterpolation) {
    if (interpolation == null) {
      return '';
    }

    switch (typeof interpolation) {
      case 'boolean':
        return '';

      case 'function':
        if (interpolation[STYLES_KEY] !== undefined) {

          return "." + interpolation[TARGET_KEY];
        }

        return handleInterpolation.call(this, this === undefined ? interpolation() : interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);

      case 'object':
        return createStringFromObject.call(this, interpolation);

      default:
        var cached = registered[interpolation];
        return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;
    }
  }

  var hyphenateRegex = /[A-Z]|^ms/g;
  var processStyleName = memoize(function (styleName) {
    return styleName.replace(hyphenateRegex, '-$&').toLowerCase();
  });

  var processStyleValue = function processStyleValue(key, value) {
    if (value === undefined || value === null || typeof value === 'boolean') return '';

    if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties
    !isNaN(value) && value !== 0) {
      return value + 'px';
    }

    return value;
  };

  var objectToStringCache = new WeakMap();

  function createStringFromObject(obj) {
    if (objectToStringCache.has(obj)) {
      return objectToStringCache.get(obj);
    }

    var string = '';

    if (Array.isArray(obj)) {
      obj.forEach(function (interpolation) {
        string += handleInterpolation.call(this, interpolation, false);
      }, this);
    } else {
      Object.keys(obj).forEach(function (key) {
        if (typeof obj[key] !== 'object') {
          if (registered[obj[key]] !== undefined) {
            string += key + "{" + registered[obj[key]] + "}";
          } else {
            string += processStyleName(key) + ":" + processStyleValue(key, obj[key]) + ";";
          }
        } else {
          string += key + "{" + handleInterpolation.call(this, obj[key], false) + "}";
        }
      }, this);
    }

    objectToStringCache.set(obj, string);
    return string;
  }

  function isLastCharDot(string) {
    return string.charCodeAt(string.length - 1) === 46; // .
  }

  var hash;
  var name;
  var labelPattern = /label:\s*([^\s;\n]+)\s*[;\n]/g;

  function createStyles(strings) {
    var stringMode = true;
    var styles = '';
    var identifierName = '';

    if (strings == null || strings.raw === undefined) {
      stringMode = false;
      styles = handleInterpolation.call(this, strings, false);
    } else {
      styles = strings[0];
    }

    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      interpolations[_key - 1] = arguments[_key];
    }

    interpolations.forEach(function (interpolation, i) {
      styles += handleInterpolation.call(this, interpolation, isLastCharDot(styles));

      if (stringMode === true && strings[i + 1] !== undefined) {
        styles += strings[i + 1];
      }
    }, this);
    styles = styles.replace(labelPattern, function (match, p1) {
      identifierName += "-" + p1;
      return '';
    });
    hash = hashString(styles + identifierName);
    name = hash + identifierName;
    return styles;
  }

  function css$1() {
    var styles = createStyles.apply(this, arguments);
    var selector = "css-" + name;

    if (registered[selector] === undefined) {
      registered[selector] = styles;
    }

    if (inserted[hash] === undefined) {
      stylis("." + selector, styles);
      inserted[hash] = true;
    }

    return selector;
  }

  function keyframes() {
    var styles = createStyles.apply(this, arguments);
    var animation = "animation-" + name;

    if (inserted[hash] === undefined) {
      stylis('', "@keyframes " + animation + "{" + styles + "}");
      inserted[hash] = true;
    }

    return animation;
  }

  function injectGlobal() {
    var styles = createStyles.apply(this, arguments);

    if (inserted[hash] === undefined) {
      stylis('', styles);
      inserted[hash] = true;
    }
  }

  function fontFace() {
    var styles = createStyles.apply(void 0, arguments);

    if (inserted[hash] === undefined) {
      stylis('', "@font-face{" + styles + "}");
      inserted[hash] = true;
    }
  }

  function getRegisteredStyles(registeredStyles, classNames) {
    var rawClassName = '';
    classNames.split(' ').forEach(function (className) {
      if (registered[className] !== undefined) {
        registeredStyles.push(className);
      } else {
        rawClassName += className + " ";
      }
    });
    return rawClassName;
  }

  function merge(className, sourceMap) {
    var registeredStyles = [];
    var rawClassName = getRegisteredStyles(registeredStyles, className);

    if (registeredStyles.length < 2) {
      return className;
    }

    return rawClassName + css$1(registeredStyles, sourceMap);
  }

  function classnames() {
    var len = arguments.length;
    var i = 0;
    var cls = '';

    for (; i < len; i++) {
      var arg = arguments[i];
      if (arg == null) continue;
      var next = cls && cls + ' ' || cls;

      switch (typeof arg) {
        case 'boolean':
          break;

        case 'function':
          cls = next + classnames(arg());
          break;

        case 'object':
          {
            if (Array.isArray(arg)) {
              cls = next + classnames.apply(null, arg);
            } else {
              for (var k in arg) {
                if (arg[k]) {
                  cls && (cls += ' ');
                  cls += k;
                }
              }
            }

            break;
          }

        default:
          {
            cls = next + arg;
          }
      }
    }

    return cls;
  }

  function cx() {
    return merge(classnames.apply(void 0, arguments));
  }

  function hydrate(ids) {
    ids.forEach(function (id) {
      inserted[id] = true;
    });
  }

  function flush() {
    sheet.flush();
    inserted = {};
    registered = {};
    sheet.inject();
  }

  var index_es = /*#__PURE__*/Object.freeze({
    __proto__: null,
    sheet: sheet,
    useStylisPlugin: useStylisPlugin,
    get registered () { return registered; },
    get inserted () { return inserted; },
    css: css$1,
    keyframes: keyframes,
    injectGlobal: injectGlobal,
    fontFace: fontFace,
    getRegisteredStyles: getRegisteredStyles,
    merge: merge,
    cx: cx,
    hydrate: hydrate,
    flush: flush
  });

  var require$$2 = /*@__PURE__*/getAugmentedNamespace(index_es);

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   * 
   */

  var hasOwnProperty = Object.prototype.hasOwnProperty;
  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */

  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      // Added the nonzero y check to make Flow happy, but it is redundant
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /**
   * Performs equality by iterating through keys on an object and returning false
   * when any key has values which are not strictly equal between the arguments.
   * Returns true when the values of all keys are strictly equal.
   */


  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    } // Test for A's keys different from B.


    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  var shallowEqual_1 = shallowEqual;

  /**
   * Copyright 2015, Yahoo! Inc.
   * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
   */


  var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      // don't hoist over string (html) components
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            // Avoid failures from read-only properties
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  }

  var hoistNonReactStatics_cjs = hoistNonReactStatics;

  var lib = {};

  var createChangeEmitter_1;

  Object.defineProperty(lib, "__esModule", {
    value: true
  });

  createChangeEmitter_1 = lib.createChangeEmitter = function createChangeEmitter() {
    var currentListeners = [];
    var nextListeners = currentListeners;

    function ensureCanMutateNextListeners() {
      if (nextListeners === currentListeners) {
        nextListeners = currentListeners.slice();
      }
    }

    function listen(listener) {
      if (typeof listener !== 'function') {
        throw new Error('Expected listener to be a function.');
      }

      var isSubscribed = true;
      ensureCanMutateNextListeners();
      nextListeners.push(listener);
      return function () {
        if (!isSubscribed) {
          return;
        }

        isSubscribed = false;
        ensureCanMutateNextListeners();
        var index = nextListeners.indexOf(listener);
        nextListeners.splice(index, 1);
      };
    }

    function emit() {
      currentListeners = nextListeners;
      var listeners = currentListeners;

      for (var i = 0; i < listeners.length; i++) {
        listeners[i].apply(listeners, arguments);
      }
    }

    return {
      listen: listen,
      emit: emit
    };
  };

  function symbolObservablePonyfill(root) {
    var result;
    var Symbol = root.Symbol;

    if (typeof Symbol === 'function') {
      if (Symbol.observable) {
        result = Symbol.observable;
      } else {
        result = Symbol('observable');
        Symbol.observable = result;
      }
    } else {
      result = '@@observable';
    }

    return result;
  }

  /* global window */
  var root;

  if (typeof self !== 'undefined') {
    root = self;
  } else if (typeof window !== 'undefined') {
    root = window;
  } else if (typeof global !== 'undefined') {
    root = global;
  } else if (typeof module !== 'undefined') {
    root = module;
  } else {
    root = Function('return this')();
  }

  var result = symbolObservablePonyfill(root);

  var setStatic = function setStatic(key, value) {
    return function (BaseComponent) {
      /* eslint-disable no-param-reassign */
      BaseComponent[key] = value;
      /* eslint-enable no-param-reassign */

      return BaseComponent;
    };
  };

  var setDisplayName = function setDisplayName(displayName) {
    return setStatic('displayName', displayName);
  };

  var getDisplayName = function getDisplayName(Component$$1) {
    if (typeof Component$$1 === 'string') {
      return Component$$1;
    }

    if (!Component$$1) {
      return undefined;
    }

    return Component$$1.displayName || Component$$1.name || 'Component';
  };

  var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
    return hocName + '(' + getDisplayName(BaseComponent) + ')';
  };

  var mapProps = function mapProps(propsMapper) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var MapProps = function MapProps(props) {
        return factory(propsMapper(props));
      };

      return MapProps;
    };
  };

  var classCallCheck = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var _extends$7 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var inherits = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };

  var objectWithoutProperties = function (obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  };

  var possibleConstructorReturn = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  };

  var withProps = function withProps(input) {
    var hoc = mapProps(function (props) {
      return _extends$7({}, props, typeof input === 'function' ? input(props) : input);
    });

    return hoc;
  };

  var pick = function pick(obj, keys) {
    var result = {};

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (obj.hasOwnProperty(key)) {
        result[key] = obj[key];
      }
    }

    return result;
  };

  var withPropsOnChange = function withPropsOnChange(shouldMapOrKeys, propsMapper) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);
      var shouldMap = typeof shouldMapOrKeys === 'function' ? shouldMapOrKeys : function (props, nextProps) {
        return !shallowEqual_1(pick(props, shouldMapOrKeys), pick(nextProps, shouldMapOrKeys));
      };

      var WithPropsOnChange = function (_Component) {
        inherits(WithPropsOnChange, _Component);

        function WithPropsOnChange() {
          var _temp, _this, _ret;

          classCallCheck(this, WithPropsOnChange);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.computedProps = propsMapper(_this.props), _temp), possibleConstructorReturn(_this, _ret);
        }

        WithPropsOnChange.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          if (shouldMap(this.props, nextProps)) {
            this.computedProps = propsMapper(nextProps);
          }
        };

        WithPropsOnChange.prototype.render = function render() {
          return factory(_extends$7({}, this.props, this.computedProps));
        };

        return WithPropsOnChange;
      }(React.Component);

      return WithPropsOnChange;
    };
  };

  var mapValues = function mapValues(obj, func) {
    var result = {};
    /* eslint-disable no-restricted-syntax */

    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        result[key] = func(obj[key], key);
      }
    }
    /* eslint-enable no-restricted-syntax */


    return result;
  };
  /* eslint-disable no-console */


  var withHandlers = function withHandlers(handlers) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var WithHandlers = function (_Component) {
        inherits(WithHandlers, _Component);

        function WithHandlers() {
          var _temp, _this, _ret;

          classCallCheck(this, WithHandlers);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), possibleConstructorReturn(_this, _ret);
        }

        WithHandlers.prototype.componentWillReceiveProps = function componentWillReceiveProps() {
          this.cachedHandlers = {};
        };

        WithHandlers.prototype.render = function render() {
          return factory(_extends$7({}, this.props, this.handlers));
        };

        return WithHandlers;
      }(React.Component);

      var _initialiseProps = function _initialiseProps() {
        var _this2 = this;

        this.cachedHandlers = {};
        this.handlers = mapValues(typeof handlers === 'function' ? handlers(this.props) : handlers, function (createHandler, handlerName) {
          return function () {
            var cachedHandler = _this2.cachedHandlers[handlerName];

            if (cachedHandler) {
              return cachedHandler.apply(undefined, arguments);
            }

            var handler = createHandler(_this2.props);
            _this2.cachedHandlers[handlerName] = handler;

            return handler.apply(undefined, arguments);
          };
        });
      };

      return WithHandlers;
    };
  };

  var defaultProps = function defaultProps(props) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var DefaultProps = function DefaultProps(ownerProps) {
        return factory(ownerProps);
      };

      DefaultProps.defaultProps = props;

      return DefaultProps;
    };
  };

  var omit = function omit(obj, keys) {
    var rest = objectWithoutProperties(obj, []);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (rest.hasOwnProperty(key)) {
        delete rest[key];
      }
    }

    return rest;
  };

  var renameProp = function renameProp(oldName, newName) {
    var hoc = mapProps(function (props) {
      var _babelHelpers$extends;

      return _extends$7({}, omit(props, [oldName]), (_babelHelpers$extends = {}, _babelHelpers$extends[newName] = props[oldName], _babelHelpers$extends));
    });

    return hoc;
  };

  var keys = Object.keys;

  var mapKeys = function mapKeys(obj, func) {
    return keys(obj).reduce(function (result, key) {
      var val = obj[key];
      /* eslint-disable no-param-reassign */

      result[func(val, key)] = val;
      /* eslint-enable no-param-reassign */

      return result;
    }, {});
  };

  var renameProps = function renameProps(nameMap) {
    var hoc = mapProps(function (props) {
      return _extends$7({}, omit(props, keys(nameMap)), mapKeys(pick(props, keys(nameMap)), function (_, oldName) {
        return nameMap[oldName];
      }));
    });

    return hoc;
  };

  var flattenProp = function flattenProp(propName) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var FlattenProp = function FlattenProp(props) {
        return factory(_extends$7({}, props, props[propName]));
      };

      return FlattenProp;
    };
  };

  var withState = function withState(stateName, stateUpdaterName, initialState) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var WithState = function (_Component) {
        inherits(WithState, _Component);

        function WithState() {
          var _temp, _this, _ret;

          classCallCheck(this, WithState);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            stateValue: typeof initialState === 'function' ? initialState(_this.props) : initialState
          }, _this.updateStateValue = function (updateFn, callback) {
            return _this.setState(function (_ref) {
              var stateValue = _ref.stateValue;
              return {
                stateValue: typeof updateFn === 'function' ? updateFn(stateValue) : updateFn
              };
            }, callback);
          }, _temp), possibleConstructorReturn(_this, _ret);
        }

        WithState.prototype.render = function render() {
          var _babelHelpers$extends;

          return factory(_extends$7({}, this.props, (_babelHelpers$extends = {}, _babelHelpers$extends[stateName] = this.state.stateValue, _babelHelpers$extends[stateUpdaterName] = this.updateStateValue, _babelHelpers$extends)));
        };

        return WithState;
      }(React.Component);

      return WithState;
    };
  };

  var withStateHandlers = function withStateHandlers(initialState, stateUpdaters) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var WithStateHandlers = function (_Component) {
        inherits(WithStateHandlers, _Component);

        function WithStateHandlers() {
          var _temp, _this, _ret;

          classCallCheck(this, WithStateHandlers);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), possibleConstructorReturn(_this, _ret);
        }

        WithStateHandlers.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
          var propsChanged = nextProps !== this.props; // the idea is to skip render if stateUpdater handler return undefined
          // this allows to create no state update handlers with access to state and props

          var stateChanged = !shallowEqual_1(nextState, this.state);
          return propsChanged || stateChanged;
        };

        WithStateHandlers.prototype.render = function render() {
          return factory(_extends$7({}, this.props, this.state, this.stateUpdaters));
        };

        return WithStateHandlers;
      }(React.Component);

      var _initialiseProps = function _initialiseProps() {
        var _this2 = this;

        this.state = typeof initialState === 'function' ? initialState(this.props) : initialState;
        this.stateUpdaters = mapValues(stateUpdaters, function (handler) {
          return function (mayBeEvent) {
            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            } // Having that functional form of setState can be called async
            // we need to persist SyntheticEvent


            if (mayBeEvent && typeof mayBeEvent.persist === 'function') {
              mayBeEvent.persist();
            }

            _this2.setState(function (state, props) {
              return handler(state, props).apply(undefined, [mayBeEvent].concat(args));
            });
          };
        });
      };

      return WithStateHandlers;
    };
  };

  var withReducer = function withReducer(stateName, dispatchName, reducer, initialState) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var WithReducer = function (_Component) {
        inherits(WithReducer, _Component);

        function WithReducer() {
          var _temp, _this, _ret;

          classCallCheck(this, WithReducer);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            stateValue: _this.initializeStateValue()
          }, _this.dispatch = function (action) {
            return _this.setState(function (_ref) {
              var stateValue = _ref.stateValue;
              return {
                stateValue: reducer(stateValue, action)
              };
            });
          }, _temp), possibleConstructorReturn(_this, _ret);
        }

        WithReducer.prototype.initializeStateValue = function initializeStateValue() {
          if (initialState !== undefined) {
            return typeof initialState === 'function' ? initialState(this.props) : initialState;
          }

          return reducer(undefined, {
            type: '@@recompose/INIT'
          });
        };

        WithReducer.prototype.render = function render() {
          var _babelHelpers$extends;

          return factory(_extends$7({}, this.props, (_babelHelpers$extends = {}, _babelHelpers$extends[stateName] = this.state.stateValue, _babelHelpers$extends[dispatchName] = this.dispatch, _babelHelpers$extends)));
        };

        return WithReducer;
      }(React.Component);

      return WithReducer;
    };
  };

  var identity = function identity(Component$$1) {
    return Component$$1;
  };

  var branch = function branch(test, left) {
    var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : identity;
    return function (BaseComponent) {
      var leftFactory = void 0;
      var rightFactory = void 0;

      var Branch = function Branch(props) {
        if (test(props)) {
          leftFactory = leftFactory || React.createFactory(left(BaseComponent));
          return leftFactory(props);
        }

        rightFactory = rightFactory || React.createFactory(right(BaseComponent));
        return rightFactory(props);
      };

      return Branch;
    };
  };

  var renderComponent = function renderComponent(Component$$1) {
    return function (_) {
      var factory = React.createFactory(Component$$1);

      var RenderComponent = function RenderComponent(props) {
        return factory(props);
      };

      return RenderComponent;
    };
  };

  var Nothing = function (_Component) {
    inherits(Nothing, _Component);

    function Nothing() {
      classCallCheck(this, Nothing);
      return possibleConstructorReturn(this, _Component.apply(this, arguments));
    }

    Nothing.prototype.render = function render() {
      return null;
    };

    return Nothing;
  }(React.Component);

  var renderNothing = function renderNothing(_) {
    return Nothing;
  };

  var shouldUpdate = function shouldUpdate(test) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var ShouldUpdate = function (_Component) {
        inherits(ShouldUpdate, _Component);

        function ShouldUpdate() {
          classCallCheck(this, ShouldUpdate);
          return possibleConstructorReturn(this, _Component.apply(this, arguments));
        }

        ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
          return test(this.props, nextProps);
        };

        ShouldUpdate.prototype.render = function render() {
          return factory(this.props);
        };

        return ShouldUpdate;
      }(React.Component);

      return ShouldUpdate;
    };
  };

  var pure = function pure(BaseComponent) {
    var hoc = shouldUpdate(function (props, nextProps) {
      return !shallowEqual_1(props, nextProps);
    });

    return hoc(BaseComponent);
  };

  var onlyUpdateForKeys = function onlyUpdateForKeys(propKeys) {
    var hoc = shouldUpdate(function (props, nextProps) {
      return !shallowEqual_1(pick(nextProps, propKeys), pick(props, propKeys));
    });

    return hoc;
  };

  var onlyUpdateForPropTypes = function onlyUpdateForPropTypes(BaseComponent) {
    var propTypes = BaseComponent.propTypes;

    var propKeys = Object.keys(propTypes || {});
    var OnlyUpdateForPropTypes = onlyUpdateForKeys(propKeys)(BaseComponent);

    return OnlyUpdateForPropTypes;
  };

  var withContext = function withContext(childContextTypes, getChildContext) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var WithContext = function (_Component) {
        inherits(WithContext, _Component);

        function WithContext() {
          var _temp, _this, _ret;

          classCallCheck(this, WithContext);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getChildContext = function () {
            return getChildContext(_this.props);
          }, _temp), possibleConstructorReturn(_this, _ret);
        }

        WithContext.prototype.render = function render() {
          return factory(this.props);
        };

        return WithContext;
      }(React.Component);

      WithContext.childContextTypes = childContextTypes;

      return WithContext;
    };
  };

  var getContext = function getContext(contextTypes) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var GetContext = function GetContext(ownerProps, context) {
        return factory(_extends$7({}, ownerProps, context));
      };

      GetContext.contextTypes = contextTypes;

      return GetContext;
    };
  };
  /* eslint-disable no-console */


  var lifecycle = function lifecycle(spec) {
    return function (BaseComponent) {
      var factory = React.createFactory(BaseComponent);

      var Lifecycle = function (_Component) {
        inherits(Lifecycle, _Component);

        function Lifecycle() {
          classCallCheck(this, Lifecycle);
          return possibleConstructorReturn(this, _Component.apply(this, arguments));
        }

        Lifecycle.prototype.render = function render() {
          return factory(_extends$7({}, this.props, this.state));
        };

        return Lifecycle;
      }(React.Component);

      Object.keys(spec).forEach(function (hook) {
        return Lifecycle.prototype[hook] = spec[hook];
      });

      return Lifecycle;
    };
  };

  var isClassComponent = function isClassComponent(Component$$1) {
    return Boolean(Component$$1 && Component$$1.prototype && typeof Component$$1.prototype.render === 'function');
  };

  var toClass = function toClass(baseComponent) {
    if (isClassComponent(baseComponent)) {
      return baseComponent;
    }

    var ToClass = function (_Component) {
      inherits(ToClass, _Component);

      function ToClass() {
        classCallCheck(this, ToClass);
        return possibleConstructorReturn(this, _Component.apply(this, arguments));
      }

      ToClass.prototype.render = function render() {
        if (typeof baseComponent === 'string') {
          return React__default["default"].createElement(baseComponent, this.props);
        }

        return baseComponent(this.props, this.context);
      };

      return ToClass;
    }(React.Component);

    ToClass.displayName = getDisplayName(baseComponent);
    ToClass.propTypes = baseComponent.propTypes;
    ToClass.contextTypes = baseComponent.contextTypes;
    ToClass.defaultProps = baseComponent.defaultProps;
    return ToClass;
  };

  var setPropTypes = function setPropTypes(propTypes) {
    return setStatic('propTypes', propTypes);
  };

  function compose() {
    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }

    if (funcs.length === 0) {
      return function (arg) {
        return arg;
      };
    }

    if (funcs.length === 1) {
      return funcs[0];
    }

    return funcs.reduce(function (a, b) {
      return function () {
        return a(b.apply(undefined, arguments));
      };
    });
  }

  var createSink = function createSink(callback) {
    return function (_Component) {
      inherits(Sink, _Component);

      function Sink() {
        classCallCheck(this, Sink);
        return possibleConstructorReturn(this, _Component.apply(this, arguments));
      }

      Sink.prototype.componentWillMount = function componentWillMount() {
        callback(this.props);
      };

      Sink.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        callback(nextProps);
      };

      Sink.prototype.render = function render() {
        return null;
      };

      return Sink;
    }(React.Component);
  };

  var componentFromProp = function componentFromProp(propName) {
    var Component$$1 = function Component$$1(props) {
      return React.createElement(props[propName], omit(props, [propName]));
    };

    Component$$1.displayName = 'componentFromProp(' + propName + ')';
    return Component$$1;
  };

  var nest = function nest() {
    for (var _len = arguments.length, Components = Array(_len), _key = 0; _key < _len; _key++) {
      Components[_key] = arguments[_key];
    }

    var factories = Components.map(React.createFactory);

    var Nest = function Nest(_ref) {
      var props = objectWithoutProperties(_ref, []),
          children = _ref.children;
      return factories.reduceRight(function (child, factory) {
        return factory(props, child);
      }, children);
    };

    return Nest;
  };

  var hoistStatics = function hoistStatics(higherOrderComponent) {
    return function (BaseComponent) {
      var NewComponent = higherOrderComponent(BaseComponent);
      hoistNonReactStatics_cjs(NewComponent, BaseComponent);
      return NewComponent;
    };
  };

  var _config = {
    fromESObservable: null,
    toESObservable: null
  };

  var configureObservable = function configureObservable(c) {
    _config = c;
  };

  var config = {
    fromESObservable: function fromESObservable(observable) {
      return typeof _config.fromESObservable === 'function' ? _config.fromESObservable(observable) : observable;
    },
    toESObservable: function toESObservable(stream) {
      return typeof _config.toESObservable === 'function' ? _config.toESObservable(stream) : stream;
    }
  };

  var componentFromStreamWithConfig = function componentFromStreamWithConfig(config$$1) {
    return function (propsToVdom) {
      return function (_Component) {
        inherits(ComponentFromStream, _Component);

        function ComponentFromStream() {
          var _config$fromESObserva;

          var _temp, _this, _ret;

          classCallCheck(this, ComponentFromStream);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
            vdom: null
          }, _this.propsEmitter = createChangeEmitter_1(), _this.props$ = config$$1.fromESObservable((_config$fromESObserva = {
            subscribe: function subscribe(observer) {
              var unsubscribe = _this.propsEmitter.listen(function (props) {
                if (props) {
                  observer.next(props);
                } else {
                  observer.complete();
                }
              });

              return {
                unsubscribe: unsubscribe
              };
            }
          }, _config$fromESObserva[result] = function () {
            return this;
          }, _config$fromESObserva)), _this.vdom$ = config$$1.toESObservable(propsToVdom(_this.props$)), _temp), possibleConstructorReturn(_this, _ret);
        } // Stream of props
        // Stream of vdom


        ComponentFromStream.prototype.componentWillMount = function componentWillMount() {
          var _this2 = this; // Subscribe to child prop changes so we know when to re-render


          this.subscription = this.vdom$.subscribe({
            next: function next(vdom) {
              _this2.setState({
                vdom: vdom
              });
            }
          });
          this.propsEmitter.emit(this.props);
        };

        ComponentFromStream.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          // Receive new props from the owner
          this.propsEmitter.emit(nextProps);
        };

        ComponentFromStream.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
          return nextState.vdom !== this.state.vdom;
        };

        ComponentFromStream.prototype.componentWillUnmount = function componentWillUnmount() {
          // Call without arguments to complete stream
          this.propsEmitter.emit(); // Clean-up subscription before un-mounting

          this.subscription.unsubscribe();
        };

        ComponentFromStream.prototype.render = function render() {
          return this.state.vdom;
        };

        return ComponentFromStream;
      }(React.Component);
    };
  };

  var componentFromStream = function componentFromStream(propsToVdom) {
    return componentFromStreamWithConfig(config)(propsToVdom);
  };

  var identity$1 = function identity(t) {
    return t;
  };

  var mapPropsStreamWithConfig = function mapPropsStreamWithConfig(config$$1) {
    var componentFromStream = componentFromStreamWithConfig({
      fromESObservable: identity$1,
      toESObservable: identity$1
    });
    return function (transform) {
      return function (BaseComponent) {
        var factory = React.createFactory(BaseComponent);
        var fromESObservable = config$$1.fromESObservable,
            toESObservable = config$$1.toESObservable;
        return componentFromStream(function (props$) {
          var _ref;

          return _ref = {
            subscribe: function subscribe(observer) {
              var subscription = toESObservable(transform(fromESObservable(props$))).subscribe({
                next: function next(childProps) {
                  return observer.next(factory(childProps));
                }
              });
              return {
                unsubscribe: function unsubscribe() {
                  return subscription.unsubscribe();
                }
              };
            }
          }, _ref[result] = function () {
            return this;
          }, _ref;
        });
      };
    };
  };

  var mapPropsStream = function mapPropsStream(transform) {
    var hoc = mapPropsStreamWithConfig(config)(transform);

    return hoc;
  };

  var createEventHandlerWithConfig = function createEventHandlerWithConfig(config$$1) {
    return function () {
      var _config$fromESObserva;

      var emitter = createChangeEmitter_1();
      var stream = config$$1.fromESObservable((_config$fromESObserva = {
        subscribe: function subscribe(observer) {
          var unsubscribe = emitter.listen(function (value) {
            return observer.next(value);
          });
          return {
            unsubscribe: unsubscribe
          };
        }
      }, _config$fromESObserva[result] = function () {
        return this;
      }, _config$fromESObserva));
      return {
        handler: emitter.emit,
        stream: stream
      };
    };
  };

  var createEventHandler = createEventHandlerWithConfig(config); // Higher-order component helpers

  var Recompose = /*#__PURE__*/Object.freeze({
    __proto__: null,
    mapProps: mapProps,
    withProps: withProps,
    withPropsOnChange: withPropsOnChange,
    withHandlers: withHandlers,
    defaultProps: defaultProps,
    renameProp: renameProp,
    renameProps: renameProps,
    flattenProp: flattenProp,
    withState: withState,
    withStateHandlers: withStateHandlers,
    withReducer: withReducer,
    branch: branch,
    renderComponent: renderComponent,
    renderNothing: renderNothing,
    shouldUpdate: shouldUpdate,
    pure: pure,
    onlyUpdateForKeys: onlyUpdateForKeys,
    onlyUpdateForPropTypes: onlyUpdateForPropTypes,
    withContext: withContext,
    getContext: getContext,
    lifecycle: lifecycle,
    toClass: toClass,
    setStatic: setStatic,
    setPropTypes: setPropTypes,
    setDisplayName: setDisplayName,
    compose: compose,
    getDisplayName: getDisplayName,
    wrapDisplayName: wrapDisplayName,
    shallowEqual: shallowEqual_1,
    isClassComponent: isClassComponent,
    createSink: createSink,
    componentFromProp: componentFromProp,
    nest: nest,
    hoistStatics: hoistStatics,
    componentFromStream: componentFromStream,
    componentFromStreamWithConfig: componentFromStreamWithConfig,
    mapPropsStream: mapPropsStream,
    mapPropsStreamWithConfig: mapPropsStreamWithConfig,
    createEventHandler: createEventHandler,
    createEventHandlerWithConfig: createEventHandlerWithConfig,
    setObservableConfig: configureObservable
  });

  var require$$3 = /*@__PURE__*/getAugmentedNamespace(Recompose);

  var helpers = {};

  var hasRequiredHelpers;

  function requireHelpers() {
    if (hasRequiredHelpers) return helpers;
    hasRequiredHelpers = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports);
        }
      })(commonjsGlobal, function (exports) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        exports.calculateRgba = function calculateRgba(color, opacity) {
          if (color[0] === '#') {
            color = color.slice(1);
          }

          if (color.length === 3) {
            var res = '';
            color.split('').forEach(function (c) {
              res += c;
              res += c;
            });
            color = res;
          }

          var rgbValues = color.match(/.{2}/g).map(function (hex) {
            return parseInt(hex, 16);
          }).join(', ');
          return 'rgba(' + rgbValues + ', ' + opacity + ')';
        };
      });
    })(helpers);

    return helpers;
  }

  var hasRequiredBarLoader;

  function requireBarLoader() {
    if (hasRequiredBarLoader) return BarLoader;
    hasRequiredBarLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3, requireHelpers());
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose, _helpers) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });
        exports.Loader = undefined;

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var long = (0, _emotion.keyframes)('0%{left:-35%;right:100%}60%{left:100%;right:-90%}100%{left:100%;right:-90%}');
        var short = (0, _emotion.keyframes)('0%{left:-200%;right:100%}60%{left:107%;right:-8%}100%{left:107%;right:-8%}');

        var Loader = exports.Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return /*#__PURE__*/(0, _emotion.css)('{position:absolute;height:', _this.props.height, 'px;overflow:hidden;background-color:', _this.props.color, ';background-clip:padding-box;display:block;border-radius:2px;will-change:left,right;animation-fill-mode:forwards;animation:', i === 1 ? long : short, ' 2.1s ', i === 2 ? '1.15s' : '', ' ', i === 1 ? 'cubic-bezier(0.65, 0.815, 0.735, 0.395)' : 'cubic-bezier(0.165, 0.84, 0.44, 1)', ' infinite;}');
            }, _this.wrapper = function () {
              return /*#__PURE__*/(0, _emotion.css)('{position:relative;width:', _this.props.width, 'px;height:', _this.props.height, 'px;overflow:hidden;background-color:', (0, _helpers.calculateRgba)(_this.props.color, 0.2), ';background-clip:padding-box;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          width: _propTypes2.default.number,
          height: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          width: 100,
          height: 4
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'width', 'height'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(BarLoader);

    return BarLoader;
  }

  var BeatLoader = {};

  var hasRequiredBeatLoader;

  function requireBeatLoader() {
    if (hasRequiredBeatLoader) return BeatLoader;
    hasRequiredBeatLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var beat = (0, _emotion.keyframes)('50%{transform:scale(0.75);opacity:0.2}100%{transform:scale(1);opacity:1}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{display:inline-block;background-color:', _this.props.color, ';width:', _this.props.size, 'px;height:', _this.props.size, 'px;margin:', _this.props.margin, ';border-radius:100%;animation:', beat, ' 0.7s ', i % 2 ? '0s' : '0.35s', ' infinite linear;animation-fill-mode:both;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', null, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(BeatLoader);

    return BeatLoader;
  }

  var BounceLoader = {};

  var hasRequiredBounceLoader;

  function requireBounceLoader() {
    if (hasRequiredBounceLoader) return BounceLoader;
    hasRequiredBounceLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var bounce = (0, _emotion.keyframes)('0%,100%{transform:scale(0)}50%{transform:scale(1.0)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;height:', _this.props.size, 'px;width:', _this.props.size, 'px;background-color:', _this.props.color, ';border-radius:100%;opacity:0.6;top:0;left:0;animation-fill-mode:both;animation:', bounce, ' 2.1s ', i === 1 ? '1s' : '0s', ' infinite ease-in-out;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;width:', _this.props.size, 'px;height:', _this.props.size, 'px;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 60
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(BounceLoader);

    return BounceLoader;
  }

  var CircleLoader = {};

  var hasRequiredCircleLoader;

  function requireCircleLoader() {
    if (hasRequiredCircleLoader) return CircleLoader;
    hasRequiredCircleLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var circle = (0, _emotion.keyframes)('0%{transform:rotate(0deg)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;height:', _this.props.size * (1 - i / 10), 'px;width:', _this.props.size * (1 - i / 10), 'px;border:1px solid ', _this.props.color, ';border-radius:100%;transition:2s;border-bottom:none;border-right:none;top:', i * 0.7 * 2.5, '%;left:', i * 0.35 * 2.5, '%;animation-fill-mode:\'\';animation:', circle, ' 1s ', i * 0.2, 's infinite linear;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;width:', _this.props.size, 'px;height:', _this.props.size, 'px;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(0)
              }), _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              }), _react2.default.createElement('div', {
                className: this.style(4)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 50
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(CircleLoader);

    return CircleLoader;
  }

  var ClipLoader = {};

  var hasRequiredClipLoader;

  function requireClipLoader() {
    if (hasRequiredClipLoader) return ClipLoader;
    hasRequiredClipLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        } // This returns an animation


        var clip = (0, _emotion.keyframes)('0%{transform:rotate(0deg) scale(1)}50%{transform:rotate(180deg) scale(0.8)}100%{transform:rotate(360deg) scale(1)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function () {
              return (0, _emotion.css)('{background:transparent !important;width:', _this.props.size, 'px;height:', _this.props.size, 'px;border-radius:100%;border:2px solid;border-color:', _this.props.color, ';border-bottom-color:transparent;display:inline-block;animation:', clip, ' 0.75s 0s infinite linear;animation-fill-mode:both;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.style()
              }) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 35
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(ClipLoader);

    return ClipLoader;
  }

  var ClimbingBoxLoader = {};

  var hasRequiredClimbingBoxLoader;

  function requireClimbingBoxLoader() {
    if (hasRequiredClimbingBoxLoader) return ClimbingBoxLoader;
    hasRequiredClimbingBoxLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var climbingBox = (0, _emotion.keyframes)('0%{transform:translate(0,-1em) rotate(-45deg)}5%{transform:translate(0,-1em) rotate(-50deg)}20%{transform:translate(1em,-2em) rotate(47deg)}25%{transform:translate(1em,-2em) rotate(45deg)}30%{transform:translate(1em,-2em) rotate(40deg)}45%{transform:translate(2em,-3em) rotate(137deg)}50%{transform:translate(2em,-3em) rotate(135deg)}55%{transform:translate(2em,-3em) rotate(130deg)}70%{transform:translate(3em,-4em) rotate(217deg)}75%{transform:translate(3em,-4em) rotate(220deg)}100%{transform:translate(0,-1em) rotate(-225deg)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function () {
              return (0, _emotion.css)('{position:absolute;left:0;bottom:-0.1em;height:1em;width:1em;background-color:transparent;border-radius:15%;border:0.25em solid ', _this.props.color, ';transform:translate(0,-1em) rotate(-45deg);animation-fill-mode:both;animation:', climbingBox, ' 2.5s infinite cubic-bezier(.79,0,.47,.97);}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:absolute;top:50%;left:50%;margin-top:-2.7em;margin-left:-2.7em;width:5.4em;height:5.4em;font-size:', _this.props.size, ';}');
            }, _this.hill = function () {
              return (0, _emotion.css)('{position:absolute;width:7.1em;height:7.1em;top:1.7em;left:1.7em;border-left:0.25em solid ', _this.props.color, ';transform:rotate(45deg);}');
            }, _this.container = (0, _emotion.css)('{position:relative;width:7.1em;height:7.1em;}'), _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.container
              }, _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style()
              }), _react2.default.createElement('div', {
                className: this.hill()
              }))) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(ClimbingBoxLoader);

    return ClimbingBoxLoader;
  }

  var DotLoader = {};

  var hasRequiredDotLoader;

  function requireDotLoader() {
    if (hasRequiredDotLoader) return DotLoader;
    hasRequiredDotLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var rotate = (0, _emotion.keyframes)('100%{transform:rotate(360deg)}');
        var bounce = (0, _emotion.keyframes)('0%,100%{transform:scale(0)}50%{transform:scale(1.0)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;top:', i % 2 ? '0' : 'auto', ';bottom:', i % 2 ? 'auto' : '0', ';height:', _this.props.size / 2, 'px;width:', _this.props.size / 2, 'px;background-color:', _this.props.color, ';border-radius:100%;animation-fill-mode:forwards;animation:', bounce, ' 2s ', i === 2 ? '-1s' : '0s', ' infinite linear;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;width:', _this.props.size, 'px;height:', _this.props.size, 'px;animation-fill-mode:forwards;animation:', rotate, ' 2s 0s infinite linear;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 60
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(DotLoader);

    return DotLoader;
  }

  var FadeLoader = {};

  var hasRequiredFadeLoader;

  function requireFadeLoader() {
    if (hasRequiredFadeLoader) return FadeLoader;
    hasRequiredFadeLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var fade = (0, _emotion.keyframes)('50%{opacity:0.3}100%{opacity:1}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;height:', _this.props.height, 'px;width:', _this.props.width, 'px;margin:', _this.props.margin, ';background-color:', _this.props.color, ';border-radius:', _this.props.radius, ';transition:2s;animation-fill-mode:\'both\';animation:', fade, ' 1.2s ', i * 0.12, 's infinite ease-in-out;}');
            }, _this.radius = 20, _this.quarter = _this.radius / 2 + _this.radius / 5.5, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;font-size:0;top:', _this.radius, 'px;left:', _this.radius, 'px;width:', _this.radius * 3, 'px;height:', _this.radius * 3, 'px;}');
            }, _this.a = function () {
              return (0, _emotion.css)('composes:', _this.style(1), ';top:', _this.radius, ';left:0;');
            }, _this.b = function () {
              return (0, _emotion.css)('composes:', _this.style(2), ';top:', _this.quarter, ';left:', _this.quarter, ';transform:rotate(-45deg);');
            }, _this.c = function () {
              return (0, _emotion.css)('composes:', _this.style(3), ';top:0;left:', _this.radius, ';transform:rotate(90deg);');
            }, _this.d = function () {
              return (0, _emotion.css)('composes:', _this.style(4), ';top:', -_this.quarter, ';left:', _this.quarter, ';transform:rotate(45deg);');
            }, _this.e = function () {
              return (0, _emotion.css)('composes:', _this.style(5), ';top:', -_this.radius, ';left:0;');
            }, _this.f = function () {
              return (0, _emotion.css)('composes:', _this.style(6), ';top:', -_this.quarter, ';left:', -_this.quarter, ';transform:rotate(-45deg);');
            }, _this.g = function () {
              return (0, _emotion.css)('composes:', _this.style(7), ';top:0;left:', -_this.radius, ';transform:rotate(90deg);');
            }, _this.h = function () {
              return (0, _emotion.css)('composes:', _this.style(8), ';top:', _this.quarter, ';left:', -_this.quarter, ';transform:rotate(45deg);');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.a()
              }), _react2.default.createElement('div', {
                className: this.b()
              }), _react2.default.createElement('div', {
                className: this.c()
              }), _react2.default.createElement('div', {
                className: this.d()
              }), _react2.default.createElement('div', {
                className: this.e()
              }), _react2.default.createElement('div', {
                className: this.f()
              }), _react2.default.createElement('div', {
                className: this.g()
              }), _react2.default.createElement('div', {
                className: this.h()
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          height: _propTypes2.default.number,
          width: _propTypes2.default.number,
          margin: _propTypes2.default.string,
          radius: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          height: 15,
          width: 5,
          margin: '2px',
          radius: 2
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'height', 'width', 'margin', 'radius'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(FadeLoader);

    return FadeLoader;
  }

  var GridLoader = {};

  var hasRequiredGridLoader;

  function requireGridLoader() {
    if (hasRequiredGridLoader) return GridLoader;
    hasRequiredGridLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var grid = (0, _emotion.keyframes)('0%{transform:scale(1)}50%{transform:scale(0.5);opacity:0.7}100%{transform:scale(1);opacity:1}');

        var random = function random(top) {
          return Math.random() * top;
        };

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (rand) {
              return (0, _emotion.css)('{display:inline-block;background-color:', _this.props.color, ';width:', _this.props.size, ';height:', _this.props.size, ';margin:', _this.props.margin, ';border-radius:100%;animation-fill-mode:\'both\';animation:', grid, ' ', rand / 100 + 0.6, 's ', rand / 100 - 0.2, 's infinite ease;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{width:', parseFloat(_this.props.size) * 3 + parseFloat(_this.props.margin) * 6, 'px;font-size:0;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              }), _react2.default.createElement('div', {
                className: this.style(random(100))
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(GridLoader);

    return GridLoader;
  }

  var HashLoader = {};

  var hasRequiredHashLoader;

  function requireHashLoader() {
    if (hasRequiredHashLoader) return HashLoader;
    hasRequiredHashLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3, requireHelpers());
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose, _helpers) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.thickness = function () {
              return _this.props.size / 5;
            }, _this.lat = function () {
              return (_this.props.size - _this.thickness()) / 2;
            }, _this.offset = function () {
              return _this.lat() - _this.thickness();
            }, _this.color = function () {
              return (0, _helpers.calculateRgba)(_this.props.color, 0.75);
            }, _this.before = function () {
              return (0, _emotion.keyframes)('0%{width:', _this.thickness(), 'px;box-shadow:', _this.lat(), 'px ', -_this.offset(), 'px ', _this.color(), ',', -_this.lat(), 'px ', _this.offset(), 'px ', _this.color(), '}35%{width:', _this.props.size, 'px;box-shadow:0 ', -_this.offset(), 'px ', _this.color(), ',0 ', _this.offset(), 'px ', _this.color(), '}70%{width:', _this.thickness(), 'px;box-shadow:', -_this.lat(), 'px ', -_this.offset(), 'px ', _this.color(), ',', _this.lat(), 'px ', _this.offset(), 'px ', _this.color(), '}100%{box-shadow:', _this.lat(), 'px ', -_this.offset(), 'px ', _this.color(), ',', -_this.lat(), 'px ', _this.offset(), 'px ', _this.color(), '}');
            }, _this.after = function () {
              return (0, _emotion.keyframes)('0%{height:', _this.thickness(), 'px;box-shadow:', _this.offset(), 'px ', _this.lat(), 'px ', _this.color(), ',', -_this.offset(), 'px ', -_this.lat(), 'px ', _this.color(), '}35%{height:', _this.props.size, 'px;box-shadow:', _this.offset(), 'px 0 ', _this.color(), ',', -_this.offset(), 'px 0 ', _this.color(), '}70%{height:', _this.thickness(), 'px;box-shadow:', _this.offset(), 'px ', -_this.lat(), 'px ', _this.color(), ',', -_this.offset(), 'px ', _this.lat(), 'px ', _this.color(), '}100%{box-shadow:', _this.offset(), 'px ', _this.lat(), 'px ', _this.color(), ',', -_this.offset(), 'px ', -_this.lat(), 'px ', _this.color(), '}');
            }, _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;content:\'\';top:50%;left:50%;display:block;width:', _this.props.size / 5, 'px;height:', _this.props.size / 5, 'px;border-radius:', _this.props.size / 10, 'px;transform:translate(-50%,-50%);animation-fill-mode:none;animation:', i === 1 ? _this.before() : _this.after(), ' 2s infinite;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;width:', _this.props.size, 'px;height:', _this.props.size, 'px;transform:rotate(165deg);}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          size: _propTypes2.default.number,
          color: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          size: 50,
          color: '#000000'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(HashLoader);

    return HashLoader;
  }

  var MoonLoader = {};

  var hasRequiredMoonLoader;

  function requireMoonLoader() {
    if (hasRequiredMoonLoader) return MoonLoader;
    hasRequiredMoonLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var moon = (0, _emotion.keyframes)('100%{transform:rotate(360deg)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.moonSize = function () {
              return _this.props.size / 7;
            }, _this.ballStyle = function (size) {
              return (0, _emotion.css)('{width:', size, 'px;height:', size, 'px;border-radius:100%;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;width:', _this.props.size + _this.moonSize() * 2, 'px;height:', _this.props.size + _this.moonSize() * 2, 'px;animation:', moon, ' 0.6s 0s infinite linear;animation-fill-mode:forwards;}');
            }, _this.ball = function () {
              return (0, _emotion.css)('composes:', _this.ballStyle(_this.moonSize()), ';background-color:', _this.props.color, ';opacity:0.8;position:absolute;top:', _this.props.size / 2 - _this.moonSize() / 2, 'px;animation:', moon, ' 0.6s 0s infinite linear;animation-fill-mode:forwards;');
            }, _this.circle = function () {
              return (0, _emotion.css)('composes:', _this.ballStyle(_this.props.size), ';border:', _this.moonSize(), 'px solid ', _this.props.color, ';opacity:0.1;');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.ball()
              }), _react2.default.createElement('div', {
                className: this.circle()
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 60
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(MoonLoader);

    return MoonLoader;
  }

  var PacmanLoader = {};

  var hasRequiredPacmanLoader;

  function requirePacmanLoader() {
    if (hasRequiredPacmanLoader) return PacmanLoader;
    hasRequiredPacmanLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        } // This returns an animation


        var pacman = [(0, _emotion.keyframes)('0%{transform:rotate(0deg)}50%{transform:rotate(-44deg)}'), (0, _emotion.keyframes)('0%{transform:rotate(0deg)}50%{transform:rotate(44deg)}')];

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.ball = function () {
              return (0, _emotion.keyframes)('75%{opacity:0.7}100%{transform:translate(', -4 * _this.props.size, 'px,', -_this.props.size / 4, 'px)}');
            }, _this.ballStyle = function (i) {
              return (0, _emotion.css)('{width:10px;height:10px;background-color:', _this.props.color, ';margin:', _this.props.margin, ';border-radius:100%;transform:translate(0,', -_this.props.size / 4, 'px);position:absolute;top:25px;left:100px;animation:', _this.ball(), ' 1s ', i * 0.25, 's infinite linear;animation-fill-mode:both;}');
            }, _this.s1 = function () {
              return _this.props.size + 'px solid transparent';
            }, _this.s2 = function () {
              return _this.props.size + 'px solid ' + _this.props.color;
            }, _this.pacmanStyle = function (i) {
              return (0, _emotion.css)('{width:0;height:0;border-right:', _this.s1(), ';border-top:', i === 0 ? _this.s1() : _this.s2(), ';border-left:', _this.s2(), ';border-bottom:', i === 0 ? _this.s2() : _this.s1(), ';border-radius:', _this.props.size, 'px;position:absolute;animation:', pacman[i], ' 0.8s infinite ease-in-out;animation-fill-mode:both;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;font-size:0;height:', _this.props.size, 'px;width:', _this.props.size, 'px;}');
            }, _this.pac = function () {
              return _this.pacmanStyle(0);
            }, _this.man = function () {
              return (0, _emotion.css)('composes:', _this.pacmanStyle(1), ';position:absolute;');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.pac()
              }), _react2.default.createElement('div', {
                className: this.man()
              }), _react2.default.createElement('div', {
                className: this.ballStyle(2)
              }), _react2.default.createElement('div', {
                className: this.ballStyle(3)
              }), _react2.default.createElement('div', {
                className: this.ballStyle(4)
              }), _react2.default.createElement('div', {
                className: this.ballStyle(5)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 25,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(PacmanLoader);

    return PacmanLoader;
  }

  var PropagateLoader = {};

  var hasRequiredPropagateLoader;

  function requirePropagateLoader() {
    if (hasRequiredPropagateLoader) return PropagateLoader;
    hasRequiredPropagateLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        } // 1.5 4.5 7.5


        var distance = [1, 3, 5];
        var propagate = [(0, _emotion.keyframes)('25%{transform:translateX(-', distance[0], 'rem) scale(0.75)}50%{transform:translateX(-', distance[1], 'rem) scale(0.6)}75%{transform:translateX(-', distance[2], 'rem) scale(0.5)}95%{transform:translateX(0rem) scale(1)}'), (0, _emotion.keyframes)('25%{transform:translateX(-', distance[0], 'rem) scale(0.75)}50%{transform:translateX(-', distance[1], 'rem) scale(0.6)}75%{transform:translateX(-', distance[1], 'rem) scale(0.6)}95%{transform:translateX(0rem) scale(1)}'), (0, _emotion.keyframes)('25%{transform:translateX(-', distance[0], 'rem) scale(0.75)}75%{transform:translateX(-', distance[0], 'rem) scale(0.75)}95%{transform:translateX(0rem) scale(1)}'), (0, _emotion.keyframes)('25%{transform:translateX(', distance[0], 'rem) scale(0.75)}75%{transform:translateX(', distance[0], 'rem) scale(0.75)}95%{transform:translateX(0rem) scale(1)}'), (0, _emotion.keyframes)('25%{transform:translateX(', distance[0], 'rem) scale(0.75)}50%{transform:translateX(', distance[1], 'rem) scale(0.6)}75%{transform:translateX(', distance[1], 'rem) scale(0.6)}95%{transform:translateX(0rem) scale(1)}'), (0, _emotion.keyframes)('25%{transform:translateX(', distance[0], 'rem) scale(0.75)}50%{transform:translateX(', distance[1], 'rem) scale(0.6)}75%{transform:translateX(', distance[2], 'rem) scale(0.5)}95%{transform:translateX(0rem) scale(1)}')];

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;font-size:', _this.props.size / 3, 'px;width:', _this.props.size, 'px;height:', _this.props.size, 'px;background:', _this.props.color, ';border-radius:50%;animation:', propagate[i], ' 1.5s  infinite;animation-fill-mode:forwards;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{position:relative;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(0)
              }), _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              }), _react2.default.createElement('div', {
                className: this.style(4)
              }), _react2.default.createElement('div', {
                className: this.style(5)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          size: _propTypes2.default.number,
          color: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          size: 15,
          color: '#000000'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(PropagateLoader);

    return PropagateLoader;
  }

  var PulseLoader = {};

  var hasRequiredPulseLoader;

  function requirePulseLoader() {
    if (hasRequiredPulseLoader) return PulseLoader;
    hasRequiredPulseLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        } // This returns an animation


        var pulse = (0, _emotion.keyframes)('0%{transform:scale(1);opacity:1}45%{transform:scale(0.1);opacity:0.7}80%{transform:scale(1);opacity:1}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{background-color:', _this.props.color, ';width:', _this.props.size, 'px;height:', _this.props.size, 'px;margin:', _this.props.margin, ';border-radius:100%;display:inline-block;animation:', pulse, ' 0.75s ', i * 0.12, 's infinite cubic-bezier(.2,.68,.18,1.08);animation-fill-mode:both;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', null, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(PulseLoader);

    return PulseLoader;
  }

  var RingLoader = {};

  var hasRequiredRingLoader;

  function requireRingLoader() {
    if (hasRequiredRingLoader) return RingLoader;
    hasRequiredRingLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var right = (0, _emotion.keyframes)('0%{transform:rotateX(0deg) rotateY(0deg) rotateZ(0deg)}100%{transform:rotateX(180deg) rotateY(360deg) rotateZ(360deg)}');
        var left = (0, _emotion.keyframes)('0%{transform:rotateX(0deg) rotateY(0deg) rotateZ(0deg)}100%{transform:rotateX(360deg) rotateY(180deg) rotateZ(360deg)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{position:absolute;top:0;left:0;width:', _this.props.size, 'px;height:', _this.props.size, 'px;border:', _this.props.size / 10, 'px solid ', _this.props.color, ';opacity:0.4;border-radius:100%;animation-fill-mode:forwards;perspective:800px;animation:', i === 1 ? right : left, ' 2s 0s infinite linear;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('{width:', _this.props.size, 'px;height:', _this.props.size, 'px;position:relative;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 60
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(RingLoader);

    return RingLoader;
  }

  var RiseLoader = {};

  var hasRequiredRiseLoader;

  function requireRiseLoader() {
    if (hasRequiredRiseLoader) return RiseLoader;
    hasRequiredRiseLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var riseAmount = 30;
        var even = (0, _emotion.keyframes)('0%{transform:scale(1.1)}25%{translateY(-', riseAmount, 'px)}50%{transform:scale(0.4)}75%{transform:translateY(', riseAmount, 'px)}100%{transform:translateY(0) scale(1.0)}');
        var odd = (0, _emotion.keyframes)('0%{transform:scale(0.4)}25%{translateY(', riseAmount, 'px)}50%{transform:scale(1.1)}75%{transform:translateY(', -riseAmount, 'px)}100%{transform:translateY(0) scale(0.75)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{background-color:', _this.props.color, ';width:', _this.props.size, 'px;height:', _this.props.size, 'px;margin:', _this.props.margin, ';border-radius:100%;display:inline-block;animation:', i % 2 === 0 ? even : odd, ' 1s 0s infinite cubic-bezier(.15,.46,.9,.6);animation-fill-mode:both;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', null, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              }), _react2.default.createElement('div', {
                className: this.style(4)
              }), _react2.default.createElement('div', {
                className: this.style(5)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(RiseLoader);

    return RiseLoader;
  }

  var RotateLoader = {};

  var hasRequiredRotateLoader;

  function requireRotateLoader() {
    if (hasRequiredRotateLoader) return RotateLoader;
    hasRequiredRotateLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var rotate = (0, _emotion.keyframes)('0%{transform:rotate(0deg)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{opacity:0.8;position:absolute;top:0;left:', i % 2 ? -28 : 25, 'px;}');
            }, _this.ball = function () {
              return (0, _emotion.css)('{background-color:', _this.props.color, ';width:', _this.props.size, 'px;height:', _this.props.size, 'px;margin:', _this.props.margin, ';border-radius:100%;}');
            }, _this.wrapper = function () {
              return (0, _emotion.css)('composes:', _this.ball(), ';display:inline-block;position:relative;animation-fill-mode:both;animation:', rotate, ' 1s 0s infinite cubic-bezier(.7,-.13,.22,.86);');
            }, _this.long = function () {
              return (0, _emotion.css)('composes:', _this.ball(), ';composes:', _this.style(1), ';');
            }, _this.short = function () {
              return (0, _emotion.css)('composes:', _this.ball(), ';composes:', _this.style(2), ';');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', {
                className: this.wrapper()
              }, _react2.default.createElement('div', {
                className: this.long()
              }), _react2.default.createElement('div', {
                className: this.short()
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(RotateLoader);

    return RotateLoader;
  }

  var ScaleLoader = {};

  var hasRequiredScaleLoader;

  function requireScaleLoader() {
    if (hasRequiredScaleLoader) return ScaleLoader;
    hasRequiredScaleLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var scale = (0, _emotion.keyframes)('0%{transform:scaley(1.0)}50%{transform:scaley(0.4)}100%{transform:scaley(1.0)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{background-color:', _this.props.color, ';width:', _this.props.width, 'px;height:', _this.props.height, 'px;margin:', _this.props.margin, ';border-radius:', _this.props.radius, 'px;display:inline-block;animation:', scale, ' 1s ', i * 0.1, 's infinite cubic-bezier(.2,.68,.18,1.08);animation-fill-mode:both;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', null, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              }), _react2.default.createElement('div', {
                className: this.style(4)
              }), _react2.default.createElement('div', {
                className: this.style(5)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          height: _propTypes2.default.number,
          width: _propTypes2.default.number,
          margin: _propTypes2.default.string,
          radius: _propTypes2.default.number
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          height: 35,
          width: 4,
          margin: '2px',
          radius: 2
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'height', 'width', 'margin', 'radius'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(ScaleLoader);

    return ScaleLoader;
  }

  var SyncLoader = {};

  var hasRequiredSyncLoader;

  function requireSyncLoader() {
    if (hasRequiredSyncLoader) return SyncLoader;
    hasRequiredSyncLoader = 1;

    (function (exports) {
      (function (global, factory) {
        {
          factory(exports, React__default["default"], propTypes.exports, require$$2, require$$3);
        }
      })(commonjsGlobal, function (exports, _react, _propTypes, _emotion, _recompose) {

        Object.defineProperty(exports, "__esModule", {
          value: true
        });

        var _react2 = _interopRequireDefault(_react);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : {
            default: obj
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var _createClass = function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        }();

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var sync = (0, _emotion.keyframes)('33%{transform:translateY(10px)}66%{transform:translateY(-10px)}100%{transform:translateY(0)}');

        var Loader = function (_React$Component) {
          _inherits(Loader, _React$Component);

          function Loader() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loader);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.style = function (i) {
              return (0, _emotion.css)('{background-color:', _this.props.color, ';width:', _this.props.size, 'px;height:', _this.props.size, 'px;margin:', _this.props.margin, ';border-radius:100%;display:inline-block;animation:', sync, ' 0.6s ', i * 0.07, 's infinite ease-in-out;animation-fill-mode:both;}');
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Loader, [{
            key: 'render',
            value: function render() {
              return this.props.loading ? _react2.default.createElement('div', null, _react2.default.createElement('div', {
                className: this.style(1)
              }), _react2.default.createElement('div', {
                className: this.style(2)
              }), _react2.default.createElement('div', {
                className: this.style(3)
              })) : null;
            }
          }]);

          return Loader;
        }(_react2.default.Component);

        Loader.propTypes = {
          loading: _propTypes2.default.bool,
          color: _propTypes2.default.string,
          size: _propTypes2.default.number,
          margin: _propTypes2.default.string
        };
        Loader.defaultProps = {
          loading: true,
          color: '#000000',
          size: 15,
          margin: '2px'
        };
        var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size', 'margin'])(Loader);
        Component.defaultProps = Loader.defaultProps;
        exports.default = Component;
      });
    })(SyncLoader);

    return SyncLoader;
  }

  (function (module, exports) {
    (function (global, factory) {
      {
        factory(module, requireBarLoader(), requireBeatLoader(), requireBounceLoader(), requireCircleLoader(), requireClipLoader(), requireClimbingBoxLoader(), requireDotLoader(), requireFadeLoader(), requireGridLoader(), requireHashLoader(), requireMoonLoader(), requirePacmanLoader(), requirePropagateLoader(), requirePulseLoader(), requireRingLoader(), requireRiseLoader(), requireRotateLoader(), requireScaleLoader(), requireSyncLoader());
      }
    })(commonjsGlobal, function (module, _BarLoader, _BeatLoader, _BounceLoader, _CircleLoader, _ClipLoader, _ClimbingBoxLoader, _DotLoader, _FadeLoader, _GridLoader, _HashLoader, _MoonLoader, _PacmanLoader, _PropagateLoader, _PulseLoader, _RingLoader, _RiseLoader, _RotateLoader, _ScaleLoader, _SyncLoader) {

      var _BarLoader2 = _interopRequireDefault(_BarLoader);

      var _BeatLoader2 = _interopRequireDefault(_BeatLoader);

      var _BounceLoader2 = _interopRequireDefault(_BounceLoader);

      var _CircleLoader2 = _interopRequireDefault(_CircleLoader);

      var _ClipLoader2 = _interopRequireDefault(_ClipLoader);

      var _ClimbingBoxLoader2 = _interopRequireDefault(_ClimbingBoxLoader);

      var _DotLoader2 = _interopRequireDefault(_DotLoader);

      var _FadeLoader2 = _interopRequireDefault(_FadeLoader);

      var _GridLoader2 = _interopRequireDefault(_GridLoader);

      var _HashLoader2 = _interopRequireDefault(_HashLoader);

      var _MoonLoader2 = _interopRequireDefault(_MoonLoader);

      var _PacmanLoader2 = _interopRequireDefault(_PacmanLoader);

      var _PropagateLoader2 = _interopRequireDefault(_PropagateLoader);

      var _PulseLoader2 = _interopRequireDefault(_PulseLoader);

      var _RingLoader2 = _interopRequireDefault(_RingLoader);

      var _RiseLoader2 = _interopRequireDefault(_RiseLoader);

      var _RotateLoader2 = _interopRequireDefault(_RotateLoader);

      var _ScaleLoader2 = _interopRequireDefault(_ScaleLoader);

      var _SyncLoader2 = _interopRequireDefault(_SyncLoader);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      module.exports = {
        BarLoader: _BarLoader2.default,
        BeatLoader: _BeatLoader2.default,
        BounceLoader: _BounceLoader2.default,
        CircleLoader: _CircleLoader2.default,
        ClipLoader: _ClipLoader2.default,
        ClimbingBoxLoader: _ClimbingBoxLoader2.default,
        DotLoader: _DotLoader2.default,
        FadeLoader: _FadeLoader2.default,
        GridLoader: _GridLoader2.default,
        HashLoader: _HashLoader2.default,
        MoonLoader: _MoonLoader2.default,
        PacmanLoader: _PacmanLoader2.default,
        PropagateLoader: _PropagateLoader2.default,
        PulseLoader: _PulseLoader2.default,
        RingLoader: _RingLoader2.default,
        RiseLoader: _RiseLoader2.default,
        RotateLoader: _RotateLoader2.default,
        ScaleLoader: _ScaleLoader2.default,
        SyncLoader: _SyncLoader2.default
      };
    });
  })(dist);

  (function (module) {
    module.exports = dist.exports;
  })(reactSpinners);

  var theme$1 = {};

  Object.defineProperty(theme$1, "__esModule", {
    value: true
  }); // ==============================
  // THEME
  // ==============================

  var theme = {}; // container

  theme.container = {
    background: 'rgba(0, 0, 0, 0.8)',
    gutter: {
      horizontal: 10,
      vertical: 10
    },
    zIndex: 2001
  }; // header

  theme.header = {
    height: 40
  };
  theme.close = {
    fill: 'white'
  }; // footer

  theme.footer = {
    color: 'white',
    count: {
      color: 'rgba(255, 255, 255, 0.75)',
      fontSize: '0.85em'
    },
    height: 40,
    gutter: {
      horizontal: 0,
      vertical: 5
    }
  }; // thumbnails

  theme.thumbnail = {
    activeBorderColor: 'white',
    size: 50,
    gutter: 2
  }; // arrow

  theme.arrow = {
    background: 'none',
    fill: 'white',
    height: 120
  };

  theme$1.default = theme;

  var Arrow$1 = {};

  var noImportant$1 = {exports: {}};

  var noImportant = {};

  Object.defineProperty(noImportant, '__esModule', {
    value: true
  });
  var _inject = inject;
  var _indexJs = lib$1.exports;

  var css = function css() {
    for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {
      styleDefinitions[_key] = arguments[_key];
    }

    var useImportant = false; // Don't append !important to style definitions

    return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions);
  };

  noImportant.StyleSheet = _indexJs.StyleSheet;
  noImportant.StyleSheetServer = _indexJs.StyleSheetServer;
  noImportant.StyleSheetTestUtils = _indexJs.StyleSheetTestUtils;
  noImportant.css = css;

  (function (module) {
    module.exports = noImportant;
  })(noImportant$1);

  var deepMerge$1 = {};

  Object.defineProperty(deepMerge$1, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  function deepMerge(target) {
    var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var extended = Object.assign({}, target);
    Object.keys(source).forEach(function (key) {
      if (_typeof(source[key]) !== 'object' || !source[key]) {
        extended[key] = source[key];
      } else {
        if (!target[key]) {
          extended[key] = source[key];
        } else {
          extended[key] = deepMerge(target[key], source[key]);
        }
      }
    });
    return extended;
  }

  deepMerge$1.default = deepMerge;

  var Icon$1 = {};

  var arrowLeft = {};

  Object.defineProperty(arrowLeft, "__esModule", {
    value: true
  });

  arrowLeft.default = function (fill) {
    return "<svg fill=\"" + fill + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 512 512\" xml:space=\"preserve\">\n\t\t<path d=\"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"/>\n\t</svg>";
  };

  var arrowRight = {};

  Object.defineProperty(arrowRight, "__esModule", {
    value: true
  });

  arrowRight.default = function (fill) {
    return "<svg fill=\"" + fill + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 512 512\" xml:space=\"preserve\">\n\t\t<path d=\"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"/>\n\t</svg>";
  };

  var close = {};

  Object.defineProperty(close, "__esModule", {
    value: true
  });

  close.default = function (fill) {
    return "<svg fill=\"" + fill + "\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"100%\" height=\"100%\" viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\">\n\t\t<path d=\"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"/>\n\t</svg>";
  };

  Object.defineProperty(Icon$1, "__esModule", {
    value: true
  });

  var _extends$6 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _propTypes$a = propTypes.exports;

  var _propTypes2$a = _interopRequireDefault$c(_propTypes$a);

  var _react$b = React__default["default"];

  var _react2$8 = _interopRequireDefault$c(_react$b);

  var _arrowLeft = arrowLeft;

  var _arrowLeft2 = _interopRequireDefault$c(_arrowLeft);

  var _arrowRight = arrowRight;

  var _arrowRight2 = _interopRequireDefault$c(_arrowRight);

  var _close = close;

  var _close2 = _interopRequireDefault$c(_close);

  function _interopRequireDefault$c(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties$4(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  var icons = {
    arrowLeft: _arrowLeft2.default,
    arrowRight: _arrowRight2.default,
    close: _close2.default
  };

  var Icon = function Icon(_ref) {
    var fill = _ref.fill,
        type = _ref.type,
        props = _objectWithoutProperties$4(_ref, ['fill', 'type']);

    var icon = icons[type];
    return _react2$8.default.createElement('span', _extends$6({
      dangerouslySetInnerHTML: {
        __html: icon(fill)
      }
    }, props));
  };

  Icon.propTypes = {
    fill: _propTypes2$a.default.string,
    type: _propTypes2$a.default.oneOf(Object.keys(icons))
  };
  Icon.defaultProps = {
    fill: 'white'
  };

  Icon$1.default = Icon;

  Object.defineProperty(Arrow$1, "__esModule", {
    value: true
  });

  var _extends$5 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _propTypes$9 = propTypes.exports;

  var _propTypes2$9 = _interopRequireDefault$b(_propTypes$9);

  var _react$a = React__default["default"];

  var _react2$7 = _interopRequireDefault$b(_react$a);

  var _noImportant$5 = noImportant$1.exports;
  var _theme$6 = theme$1;

  var _theme2$6 = _interopRequireDefault$b(_theme$6);

  var _deepMerge$5 = deepMerge$1;

  var _deepMerge2$5 = _interopRequireDefault$b(_deepMerge$5);

  var _Icon$1 = Icon$1;

  var _Icon2$1 = _interopRequireDefault$b(_Icon$1);

  function _interopRequireDefault$b(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties$3(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function Arrow(_ref, _ref2) {
    var theme = _ref2.theme;

    var direction = _ref.direction,
        icon = _ref.icon,
        onClick = _ref.onClick,
        size = _ref.size,
        props = _objectWithoutProperties$3(_ref, ['direction', 'icon', 'onClick', 'size']);

    var classes = _noImportant$5.StyleSheet.create((0, _deepMerge2$5.default)(defaultStyles$5, theme));

    return _react2$7.default.createElement('button', _extends$5({
      type: 'button',
      className: (0, _noImportant$5.css)(classes.arrow, classes['arrow__direction__' + direction], size && classes['arrow__size__' + size]),
      onClick: onClick,
      onTouchEnd: onClick
    }, props), _react2$7.default.createElement(_Icon2$1.default, {
      fill: !!theme.arrow && theme.arrow.fill || _theme2$6.default.arrow.fill,
      type: icon
    }));
  }

  Arrow.propTypes = {
    direction: _propTypes2$9.default.oneOf(['left', 'right']),
    icon: _propTypes2$9.default.string,
    onClick: _propTypes2$9.default.func.isRequired,
    size: _propTypes2$9.default.oneOf(['medium', 'small']).isRequired
  };
  Arrow.defaultProps = {
    size: 'medium'
  };
  Arrow.contextTypes = {
    theme: _propTypes2$9.default.object.isRequired
  };
  var defaultStyles$5 = {
    arrow: {
      background: 'none',
      border: 'none',
      borderRadius: 4,
      cursor: 'pointer',
      outline: 'none',
      padding: 10,
      // increase hit area
      position: 'absolute',
      top: '50%',
      // disable user select
      WebkitTouchCallout: 'none',
      userSelect: 'none'
    },
    // sizes
    arrow__size__medium: {
      height: _theme2$6.default.arrow.height,
      marginTop: _theme2$6.default.arrow.height / -2,
      width: 40,
      '@media (min-width: 768px)': {
        width: 70
      }
    },
    arrow__size__small: {
      height: _theme2$6.default.thumbnail.size,
      marginTop: _theme2$6.default.thumbnail.size / -2,
      width: 30,
      '@media (min-width: 500px)': {
        width: 40
      }
    },
    // direction
    arrow__direction__right: {
      right: _theme2$6.default.container.gutter.horizontal
    },
    arrow__direction__left: {
      left: _theme2$6.default.container.gutter.horizontal
    }
  };

  Arrow$1.default = Arrow;

  var Container$1 = {};

  Object.defineProperty(Container$1, "__esModule", {
    value: true
  });

  var _extends$4 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _propTypes$8 = propTypes.exports;

  var _propTypes2$8 = _interopRequireDefault$a(_propTypes$8);

  var _react$9 = React__default["default"];

  var _react2$6 = _interopRequireDefault$a(_react$9);

  var _noImportant$4 = noImportant$1.exports;
  var _theme$5 = theme$1;

  var _theme2$5 = _interopRequireDefault$a(_theme$5);

  var _deepMerge$4 = deepMerge$1;

  var _deepMerge2$4 = _interopRequireDefault$a(_deepMerge$4);

  function _interopRequireDefault$a(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties$2(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function Container(_ref, _ref2) {
    var theme = _ref2.theme;

    var props = _objectWithoutProperties$2(_ref, []);

    var classes = _noImportant$4.StyleSheet.create((0, _deepMerge2$4.default)(defaultStyles$4, theme));

    return _react2$6.default.createElement('div', _extends$4({
      id: 'lightboxBackdrop',
      className: (0, _noImportant$4.css)(classes.container)
    }, props));
  }

  Container.contextTypes = {
    theme: _propTypes2$8.default.object.isRequired
  };
  var defaultStyles$4 = {
    container: {
      alignItems: 'center',
      backgroundColor: _theme2$5.default.container.background,
      boxSizing: 'border-box',
      display: 'flex',
      height: '100%',
      justifyContent: 'center',
      left: 0,
      paddingBottom: _theme2$5.default.container.gutter.vertical,
      paddingLeft: _theme2$5.default.container.gutter.horizontal,
      paddingRight: _theme2$5.default.container.gutter.horizontal,
      paddingTop: _theme2$5.default.container.gutter.vertical,
      position: 'fixed',
      top: 0,
      width: '100%',
      zIndex: _theme2$5.default.container.zIndex
    }
  };

  Container$1.default = Container;

  var Footer$1 = {};

  Object.defineProperty(Footer$1, "__esModule", {
    value: true
  });

  var _extends$3 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _propTypes$7 = propTypes.exports;

  var _propTypes2$7 = _interopRequireDefault$9(_propTypes$7);

  var _react$8 = React__default["default"];

  var _react2$5 = _interopRequireDefault$9(_react$8);

  var _noImportant$3 = noImportant$1.exports;
  var _theme$4 = theme$1;

  var _theme2$4 = _interopRequireDefault$9(_theme$4);

  var _deepMerge$3 = deepMerge$1;

  var _deepMerge2$3 = _interopRequireDefault$9(_deepMerge$3);

  function _interopRequireDefault$9(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties$1(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function Footer(_ref, _ref2) {
    var theme = _ref2.theme;

    var caption = _ref.caption,
        countCurrent = _ref.countCurrent,
        countSeparator = _ref.countSeparator,
        countTotal = _ref.countTotal,
        showCount = _ref.showCount,
        props = _objectWithoutProperties$1(_ref, ['caption', 'countCurrent', 'countSeparator', 'countTotal', 'showCount']);

    if (!caption && !showCount) return null;

    var classes = _noImportant$3.StyleSheet.create((0, _deepMerge2$3.default)(defaultStyles$3, theme));

    var imageCount = showCount ? _react2$5.default.createElement('div', {
      className: (0, _noImportant$3.css)(classes.footerCount)
    }, countCurrent, countSeparator, countTotal) : _react2$5.default.createElement('span', null);
    return _react2$5.default.createElement('div', _extends$3({
      className: (0, _noImportant$3.css)(classes.footer)
    }, props), caption ? _react2$5.default.createElement('figcaption', {
      className: (0, _noImportant$3.css)(classes.footerCaption)
    }, caption) : _react2$5.default.createElement('span', null), imageCount);
  }

  Footer.propTypes = {
    caption: _propTypes2$7.default.oneOfType([_propTypes2$7.default.string, _propTypes2$7.default.element]),
    countCurrent: _propTypes2$7.default.number,
    countSeparator: _propTypes2$7.default.string,
    countTotal: _propTypes2$7.default.number,
    showCount: _propTypes2$7.default.bool
  };
  Footer.contextTypes = {
    theme: _propTypes2$7.default.object.isRequired
  };
  var defaultStyles$3 = {
    footer: {
      boxSizing: 'border-box',
      color: _theme2$4.default.footer.color,
      cursor: 'auto',
      display: 'flex',
      justifyContent: 'space-between',
      left: 0,
      lineHeight: 1.3,
      paddingBottom: _theme2$4.default.footer.gutter.vertical,
      paddingLeft: _theme2$4.default.footer.gutter.horizontal,
      paddingRight: _theme2$4.default.footer.gutter.horizontal,
      paddingTop: _theme2$4.default.footer.gutter.vertical
    },
    footerCount: {
      color: _theme2$4.default.footer.count.color,
      fontSize: _theme2$4.default.footer.count.fontSize,
      paddingLeft: '1em' // add a small gutter for the caption

    },
    footerCaption: {
      flex: '1 1 0'
    }
  };

  Footer$1.default = Footer;

  var Header$1 = {};

  Object.defineProperty(Header$1, "__esModule", {
    value: true
  });

  var _extends$2 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _propTypes$6 = propTypes.exports;

  var _propTypes2$6 = _interopRequireDefault$8(_propTypes$6);

  var _react$7 = React__default["default"];

  var _react2$4 = _interopRequireDefault$8(_react$7);

  var _noImportant$2 = noImportant$1.exports;
  var _theme$3 = theme$1;

  var _theme2$3 = _interopRequireDefault$8(_theme$3);

  var _deepMerge$2 = deepMerge$1;

  var _deepMerge2$2 = _interopRequireDefault$8(_deepMerge$2);

  var _Icon = Icon$1;

  var _Icon2 = _interopRequireDefault$8(_Icon);

  function _interopRequireDefault$8(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function Header(_ref, _ref2) {
    var theme = _ref2.theme;

    var customControls = _ref.customControls,
        onClose = _ref.onClose,
        showCloseButton = _ref.showCloseButton,
        closeButtonTitle = _ref.closeButtonTitle,
        props = _objectWithoutProperties(_ref, ['customControls', 'onClose', 'showCloseButton', 'closeButtonTitle']);

    var classes = _noImportant$2.StyleSheet.create((0, _deepMerge2$2.default)(defaultStyles$2, theme));

    return _react2$4.default.createElement('div', _extends$2({
      className: (0, _noImportant$2.css)(classes.header)
    }, props), customControls ? customControls : _react2$4.default.createElement('span', null), !!showCloseButton && _react2$4.default.createElement('button', {
      title: closeButtonTitle,
      className: (0, _noImportant$2.css)(classes.close),
      onClick: onClose
    }, _react2$4.default.createElement(_Icon2.default, {
      fill: !!theme.close && theme.close.fill || _theme2$3.default.close.fill,
      type: 'close'
    })));
  }

  Header.propTypes = {
    customControls: _propTypes2$6.default.array,
    onClose: _propTypes2$6.default.func.isRequired,
    showCloseButton: _propTypes2$6.default.bool
  };
  Header.contextTypes = {
    theme: _propTypes2$6.default.object.isRequired
  };
  var defaultStyles$2 = {
    header: {
      display: 'flex',
      justifyContent: 'space-between',
      height: _theme2$3.default.header.height
    },
    close: {
      background: 'none',
      border: 'none',
      cursor: 'pointer',
      outline: 'none',
      position: 'relative',
      top: 0,
      verticalAlign: 'bottom',
      // increase hit area
      height: 40,
      marginRight: -10,
      padding: 10,
      width: 40
    }
  };

  Header$1.default = Header;

  var PaginatedThumbnails$1 = {};

  var Thumbnail$1 = {};

  Object.defineProperty(Thumbnail$1, "__esModule", {
    value: true
  });
  var _propTypes$5 = propTypes.exports;

  var _propTypes2$5 = _interopRequireDefault$7(_propTypes$5);

  var _react$6 = React__default["default"];

  var _react2$3 = _interopRequireDefault$7(_react$6);

  var _noImportant$1 = noImportant$1.exports;
  var _theme$2 = theme$1;

  var _theme2$2 = _interopRequireDefault$7(_theme$2);

  var _deepMerge$1 = deepMerge$1;

  var _deepMerge2$1 = _interopRequireDefault$7(_deepMerge$1);

  function _interopRequireDefault$7(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function Thumbnail(_ref, _ref2) {
    var index = _ref.index,
        src = _ref.src,
        thumbnail = _ref.thumbnail,
        active = _ref.active,
        _onClick = _ref.onClick;
    var theme = _ref2.theme;
    var url = thumbnail ? thumbnail : src;

    var classes = _noImportant$1.StyleSheet.create((0, _deepMerge2$1.default)(defaultStyles$1, theme));

    return _react2$3.default.createElement('div', {
      className: (0, _noImportant$1.css)(classes.thumbnail, active && classes.thumbnail__active),
      onClick: function onClick(e) {
        e.preventDefault();
        e.stopPropagation();

        _onClick(index);
      },
      style: {
        backgroundImage: 'url("' + url + '")'
      }
    });
  }

  Thumbnail.propTypes = {
    active: _propTypes2$5.default.bool,
    index: _propTypes2$5.default.number,
    onClick: _propTypes2$5.default.func.isRequired,
    src: _propTypes2$5.default.string,
    thumbnail: _propTypes2$5.default.string
  };
  Thumbnail.contextTypes = {
    theme: _propTypes2$5.default.object.isRequired
  };
  var defaultStyles$1 = {
    thumbnail: {
      backgroundPosition: 'center',
      backgroundSize: 'cover',
      borderRadius: 2,
      boxShadow: 'inset 0 0 0 1px hsla(0,0%,100%,.2)',
      cursor: 'pointer',
      display: 'inline-block',
      height: _theme2$2.default.thumbnail.size,
      margin: _theme2$2.default.thumbnail.gutter,
      overflow: 'hidden',
      width: _theme2$2.default.thumbnail.size
    },
    thumbnail__active: {
      boxShadow: 'inset 0 0 0 2px ' + _theme2$2.default.thumbnail.activeBorderColor
    }
  };

  Thumbnail$1.default = Thumbnail;

  Object.defineProperty(PaginatedThumbnails$1, "__esModule", {
    value: true
  });

  var _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _createClass$3 = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _propTypes$4 = propTypes.exports;

  var _propTypes2$4 = _interopRequireDefault$6(_propTypes$4);

  var _react$5 = React__default["default"];

  var _react2$2 = _interopRequireDefault$6(_react$5);

  var _noImportant = noImportant$1.exports;
  var _Thumbnail = Thumbnail$1;

  var _Thumbnail2 = _interopRequireDefault$6(_Thumbnail);

  var _Arrow$1 = Arrow$1;

  var _Arrow2$1 = _interopRequireDefault$6(_Arrow$1);

  var _theme$1 = theme$1;

  var _theme2$1 = _interopRequireDefault$6(_theme$1);

  function _interopRequireDefault$6(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck$3(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn$3(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits$3(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var classes = _noImportant.StyleSheet.create({
    paginatedThumbnails: {
      bottom: _theme2$1.default.container.gutter.vertical,
      height: _theme2$1.default.thumbnail.size,
      padding: '0 50px',
      position: 'absolute',
      textAlign: 'center',
      whiteSpace: 'nowrap',
      left: '50%',
      transform: 'translateX(-50%)'
    }
  });

  var arrowStyles = {
    height: _theme2$1.default.thumbnail.size + _theme2$1.default.thumbnail.gutter * 2,
    width: 40
  };

  var PaginatedThumbnails = function (_Component) {
    _inherits$3(PaginatedThumbnails, _Component);

    function PaginatedThumbnails(props) {
      _classCallCheck$3(this, PaginatedThumbnails);

      var _this = _possibleConstructorReturn$3(this, (PaginatedThumbnails.__proto__ || Object.getPrototypeOf(PaginatedThumbnails)).call(this, props));

      _this.state = {
        hasCustomPage: false
      };
      _this.gotoPrev = _this.gotoPrev.bind(_this);
      _this.gotoNext = _this.gotoNext.bind(_this);
      return _this;
    }

    _createClass$3(PaginatedThumbnails, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        // Component should be controlled, flush state when currentImage changes
        if (nextProps.currentImage !== this.props.currentImage) {
          this.setState({
            hasCustomPage: false
          });
        }
      } // ==============================
      // METHODS
      // ==============================

    }, {
      key: 'getFirst',
      value: function getFirst() {
        var _props = this.props,
            currentImage = _props.currentImage,
            offset = _props.offset;

        if (this.state.hasCustomPage) {
          return this.clampFirst(this.state.first);
        }

        return this.clampFirst(currentImage - offset);
      }
    }, {
      key: 'setFirst',
      value: function setFirst(event, newFirst) {
        var first = this.state.first;

        if (event) {
          event.preventDefault();
          event.stopPropagation();
        }

        if (first === newFirst) return;
        this.setState({
          hasCustomPage: true,
          first: newFirst
        });
      }
    }, {
      key: 'gotoPrev',
      value: function gotoPrev(event) {
        this.setFirst(event, this.getFirst() - this.props.offset);
      }
    }, {
      key: 'gotoNext',
      value: function gotoNext(event) {
        this.setFirst(event, this.getFirst() + this.props.offset);
      }
    }, {
      key: 'clampFirst',
      value: function clampFirst(value) {
        var _props2 = this.props,
            images = _props2.images,
            offset = _props2.offset;
        var totalCount = 2 * offset + 1; // show $offset extra thumbnails on each side

        if (value < 0) {
          return 0;
        } else if (value + totalCount > images.length) {
          // Too far
          return images.length - totalCount;
        } else {
          return value;
        }
      } // ==============================
      // RENDERERS
      // ==============================

    }, {
      key: 'renderArrowPrev',
      value: function renderArrowPrev() {
        if (this.getFirst() <= 0) return null;
        return _react2$2.default.createElement(_Arrow2$1.default, {
          direction: 'left',
          size: 'small',
          icon: 'arrowLeft',
          onClick: this.gotoPrev,
          style: arrowStyles,
          title: 'Previous (Left arrow key)',
          type: 'button'
        });
      }
    }, {
      key: 'renderArrowNext',
      value: function renderArrowNext() {
        var _props3 = this.props,
            offset = _props3.offset,
            images = _props3.images;
        var totalCount = 2 * offset + 1;
        if (this.getFirst() + totalCount >= images.length) return null;
        return _react2$2.default.createElement(_Arrow2$1.default, {
          direction: 'right',
          size: 'small',
          icon: 'arrowRight',
          onClick: this.gotoNext,
          style: arrowStyles,
          title: 'Next (Right arrow key)',
          type: 'button'
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props4 = this.props,
            images = _props4.images,
            currentImage = _props4.currentImage,
            onClickThumbnail = _props4.onClickThumbnail,
            offset = _props4.offset;
        var totalCount = 2 * offset + 1; // show $offset extra thumbnails on each side

        var thumbnails = [];
        var baseOffset = 0;

        if (images.length <= totalCount) {
          thumbnails = images;
        } else {
          // Try to center current image in list
          baseOffset = this.getFirst();
          thumbnails = images.slice(baseOffset, baseOffset + totalCount);
        }

        return _react2$2.default.createElement('div', {
          className: (0, _noImportant.css)(classes.paginatedThumbnails)
        }, this.renderArrowPrev(), thumbnails.map(function (img, idx) {
          return _react2$2.default.createElement(_Thumbnail2.default, _extends$1({
            key: baseOffset + idx
          }, img, {
            index: baseOffset + idx,
            onClick: onClickThumbnail,
            active: baseOffset + idx === currentImage
          }));
        }), this.renderArrowNext());
      }
    }]);

    return PaginatedThumbnails;
  }(_react$5.Component);

  PaginatedThumbnails$1.default = PaginatedThumbnails;

  PaginatedThumbnails.propTypes = {
    currentImage: _propTypes2$4.default.number,
    images: _propTypes2$4.default.array,
    offset: _propTypes2$4.default.number,
    onClickThumbnail: _propTypes2$4.default.func.isRequired
  };

  var Portal$1 = {};

  var CSSTransitionGroup = {exports: {}};

  var TransitionGroup = {exports: {}};

  var chainFunction = function chain() {
    var len = arguments.length;
    var args = [];

    for (var i = 0; i < len; i++) args[i] = arguments[i];

    args = args.filter(function (fn) {
      return fn != null;
    });
    if (args.length === 0) return undefined;
    if (args.length === 1) return args[0];
    return args.reduce(function (current, next) {
      return function chainedFunction() {
        current.apply(this, arguments);
        next.apply(this, arguments);
      };
    });
  };

  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */
  /**
   * Similar to invariant but only logs a warning if the condition is not met.
   * This can be used to log issues in development environments in critical
   * paths. Removing the logging code for production environments will keep the
   * same logic and follow the same code paths.
   */


  var warning = function () {};

  var browser = warning;

  var ChildMapping = {};

  ChildMapping.__esModule = true;
  ChildMapping.getChildMapping = getChildMapping;
  ChildMapping.mergeChildMappings = mergeChildMappings;
  var _react$4 = React__default["default"];
  /**
   * Given `this.props.children`, return an object mapping key to child.
   *
   * @param {*} children `this.props.children`
   * @return {object} Mapping of key to child
   */

  function getChildMapping(children) {
    if (!children) {
      return children;
    }

    var result = {};

    _react$4.Children.map(children, function (child) {
      return child;
    }).forEach(function (child) {
      result[child.key] = child;
    });

    return result;
  }
  /**
   * When you're adding or removing children some may be added or removed in the
   * same render pass. We want to show *both* since we want to simultaneously
   * animate elements in and out. This function takes a previous set of keys
   * and a new set of keys and merges them with its best guess of the correct
   * ordering. In the future we may expose some of the utilities in
   * ReactMultiChild to make this easy, but for now React itself does not
   * directly have this concept of the union of prevChildren and nextChildren
   * so we implement it here.
   *
   * @param {object} prev prev children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @param {object} next next children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @return {object} a key set that contains all keys in `prev` and all keys
   * in `next` in a reasonable order.
   */


  function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};

    function getValueForKey(key) {
      if (next.hasOwnProperty(key)) {
        return next[key];
      }

      return prev[key];
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list


    var nextKeysPending = {};
    var pendingKeys = [];

    for (var prevKey in prev) {
      if (next.hasOwnProperty(prevKey)) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }

    var i = void 0;
    var childMapping = {};

    for (var nextKey in next) {
      if (nextKeysPending.hasOwnProperty(nextKey)) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i];
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
      }

      childMapping[nextKey] = getValueForKey(nextKey);
    } // Finally, add the keys which didn't appear before any key in `next`


    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    }

    return childMapping;
  }

  (function (module, exports) {

    exports.__esModule = true;

    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    var _chainFunction = chainFunction;

    var _chainFunction2 = _interopRequireDefault(_chainFunction);

    var _react = React__default["default"];

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = propTypes.exports;

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _warning = browser;

    _interopRequireDefault(_warning);

    var _ChildMapping = ChildMapping;

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    ({
      component: _propTypes2.default.any,
      childFactory: _propTypes2.default.func,
      children: _propTypes2.default.node
    });
    var defaultProps = {
      component: 'span',
      childFactory: function childFactory(child) {
        return child;
      }
    };

    var TransitionGroup = function (_React$Component) {
      _inherits(TransitionGroup, _React$Component);

      function TransitionGroup(props, context) {
        _classCallCheck(this, TransitionGroup);

        var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

        _this.performAppear = function (key, component) {
          _this.currentlyTransitioningKeys[key] = true;

          if (component.componentWillAppear) {
            component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));
          } else {
            _this._handleDoneAppearing(key, component);
          }
        };

        _this._handleDoneAppearing = function (key, component) {
          if (component.componentDidAppear) {
            component.componentDidAppear();
          }

          delete _this.currentlyTransitioningKeys[key];
          var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

          if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
            // This was removed before it had fully appeared. Remove it.
            _this.performLeave(key, component);
          }
        };

        _this.performEnter = function (key, component) {
          _this.currentlyTransitioningKeys[key] = true;

          if (component.componentWillEnter) {
            component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));
          } else {
            _this._handleDoneEntering(key, component);
          }
        };

        _this._handleDoneEntering = function (key, component) {
          if (component.componentDidEnter) {
            component.componentDidEnter();
          }

          delete _this.currentlyTransitioningKeys[key];
          var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

          if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
            // This was removed before it had fully entered. Remove it.
            _this.performLeave(key, component);
          }
        };

        _this.performLeave = function (key, component) {
          _this.currentlyTransitioningKeys[key] = true;

          if (component.componentWillLeave) {
            component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));
          } else {
            // Note that this is somewhat dangerous b/c it calls setState()
            // again, effectively mutating the component before all the work
            // is done.
            _this._handleDoneLeaving(key, component);
          }
        };

        _this._handleDoneLeaving = function (key, component) {
          if (component.componentDidLeave) {
            component.componentDidLeave();
          }

          delete _this.currentlyTransitioningKeys[key];
          var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

          if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
            // This entered again before it fully left. Add it again.
            _this.keysToEnter.push(key);
          } else {
            _this.setState(function (state) {
              var newChildren = _extends({}, state.children);

              delete newChildren[key];
              return {
                children: newChildren
              };
            });
          }
        };

        _this.childRefs = Object.create(null);
        _this.state = {
          children: (0, _ChildMapping.getChildMapping)(props.children)
        };
        return _this;
      }

      TransitionGroup.prototype.componentWillMount = function componentWillMount() {
        this.currentlyTransitioningKeys = {};
        this.keysToEnter = [];
        this.keysToLeave = [];
      };

      TransitionGroup.prototype.componentDidMount = function componentDidMount() {
        var initialChildMapping = this.state.children;

        for (var key in initialChildMapping) {
          if (initialChildMapping[key]) {
            this.performAppear(key, this.childRefs[key]);
          }
        }
      };

      TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);
        var prevChildMapping = this.state.children;
        this.setState({
          children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)
        });

        for (var key in nextChildMapping) {
          var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);

          if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
            this.keysToEnter.push(key);
          }
        }

        for (var _key in prevChildMapping) {
          var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);

          if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {
            this.keysToLeave.push(_key);
          }
        } // If we want to someday check for reordering, we could do it here.

      };

      TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
        var _this2 = this;

        var keysToEnter = this.keysToEnter;
        this.keysToEnter = [];
        keysToEnter.forEach(function (key) {
          return _this2.performEnter(key, _this2.childRefs[key]);
        });
        var keysToLeave = this.keysToLeave;
        this.keysToLeave = [];
        keysToLeave.forEach(function (key) {
          return _this2.performLeave(key, _this2.childRefs[key]);
        });
      };

      TransitionGroup.prototype.render = function render() {
        var _this3 = this; // TODO: we could get rid of the need for the wrapper node
        // by cloning a single child


        var childrenToRender = [];

        var _loop = function _loop(key) {
          var child = _this3.state.children[key];

          if (child) {
            var isCallbackRef = typeof child.ref !== 'string';

            var factoryChild = _this3.props.childFactory(child);

            var ref = function ref(r) {
              _this3.childRefs[key] = r;
            };
            // wraps the child. The child ref callback gets called twice with the
            // wrapper and the child. So we only need to chain the ref if the
            // factoryChild is not different from child.

            if (factoryChild === child && isCallbackRef) {
              ref = (0, _chainFunction2.default)(child.ref, ref);
            } // You may need to apply reactive updates to a child as it is leaving.
            // The normal React way to do it won't work since the child will have
            // already been removed. In case you need this behavior you can provide
            // a childFactory function to wrap every child, even the ones that are
            // leaving.


            childrenToRender.push(_react2.default.cloneElement(factoryChild, {
              key: key,
              ref: ref
            }));
          }
        };

        for (var key in this.state.children) {
          _loop(key);
        } // Do not forward TransitionGroup props to primitive DOM nodes


        var props = _extends({}, this.props);

        delete props.transitionLeave;
        delete props.transitionName;
        delete props.transitionAppear;
        delete props.transitionEnter;
        delete props.childFactory;
        delete props.transitionLeaveTimeout;
        delete props.transitionEnterTimeout;
        delete props.transitionAppearTimeout;
        delete props.component;
        return _react2.default.createElement(this.props.component, props, childrenToRender);
      };

      return TransitionGroup;
    }(_react2.default.Component);

    TransitionGroup.displayName = 'TransitionGroup';
    TransitionGroup.propTypes = {};
    TransitionGroup.defaultProps = defaultProps;
    exports.default = TransitionGroup;
    module.exports = exports['default'];
  })(TransitionGroup, TransitionGroup.exports);

  var CSSTransitionGroupChild = {exports: {}};

  var addClass = {exports: {}};

  var interopRequireDefault = {exports: {}};

  (function (module) {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }

    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  })(interopRequireDefault);

  var hasClass = {exports: {}};

  var hasRequiredHasClass;

  function requireHasClass() {
    if (hasRequiredHasClass) return hasClass.exports;
    hasRequiredHasClass = 1;

    (function (module, exports) {

      exports.__esModule = true;
      exports.default = hasClass;

      function hasClass(element, className) {
        if (element.classList) return !!className && element.classList.contains(className);else return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
      }

      module.exports = exports["default"];
    })(hasClass, hasClass.exports);

    return hasClass.exports;
  }

  (function (module, exports) {

    var _interopRequireDefault = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = addClass;

    var _hasClass = _interopRequireDefault(requireHasClass());

    function addClass(element, className) {
      if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);
    }

    module.exports = exports["default"];
  })(addClass, addClass.exports);

  function replaceClassName(origClass, classToRemove) {
    return origClass.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
  }

  var removeClass = function removeClass(element, className) {
    if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
  };

  var requestAnimationFrame = {exports: {}};

  var inDOM = {exports: {}};

  var hasRequiredInDOM;

  function requireInDOM() {
    if (hasRequiredInDOM) return inDOM.exports;
    hasRequiredInDOM = 1;

    (function (module, exports) {

      exports.__esModule = true;
      exports.default = void 0;

      var _default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

      exports.default = _default;
      module.exports = exports["default"];
    })(inDOM, inDOM.exports);

    return inDOM.exports;
  }

  (function (module, exports) {

    var _interopRequireDefault = interopRequireDefault.exports;
    exports.__esModule = true;
    exports.default = void 0;

    var _inDOM = _interopRequireDefault(requireInDOM());

    var vendors = ['', 'webkit', 'moz', 'o', 'ms'];
    var cancel = 'clearTimeout';
    var raf = fallback;
    var compatRaf;

    var getKey = function getKey(vendor, k) {
      return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';
    };

    if (_inDOM.default) {
      vendors.some(function (vendor) {
        var rafKey = getKey(vendor, 'request');

        if (rafKey in window) {
          cancel = getKey(vendor, 'cancel');
          return raf = function raf(cb) {
            return window[rafKey](cb);
          };
        }
      });
    }
    /* https://github.com/component/raf */


    var prev = new Date().getTime();

    function fallback(fn) {
      var curr = new Date().getTime(),
          ms = Math.max(0, 16 - (curr - prev)),
          req = setTimeout(fn, ms);
      prev = curr;
      return req;
    }

    compatRaf = function compatRaf(cb) {
      return raf(cb);
    };

    compatRaf.cancel = function (id) {
      window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);
    };

    var _default = compatRaf;
    exports.default = _default;
    module.exports = exports["default"];
  })(requestAnimationFrame, requestAnimationFrame.exports);

  var properties = {};

  var _interopRequireDefault$5 = interopRequireDefault.exports;
  properties.__esModule = true;
  properties.default = properties.animationEnd = properties.animationDelay = properties.animationTiming = properties.animationDuration = properties.animationName = properties.transitionEnd = properties.transitionDuration = properties.transitionDelay = properties.transitionTiming = properties.transitionProperty = properties.transform = void 0;

  var _inDOM = _interopRequireDefault$5(requireInDOM());

  var transform = 'transform';
  properties.transform = transform;
  var prefix, transitionEnd, animationEnd;
  properties.animationEnd = animationEnd;
  properties.transitionEnd = transitionEnd;
  var transitionProperty, transitionDuration, transitionTiming, transitionDelay;
  properties.transitionDelay = transitionDelay;
  properties.transitionTiming = transitionTiming;
  properties.transitionDuration = transitionDuration;
  properties.transitionProperty = transitionProperty;
  var animationName, animationDuration, animationTiming, animationDelay;
  properties.animationDelay = animationDelay;
  properties.animationTiming = animationTiming;
  properties.animationDuration = animationDuration;
  properties.animationName = animationName;

  if (_inDOM.default) {
    var _getTransitionPropert = getTransitionProperties();

    prefix = _getTransitionPropert.prefix;
    properties.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
    properties.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
    properties.transform = transform = prefix + "-" + transform;
    properties.transitionProperty = transitionProperty = prefix + "-transition-property";
    properties.transitionDuration = transitionDuration = prefix + "-transition-duration";
    properties.transitionDelay = transitionDelay = prefix + "-transition-delay";
    properties.transitionTiming = transitionTiming = prefix + "-transition-timing-function";
    properties.animationName = animationName = prefix + "-animation-name";
    properties.animationDuration = animationDuration = prefix + "-animation-duration";
    properties.animationTiming = animationTiming = prefix + "-animation-delay";
    properties.animationDelay = animationDelay = prefix + "-animation-timing-function";
  }

  var _default$1 = {
    transform: transform,
    end: transitionEnd,
    property: transitionProperty,
    timing: transitionTiming,
    delay: transitionDelay,
    duration: transitionDuration
  };
  properties.default = _default$1;

  function getTransitionProperties() {
    var style = document.createElement('div').style;
    var vendorMap = {
      O: function O(e) {
        return "o" + e.toLowerCase();
      },
      Moz: function Moz(e) {
        return e.toLowerCase();
      },
      Webkit: function Webkit(e) {
        return "webkit" + e;
      },
      ms: function ms(e) {
        return "MS" + e;
      }
    };
    var vendors = Object.keys(vendorMap);
    var transitionEnd, animationEnd;
    var prefix = '';

    for (var i = 0; i < vendors.length; i++) {
      var vendor = vendors[i];

      if (vendor + "TransitionProperty" in style) {
        prefix = "-" + vendor.toLowerCase();
        transitionEnd = vendorMap[vendor]('TransitionEnd');
        animationEnd = vendorMap[vendor]('AnimationEnd');
        break;
      }
    }

    if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';
    if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';
    style = null;
    return {
      animationEnd: animationEnd,
      transitionEnd: transitionEnd,
      prefix: prefix
    };
  }

  var PropTypes = {};

  PropTypes.__esModule = true;
  PropTypes.nameShape = undefined;
  PropTypes.transitionTimeout = transitionTimeout;
  var _react$3 = React__default["default"];

  _interopRequireDefault$4(_react$3);

  var _propTypes$3 = propTypes.exports;

  var _propTypes2$3 = _interopRequireDefault$4(_propTypes$3);

  function _interopRequireDefault$4(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function transitionTimeout(transitionType) {
    var timeoutPropName = 'transition' + transitionType + 'Timeout';
    var enabledPropName = 'transition' + transitionType;
    return function (props) {
      // If the transition is enabled
      if (props[enabledPropName]) {
        // If no timeout duration is provided
        if (props[timeoutPropName] == null) {
          return new Error(timeoutPropName + ' wasn\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number
        } else if (typeof props[timeoutPropName] !== 'number') {
          return new Error(timeoutPropName + ' must be a number (in milliseconds)');
        }
      }

      return null;
    };
  }

  PropTypes.nameShape = _propTypes2$3.default.oneOfType([_propTypes2$3.default.string, _propTypes2$3.default.shape({
    enter: _propTypes2$3.default.string,
    leave: _propTypes2$3.default.string,
    active: _propTypes2$3.default.string
  }), _propTypes2$3.default.shape({
    enter: _propTypes2$3.default.string,
    enterActive: _propTypes2$3.default.string,
    leave: _propTypes2$3.default.string,
    leaveActive: _propTypes2$3.default.string,
    appear: _propTypes2$3.default.string,
    appearActive: _propTypes2$3.default.string
  })]);

  (function (module, exports) {

    exports.__esModule = true;

    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    var _addClass = addClass.exports;

    var _addClass2 = _interopRequireDefault(_addClass);

    var _removeClass = removeClass;

    var _removeClass2 = _interopRequireDefault(_removeClass);

    var _requestAnimationFrame = requestAnimationFrame.exports;

    var _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);

    var _properties = properties;
    var _react = React__default["default"];

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = propTypes.exports;

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _reactDom = require$$6__default["default"];
    var _PropTypes = PropTypes;

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    var events = [];
    if (_properties.transitionEnd) events.push(_properties.transitionEnd);
    if (_properties.animationEnd) events.push(_properties.animationEnd);

    function addEndListener(node, listener) {
      if (events.length) {
        events.forEach(function (e) {
          return node.addEventListener(e, listener, false);
        });
      } else {
        setTimeout(listener, 0);
      }

      return function () {
        if (!events.length) return;
        events.forEach(function (e) {
          return node.removeEventListener(e, listener, false);
        });
      };
    }

    ({
      children: _propTypes2.default.node,
      name: _PropTypes.nameShape.isRequired,
      // Once we require timeouts to be specified, we can remove the
      // boolean flags (appear etc.) and just accept a number
      // or a bool for the timeout flags (appearTimeout etc.)
      appear: _propTypes2.default.bool,
      enter: _propTypes2.default.bool,
      leave: _propTypes2.default.bool,
      appearTimeout: _propTypes2.default.number,
      enterTimeout: _propTypes2.default.number,
      leaveTimeout: _propTypes2.default.number
    });

    var CSSTransitionGroupChild = function (_React$Component) {
      _inherits(CSSTransitionGroupChild, _React$Component);

      function CSSTransitionGroupChild() {
        var _temp, _this, _ret;

        _classCallCheck(this, CSSTransitionGroupChild);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {
          if (_this.props.appear) {
            _this.transition('appear', done, _this.props.appearTimeout);
          } else {
            done();
          }
        }, _this.componentWillEnter = function (done) {
          if (_this.props.enter) {
            _this.transition('enter', done, _this.props.enterTimeout);
          } else {
            done();
          }
        }, _this.componentWillLeave = function (done) {
          if (_this.props.leave) {
            _this.transition('leave', done, _this.props.leaveTimeout);
          } else {
            done();
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }

      CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {
        this.classNameAndNodeQueue = [];
        this.transitionTimeouts = [];
      };

      CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {
        this.unmounted = true;

        if (this.timeout) {
          clearTimeout(this.timeout);
        }

        this.transitionTimeouts.forEach(function (timeout) {
          clearTimeout(timeout);
        });
        this.classNameAndNodeQueue.length = 0;
      };

      CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {
        var node = (0, _reactDom.findDOMNode)(this);

        if (!node) {
          if (finishCallback) {
            finishCallback();
          }

          return;
        }

        var className = this.props.name[animationType] || this.props.name + '-' + animationType;
        var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
        var timer = null;
        var removeListeners = void 0;
        (0, _addClass2.default)(node, className); // Need to do this to actually trigger a transition.

        this.queueClassAndNode(activeClassName, node); // Clean-up the animation after the specified delay

        var finish = function finish(e) {
          if (e && e.target !== node) {
            return;
          }

          clearTimeout(timer);
          if (removeListeners) removeListeners();
          (0, _removeClass2.default)(node, className);
          (0, _removeClass2.default)(node, activeClassName);
          if (removeListeners) removeListeners(); // Usually this optional callback is used for informing an owner of
          // a leave animation and telling it to remove the child.

          if (finishCallback) {
            finishCallback();
          }
        };

        if (timeout) {
          timer = setTimeout(finish, timeout);
          this.transitionTimeouts.push(timer);
        } else if (_properties.transitionEnd) {
          removeListeners = addEndListener(node, finish);
        }
      };

      CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {
        var _this2 = this;

        this.classNameAndNodeQueue.push({
          className: className,
          node: node
        });

        if (!this.rafHandle) {
          this.rafHandle = (0, _requestAnimationFrame2.default)(function () {
            return _this2.flushClassNameAndNodeQueue();
          });
        }
      };

      CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {
        if (!this.unmounted) {
          this.classNameAndNodeQueue.forEach(function (obj) {
            // This is for to force a repaint,
            // which is necessary in order to transition styles when adding a class name.

            /* eslint-disable no-unused-expressions */
            obj.node.scrollTop;
            /* eslint-enable no-unused-expressions */

            (0, _addClass2.default)(obj.node, obj.className);
          });
        }

        this.classNameAndNodeQueue.length = 0;
        this.rafHandle = null;
      };

      CSSTransitionGroupChild.prototype.render = function render() {
        var props = _extends({}, this.props);

        delete props.name;
        delete props.appear;
        delete props.enter;
        delete props.leave;
        delete props.appearTimeout;
        delete props.enterTimeout;
        delete props.leaveTimeout;
        delete props.children;
        return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);
      };

      return CSSTransitionGroupChild;
    }(_react2.default.Component);

    CSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';
    CSSTransitionGroupChild.propTypes = {};
    exports.default = CSSTransitionGroupChild;
    module.exports = exports['default'];
  })(CSSTransitionGroupChild, CSSTransitionGroupChild.exports);

  (function (module, exports) {

    exports.__esModule = true;

    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    var _react = React__default["default"];

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = propTypes.exports;

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _TransitionGroup = TransitionGroup.exports;

    var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

    var _CSSTransitionGroupChild = CSSTransitionGroupChild.exports;

    var _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);

    var _PropTypes = PropTypes;

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    ({
      transitionName: _PropTypes.nameShape.isRequired,
      transitionAppear: _propTypes2.default.bool,
      transitionEnter: _propTypes2.default.bool,
      transitionLeave: _propTypes2.default.bool,
      transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),
      transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),
      transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')
    });
    var defaultProps = {
      transitionAppear: false,
      transitionEnter: true,
      transitionLeave: true
    };

    var CSSTransitionGroup = function (_React$Component) {
      _inherits(CSSTransitionGroup, _React$Component);

      function CSSTransitionGroup() {
        var _temp, _this, _ret;

        _classCallCheck(this, CSSTransitionGroup);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {
          return _react2.default.createElement(_CSSTransitionGroupChild2.default, {
            name: _this.props.transitionName,
            appear: _this.props.transitionAppear,
            enter: _this.props.transitionEnter,
            leave: _this.props.transitionLeave,
            appearTimeout: _this.props.transitionAppearTimeout,
            enterTimeout: _this.props.transitionEnterTimeout,
            leaveTimeout: _this.props.transitionLeaveTimeout
          }, child);
        }, _temp), _possibleConstructorReturn(_this, _ret);
      } // We need to provide this childFactory so that
      // ReactCSSTransitionGroupChild can receive updates to name, enter, and
      // leave while it is leaving.


      CSSTransitionGroup.prototype.render = function render() {
        return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, {
          childFactory: this._wrapChild
        }));
      };

      return CSSTransitionGroup;
    }(_react2.default.Component);

    CSSTransitionGroup.displayName = 'CSSTransitionGroup';
    CSSTransitionGroup.propTypes = {};
    CSSTransitionGroup.defaultProps = defaultProps;
    exports.default = CSSTransitionGroup;
    module.exports = exports['default'];
  })(CSSTransitionGroup, CSSTransitionGroup.exports);

  var _CSSTransitionGroup = CSSTransitionGroup.exports;

  var _CSSTransitionGroup2 = _interopRequireDefault$3(_CSSTransitionGroup);

  var _TransitionGroup = TransitionGroup.exports;

  var _TransitionGroup2 = _interopRequireDefault$3(_TransitionGroup);

  function _interopRequireDefault$3(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var reactTransitionGroup = {
    TransitionGroup: _TransitionGroup2.default,
    CSSTransitionGroup: _CSSTransitionGroup2.default
  };

  var PassContext$1 = {};

  Object.defineProperty(PassContext$1, "__esModule", {
    value: true
  });

  var _createClass$2 = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _propTypes$2 = propTypes.exports;

  var _propTypes2$2 = _interopRequireDefault$2(_propTypes$2);

  var _react$2 = React__default["default"];

  function _interopRequireDefault$2(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck$2(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn$2(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits$2(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  } // Pass the Lightbox context through to the Portal's descendents
  // StackOverflow discussion http://goo.gl/oclrJ9


  var PassContext = function (_Component) {
    _inherits$2(PassContext, _Component);

    function PassContext() {
      _classCallCheck$2(this, PassContext);

      return _possibleConstructorReturn$2(this, (PassContext.__proto__ || Object.getPrototypeOf(PassContext)).apply(this, arguments));
    }

    _createClass$2(PassContext, [{
      key: 'getChildContext',
      value: function getChildContext() {
        return this.props.context;
      }
    }, {
      key: 'render',
      value: function render() {
        return _react$2.Children.only(this.props.children);
      }
    }]);

    return PassContext;
  }(_react$2.Component);

  PassContext.propTypes = {
    context: _propTypes2$2.default.object.isRequired
  };
  PassContext.childContextTypes = {
    theme: _propTypes2$2.default.object
  };

  PassContext$1.default = PassContext;

  Object.defineProperty(Portal$1, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _createClass$1 = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _propTypes$1 = propTypes.exports;

  var _propTypes2$1 = _interopRequireDefault$1(_propTypes$1);

  var _react$1 = React__default["default"];

  var _react2$1 = _interopRequireDefault$1(_react$1);

  var _reactTransitionGroup = reactTransitionGroup;
  var _reactDom = require$$6__default["default"];
  var _PassContext = PassContext$1;

  var _PassContext2 = _interopRequireDefault$1(_PassContext);

  function _interopRequireDefault$1(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck$1(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn$1(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits$1(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Portal = function (_Component) {
    _inherits$1(Portal, _Component);

    function Portal() {
      _classCallCheck$1(this, Portal);

      var _this = _possibleConstructorReturn$1(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).call(this));

      _this.portalElement = null;
      return _this;
    }

    _createClass$1(Portal, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        var p = document.createElement('div');
        document.body.appendChild(p);
        this.portalElement = p;
        this.componentDidUpdate();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        // Animate fade on mount/unmount
        var duration = 200;
        var styles = '\n\t\t\t\t.fade-enter { opacity: 0.01; }\n\t\t\t\t.fade-enter.fade-enter-active { opacity: 1; transition: opacity ' + duration + 'ms; }\n\t\t\t\t.fade-leave { opacity: 1; }\n\t\t\t\t.fade-leave.fade-leave-active { opacity: 0.01; transition: opacity ' + duration + 'ms; }\n\t\t';
        (0, _reactDom.render)(_react2$1.default.createElement(_PassContext2.default, {
          context: this.context
        }, _react2$1.default.createElement('div', null, _react2$1.default.createElement('style', null, styles), _react2$1.default.createElement(_reactTransitionGroup.CSSTransitionGroup, _extends({
          component: 'div',
          transitionName: 'fade',
          transitionEnterTimeout: duration,
          transitionLeaveTimeout: duration
        }, this.props)))), this.portalElement);
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        (0, _reactDom.unmountComponentAtNode)(this.portalElement);
        document.body.removeChild(this.portalElement);
      }
    }, {
      key: 'render',
      value: function render() {
        return null;
      }
    }]);

    return Portal;
  }(_react$1.Component);

  Portal$1.default = Portal;

  Portal.contextTypes = {
    theme: _propTypes2$1.default.object.isRequired
  };

  var bindFunctions$1 = {};

  Object.defineProperty(bindFunctions$1, "__esModule", {
    value: true
  });

  bindFunctions$1.default = bindFunctions;
  /**
  	Bind multiple component methods:

  	* @param {this} context
  	* @param {Array} functions

  	constructor() {
  		...
  		bindFunctions.call(this, ['handleClick', 'handleOther']);
  	}
  */


  function bindFunctions(functions) {
    var _this = this;

    functions.forEach(function (f) {
      return _this[f] = _this[f].bind(_this);
    });
  }

  var canUseDom = {};

  Object.defineProperty(canUseDom, "__esModule", {
    value: true
  }); // Return true if window + document

  canUseDom.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  Object.defineProperty(Lightbox$1, "__esModule", {
    value: true
  });

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _propTypes = propTypes.exports;

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = React__default["default"];

  var _react2 = _interopRequireDefault(_react);

  var _aphrodite = lib$1.exports;
  var _reactScrolllock = dist$2;

  var _reactScrolllock2 = _interopRequireDefault(_reactScrolllock);

  var _reactSpinners = reactSpinners.exports;
  var _theme = theme$1;

  var _theme2 = _interopRequireDefault(_theme);

  var _Arrow = Arrow$1;

  var _Arrow2 = _interopRequireDefault(_Arrow);

  var _Container = Container$1;

  var _Container2 = _interopRequireDefault(_Container);

  var _Footer = Footer$1;

  var _Footer2 = _interopRequireDefault(_Footer);

  var _Header = Header$1;

  var _Header2 = _interopRequireDefault(_Header);

  var _PaginatedThumbnails = PaginatedThumbnails$1;

  var _PaginatedThumbnails2 = _interopRequireDefault(_PaginatedThumbnails);

  var _Portal = Portal$1;

  var _Portal2 = _interopRequireDefault(_Portal);

  var _bindFunctions = bindFunctions$1;

  var _bindFunctions2 = _interopRequireDefault(_bindFunctions);

  var _canUseDom = canUseDom;

  var _canUseDom2 = _interopRequireDefault(_canUseDom);

  var _deepMerge = deepMerge$1;

  var _deepMerge2 = _interopRequireDefault(_deepMerge);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Lightbox = function (_Component) {
    _inherits(Lightbox, _Component);

    function Lightbox(props) {
      _classCallCheck(this, Lightbox);

      var _this = _possibleConstructorReturn(this, (Lightbox.__proto__ || Object.getPrototypeOf(Lightbox)).call(this, props));

      _this.theme = (0, _deepMerge2.default)(_theme2.default, props.theme);
      _this.classes = _aphrodite.StyleSheet.create((0, _deepMerge2.default)(defaultStyles, _this.theme));
      _this.state = {
        imageLoaded: false
      };

      _bindFunctions2.default.call(_this, ['gotoNext', 'gotoPrev', 'closeBackdrop', 'handleKeyboardInput', 'handleImageLoaded']);

      return _this;
    }

    _createClass(Lightbox, [{
      key: 'getChildContext',
      value: function getChildContext() {
        return {
          theme: this.theme
        };
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (this.props.isOpen) {
          if (this.props.enableKeyboardInput) {
            window.addEventListener('keydown', this.handleKeyboardInput);
          }

          if (this.props.currentImage) {
            this.preloadImage(this.props.currentImage, this.handleImageLoaded);
          }
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (!_canUseDom2.default) return; // preload images

        if (nextProps.preloadNextImage) {
          var currentIndex = this.props.currentImage;
          var nextIndex = nextProps.currentImage + 1;
          var prevIndex = nextProps.currentImage - 1;
          var preloadIndex = void 0;

          if (currentIndex && nextProps.currentImage > currentIndex) {
            preloadIndex = nextIndex;
          } else if (currentIndex && nextProps.currentImage < currentIndex) {
            preloadIndex = prevIndex;
          } // if we know the user's direction just get one image
          // otherwise, to be safe, we need to grab one in each direction


          if (preloadIndex) {
            this.preloadImage(preloadIndex);
          } else {
            this.preloadImage(prevIndex);
            this.preloadImage(nextIndex);
          }
        } // preload current image


        if (this.props.currentImage !== nextProps.currentImage || !this.props.isOpen && nextProps.isOpen) {
          var img = this.preloadImage(nextProps.currentImage, this.handleImageLoaded);
          this.setState({
            imageLoaded: img.complete
          });
        } // add/remove event listeners


        if (!this.props.isOpen && nextProps.isOpen && nextProps.enableKeyboardInput) {
          window.addEventListener('keydown', this.handleKeyboardInput);
        }

        if (!nextProps.isOpen && nextProps.enableKeyboardInput) {
          window.removeEventListener('keydown', this.handleKeyboardInput);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (this.props.enableKeyboardInput) {
          window.removeEventListener('keydown', this.handleKeyboardInput);
        }
      } // ==============================
      // METHODS
      // ==============================

    }, {
      key: 'preloadImage',
      value: function preloadImage(idx, onload) {
        var image = this.props.images[idx];
        if (!image) return;
        var img = new Image(); // TODO: add error handling for missing images

        img.onerror = onload;
        img.onload = onload;
        img.src = image.src;
        img.srcSet = image.srcSet || image.srcset;
        if (img.srcSet) img.setAttribute('srcset', img.srcSet);
        return img;
      }
    }, {
      key: 'gotoNext',
      value: function gotoNext(event) {
        var _props = this.props,
            currentImage = _props.currentImage,
            images = _props.images;
        var imageLoaded = this.state.imageLoaded;
        if (!imageLoaded || currentImage === images.length - 1) return;

        if (event) {
          event.preventDefault();
          event.stopPropagation();
        }

        this.props.onClickNext();
      }
    }, {
      key: 'gotoPrev',
      value: function gotoPrev(event) {
        var currentImage = this.props.currentImage;
        var imageLoaded = this.state.imageLoaded;
        if (!imageLoaded || currentImage === 0) return;

        if (event) {
          event.preventDefault();
          event.stopPropagation();
        }

        this.props.onClickPrev();
      }
    }, {
      key: 'closeBackdrop',
      value: function closeBackdrop(event) {
        // make sure event only happens if they click the backdrop
        // and if the caption is widening the figure element let that respond too
        if (event.target.id === 'lightboxBackdrop' || event.target.tagName === 'FIGURE') {
          this.props.onClose();
        }
      }
    }, {
      key: 'handleKeyboardInput',
      value: function handleKeyboardInput(event) {
        if (event.keyCode === 37) {
          // left
          this.gotoPrev(event);
          return true;
        } else if (event.keyCode === 39) {
          // right
          this.gotoNext(event);
          return true;
        } else if (event.keyCode === 27) {
          // esc
          this.props.onClose();
          return true;
        }

        return false;
      }
    }, {
      key: 'handleImageLoaded',
      value: function handleImageLoaded() {
        this.setState({
          imageLoaded: true
        });
      } // ==============================
      // RENDERERS
      // ==============================

    }, {
      key: 'renderArrowPrev',
      value: function renderArrowPrev() {
        if (this.props.currentImage === 0) return null;
        return _react2.default.createElement(_Arrow2.default, {
          direction: 'left',
          icon: 'arrowLeft',
          onClick: this.gotoPrev,
          title: this.props.leftArrowTitle,
          type: 'button'
        });
      }
    }, {
      key: 'renderArrowNext',
      value: function renderArrowNext() {
        if (this.props.currentImage === this.props.images.length - 1) return null;
        return _react2.default.createElement(_Arrow2.default, {
          direction: 'right',
          icon: 'arrowRight',
          onClick: this.gotoNext,
          title: this.props.rightArrowTitle,
          type: 'button'
        });
      }
    }, {
      key: 'renderDialog',
      value: function renderDialog() {
        var _props2 = this.props,
            backdropClosesModal = _props2.backdropClosesModal,
            isOpen = _props2.isOpen,
            showThumbnails = _props2.showThumbnails,
            width = _props2.width;
        var imageLoaded = this.state.imageLoaded;
        if (!isOpen) return _react2.default.createElement('span', {
          key: 'closed'
        });
        var offsetThumbnails = 0;

        if (showThumbnails) {
          offsetThumbnails = this.theme.thumbnail.size + this.theme.container.gutter.vertical;
        }

        return _react2.default.createElement(_Container2.default, {
          key: 'open',
          onClick: backdropClosesModal && this.closeBackdrop,
          onTouchEnd: backdropClosesModal && this.closeBackdrop
        }, _react2.default.createElement('div', null, _react2.default.createElement('div', {
          className: (0, _aphrodite.css)(this.classes.content),
          style: {
            marginBottom: offsetThumbnails,
            maxWidth: width
          }
        }, imageLoaded && this.renderHeader(), this.renderImages(), this.renderSpinner(), imageLoaded && this.renderFooter()), imageLoaded && this.renderThumbnails(), imageLoaded && this.renderArrowPrev(), imageLoaded && this.renderArrowNext(), _react2.default.createElement(_reactScrolllock2.default, null)));
      }
    }, {
      key: 'renderImages',
      value: function renderImages() {
        var _props3 = this.props,
            currentImage = _props3.currentImage,
            images = _props3.images,
            onClickImage = _props3.onClickImage,
            showThumbnails = _props3.showThumbnails;
        var imageLoaded = this.state.imageLoaded;
        if (!images || !images.length) return null;
        var image = images[currentImage];
        image.srcSet = image.srcSet || image.srcset;
        var srcSet = void 0;
        var sizes = void 0;

        if (image.srcSet) {
          srcSet = image.srcSet.join();
          sizes = '100vw';
        }

        var thumbnailsSize = showThumbnails ? this.theme.thumbnail.size : 0;
        var heightOffset = this.theme.header.height + this.theme.footer.height + thumbnailsSize + this.theme.container.gutter.vertical + 'px';
        return _react2.default.createElement('figure', {
          className: (0, _aphrodite.css)(this.classes.figure)
        }, _react2.default.createElement('img', {
          className: (0, _aphrodite.css)(this.classes.image, imageLoaded && this.classes.imageLoaded),
          onClick: onClickImage,
          sizes: sizes,
          alt: image.alt,
          src: image.src,
          srcSet: srcSet,
          style: {
            cursor: onClickImage ? 'pointer' : 'auto',
            maxHeight: 'calc(100vh - ' + heightOffset + ')'
          }
        }));
      }
    }, {
      key: 'renderThumbnails',
      value: function renderThumbnails() {
        var _props4 = this.props,
            images = _props4.images,
            currentImage = _props4.currentImage,
            onClickThumbnail = _props4.onClickThumbnail,
            showThumbnails = _props4.showThumbnails,
            thumbnailOffset = _props4.thumbnailOffset;
        if (!showThumbnails) return;
        return _react2.default.createElement(_PaginatedThumbnails2.default, {
          currentImage: currentImage,
          images: images,
          offset: thumbnailOffset,
          onClickThumbnail: onClickThumbnail
        });
      }
    }, {
      key: 'renderHeader',
      value: function renderHeader() {
        var _props5 = this.props,
            closeButtonTitle = _props5.closeButtonTitle,
            customControls = _props5.customControls,
            onClose = _props5.onClose,
            showCloseButton = _props5.showCloseButton;
        return _react2.default.createElement(_Header2.default, {
          customControls: customControls,
          onClose: onClose,
          showCloseButton: showCloseButton,
          closeButtonTitle: closeButtonTitle
        });
      }
    }, {
      key: 'renderFooter',
      value: function renderFooter() {
        var _props6 = this.props,
            currentImage = _props6.currentImage,
            images = _props6.images,
            imageCountSeparator = _props6.imageCountSeparator,
            showImageCount = _props6.showImageCount;
        if (!images || !images.length) return null;
        return _react2.default.createElement(_Footer2.default, {
          caption: images[currentImage].caption,
          countCurrent: currentImage + 1,
          countSeparator: imageCountSeparator,
          countTotal: images.length,
          showCount: showImageCount
        });
      }
    }, {
      key: 'renderSpinner',
      value: function renderSpinner() {
        var _props7 = this.props,
            spinner = _props7.spinner,
            spinnerColor = _props7.spinnerColor,
            spinnerSize = _props7.spinnerSize;
        var imageLoaded = this.state.imageLoaded;
        var Spinner = spinner;
        return _react2.default.createElement('div', {
          className: (0, _aphrodite.css)(this.classes.spinner, !imageLoaded && this.classes.spinnerActive)
        }, _react2.default.createElement(Spinner, {
          color: spinnerColor,
          size: spinnerSize
        }));
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(_Portal2.default, null, this.renderDialog());
      }
    }]);

    return Lightbox;
  }(_react.Component);

  var DefaultSpinner = function DefaultSpinner(props) {
    return _react2.default.createElement(_reactSpinners.BounceLoader, props);
  };

  Lightbox.propTypes = {
    backdropClosesModal: _propTypes2.default.bool,
    closeButtonTitle: _propTypes2.default.string,
    currentImage: _propTypes2.default.number,
    customControls: _propTypes2.default.arrayOf(_propTypes2.default.node),
    enableKeyboardInput: _propTypes2.default.bool,
    imageCountSeparator: _propTypes2.default.string,
    images: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      src: _propTypes2.default.string.isRequired,
      srcSet: _propTypes2.default.array,
      caption: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
      thumbnail: _propTypes2.default.string
    })).isRequired,
    isOpen: _propTypes2.default.bool,
    leftArrowTitle: _propTypes2.default.string,
    onClickImage: _propTypes2.default.func,
    onClickNext: _propTypes2.default.func,
    onClickPrev: _propTypes2.default.func,
    onClose: _propTypes2.default.func.isRequired,
    preloadNextImage: _propTypes2.default.bool,
    rightArrowTitle: _propTypes2.default.string,
    showCloseButton: _propTypes2.default.bool,
    showImageCount: _propTypes2.default.bool,
    showThumbnails: _propTypes2.default.bool,
    spinner: _propTypes2.default.func,
    spinnerColor: _propTypes2.default.string,
    spinnerSize: _propTypes2.default.number,
    theme: _propTypes2.default.object,
    thumbnailOffset: _propTypes2.default.number,
    width: _propTypes2.default.number
  };
  Lightbox.defaultProps = {
    closeButtonTitle: 'Close (Esc)',
    currentImage: 0,
    enableKeyboardInput: true,
    imageCountSeparator: ' of ',
    leftArrowTitle: 'Previous (Left arrow key)',
    onClickShowNextImage: true,
    preloadNextImage: true,
    rightArrowTitle: 'Next (Right arrow key)',
    showCloseButton: true,
    showImageCount: true,
    spinner: DefaultSpinner,
    spinnerColor: 'white',
    spinnerSize: 100,
    theme: {},
    thumbnailOffset: 2,
    width: 1024
  };
  Lightbox.childContextTypes = {
    theme: _propTypes2.default.object.isRequired
  };
  var defaultStyles = {
    content: {
      position: 'relative'
    },
    figure: {
      margin: 0 // remove browser default

    },
    image: {
      display: 'block',
      // removes browser default gutter
      height: 'auto',
      margin: '0 auto',
      // maintain center on very short screens OR very narrow image
      maxWidth: '100%',
      // disable user select
      WebkitTouchCallout: 'none',
      userSelect: 'none',
      // opacity animation on image load
      opacity: 0,
      transition: 'opacity 0.3s'
    },
    imageLoaded: {
      opacity: 1
    },
    spinner: {
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      // opacity animation to make spinner appear with delay
      opacity: 0,
      transition: 'opacity 0.3s'
    },
    spinnerActive: {
      opacity: 1
    }
  };

  var _default = Lightbox$1.default = Lightbox;

  var CheckButton = /*#__PURE__*/function (_Component) {
    _inherits$7(CheckButton, _Component);

    var _super = _createSuper(CheckButton);

    function CheckButton(props) {
      var _this;

      _classCallCheck$7(this, CheckButton);

      _this = _super.call(this, props);
      _this.state = {
        hover: _this.props.hover
      };
      _this.fill = _this.fill.bind(_assertThisInitialized(_this));
      _this.visibility = _this.visibility.bind(_assertThisInitialized(_this));
      return _this;
    }

    _createClass$7(CheckButton, [{
      key: "fill",
      value: function fill() {
        if (this.props.isSelected) return this.props.selectedColor;else if (this.state.hover) return this.props.hoverColor;
        return this.props.color;
      }
    }, {
      key: "visibility",
      value: function visibility() {
        if (this.props.isSelected || this.props.isSelectable && this.props.parentHover) return 'visible';
        return 'hidden';
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var circleStyle = {
          display: this.props.isSelected ? "block" : "none"
        };
        return /*#__PURE__*/React__default["default"].createElement("div", {
          "data-testid": "grid-gallery-item_check-button",
          title: "Select",
          style: {
            visibility: this.visibility(),
            background: 'none',
            "float": 'left',
            width: '36px',
            height: '36px',
            border: 'none',
            padding: '6px',
            cursor: 'pointer',
            pointerEvents: 'visible'
          },
          onClick: this.props.onClick ? function (e) {
            return _this2.props.onClick(_this2.props.index, e);
          } : null,
          onMouseOver: function onMouseOver(e) {
            return _this2.setState({
              hover: true
            });
          },
          onMouseOut: function onMouseOut(e) {
            return _this2.setState({
              hover: false
            });
          }
        }, /*#__PURE__*/React__default["default"].createElement("svg", {
          fill: this.fill(),
          height: "24",
          viewBox: "0 0 24 24",
          width: "24",
          xmlns: "http://www.w3.org/2000/svg"
        }, /*#__PURE__*/React__default["default"].createElement("radialGradient", {
          id: "shadow",
          cx: "38",
          cy: "95.488",
          r: "10.488",
          gradientTransform: "matrix(1 0 0 -1 -26 109)",
          gradientUnits: "userSpaceOnUse"
        }, /*#__PURE__*/React__default["default"].createElement("stop", {
          offset: ".832",
          stopColor: "#010101"
        }), /*#__PURE__*/React__default["default"].createElement("stop", {
          offset: "1",
          stopColor: "#010101",
          stopOpacity: "0"
        })), /*#__PURE__*/React__default["default"].createElement("circle", {
          style: circleStyle,
          opacity: ".26",
          fill: "url(#shadow)",
          cx: "12",
          cy: "13.512",
          r: "10.488"
        }), /*#__PURE__*/React__default["default"].createElement("circle", {
          style: circleStyle,
          fill: "#FFF",
          cx: "12",
          cy: "12.2",
          r: "8.292"
        }), /*#__PURE__*/React__default["default"].createElement("path", {
          d: "M0 0h24v24H0z",
          fill: "none"
        }), /*#__PURE__*/React__default["default"].createElement("path", {
          d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
        })));
      }
    }]);

    return CheckButton;
  }(React.Component);

  CheckButton.propTypes = {
    index: propTypes.exports.number,
    color: propTypes.exports.string,
    isSelectable: propTypes.exports.bool,
    isSelected: propTypes.exports.bool,
    selectedColor: propTypes.exports.string,
    parentHover: propTypes.exports.bool,
    hover: propTypes.exports.bool,
    hoverColor: propTypes.exports.string,
    onClick: propTypes.exports.func
  };
  CheckButton.defaultProps = {
    isSelectable: true,
    isSelected: false,
    parentHover: false,
    hover: false
  };

  var Image$1 = /*#__PURE__*/function (_Component) {
    _inherits$7(Image, _Component);

    var _super = _createSuper(Image);

    function Image(props) {
      var _this;

      _classCallCheck$7(this, Image);

      _this = _super.call(this, props);
      _this.state = {
        hover: false
      };
      return _this;
    }

    _createClass$7(Image, [{
      key: "tagStyle",
      value: function tagStyle() {
        if (this.props.tagStyle) return this.props.tagStyle;
        return {
          display: "inline",
          padding: ".2em .6em .3em",
          fontSize: "75%",
          fontWeight: "600",
          lineHeight: "1",
          color: "yellow",
          background: "rgba(0,0,0,0.65)",
          textAlign: "center",
          whiteSpace: "nowrap",
          verticalAlign: "baseline",
          borderRadius: ".25em"
        };
      }
    }, {
      key: "tileViewportStyle",
      value: function tileViewportStyle() {
        if (this.props.tileViewportStyle) return this.props.tileViewportStyle.call(this);
        var nanoBase64Backgorund = {};

        if (this.props.item.nano) {
          nanoBase64Backgorund = {
            background: "url(".concat(this.props.item.nano, ")"),
            backgroundSize: 'cover',
            backgroundPosition: 'center center'
          };
        }

        if (this.props.item.isSelected) return Object.assign({
          width: this.props.item.vwidth - 32,
          height: this.props.height - 32,
          margin: 16,
          overflow: "hidden"
        }, nanoBase64Backgorund);
        return Object.assign({
          width: this.props.item.vwidth,
          height: this.props.height,
          overflow: "hidden"
        }, nanoBase64Backgorund);
      }
    }, {
      key: "thumbnailStyle",
      value: function thumbnailStyle() {
        if (this.props.thumbnailStyle) return this.props.thumbnailStyle.call(this);
        var rotationTransformValue = undefined;

        switch (this.props.item.orientation) {
          case 3:
            rotationTransformValue = "rotate(180deg)";
            break;

          case 6:
            rotationTransformValue = "rotate(90deg)";
            break;

          case 8:
            rotationTransformValue = "rotate(270deg)";
            break;

          case 2:
            rotationTransformValue = "rotateY(180deg)";
            break;

          case 4:
            rotationTransformValue = "rotate(180deg) rotateY(180deg)";
            break;

          case 5:
            rotationTransformValue = "rotate(270deg) rotateY(180deg)";
            break;

          case 7:
            rotationTransformValue = "rotate(90deg) rotateY(180deg)";
            break;
        }

        if (this.props.item.isSelected) {
          var ratio = this.props.item.scaletwidth / this.props.height;
          var height = 0;
          var width = 0;
          var viewportHeight = this.props.height - 32;
          var viewportWidth = this.props.item.vwidth - 32;

          if (this.props.item.scaletwidth > this.props.height) {
            width = this.props.item.scaletwidth - 32;
            height = Math.floor(width / ratio);
          } else {
            height = this.props.height - 32;
            width = Math.floor(height * ratio);
          }

          var marginTop = -Math.abs(Math.floor((viewportHeight - height) / 2));
          var marginLeft = -Math.abs(Math.floor((viewportWidth - width) / 2));
          return {
            cursor: 'pointer',
            width: width,
            height: height,
            marginLeft: marginLeft,
            marginTop: marginTop,
            transform: rotationTransformValue
          };
        }

        return {
          cursor: 'pointer',
          width: this.props.item.scaletwidth,
          height: this.props.height,
          marginLeft: this.props.item.marginLeft,
          marginTop: 0,
          transform: rotationTransformValue
        };
      }
    }, {
      key: "renderCheckButton",
      value: function renderCheckButton() {
        return /*#__PURE__*/React__default["default"].createElement(CheckButton, {
          key: "Select",
          index: this.props.index,
          color: "rgba(255, 255, 255, 0.7)",
          selectedColor: "#4285f4",
          hoverColor: "rgba(255, 255, 255, 1)",
          isSelected: this.props.item.isSelected,
          isSelectable: this.props.isSelectable,
          onClick: this.props.isSelectable ? this.props.onSelectImage : null,
          parentHover: this.state.hover
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var alt = this.props.item.alt ? this.props.item.alt : "";
        var tags = typeof this.props.item.tags === 'undefined' ? /*#__PURE__*/React__default["default"].createElement("noscript", null) : this.props.item.tags.map(function (tag) {
          var key = tag.key || (typeof tag.value === 'string' ? tag.value : null) || tag.title;
          return /*#__PURE__*/React__default["default"].createElement("div", {
            title: tag.title,
            key: "tag-" + key,
            style: {
              display: "inline-block",
              cursor: 'pointer',
              pointerEvents: 'visible',
              margin: "2px"
            }
          }, /*#__PURE__*/React__default["default"].createElement("span", {
            style: _this2.tagStyle()
          }, tag.value));
        });
        var customOverlay = typeof this.props.item.customOverlay === 'undefined' ? /*#__PURE__*/React__default["default"].createElement("noscript", null) : /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_custom-overlay",
          key: "custom-overlay-" + this.props.index,
          style: {
            pointerEvents: "none",
            opacity: this.state.hover ? 1 : 0,
            position: "absolute",
            height: "100%",
            width: "100%"
          }
        }, this.props.item.customOverlay);
        var thumbnailProps = {
          key: "img-" + this.props.index,
          src: this.props.item.thumbnail,
          alt: alt,
          title: typeof this.props.item.caption === 'string' ? this.props.item.caption : null,
          style: this.thumbnailStyle(),
          'data-testid': "grid-gallery-item_thumbnail"
        };
        var ThumbnailImageComponent = this.props.thumbnailImageComponent;
        return /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_tile",
          "data-testid": "grid-gallery-item",
          key: "tile-" + this.props.index,
          onMouseEnter: function onMouseEnter(e) {
            return _this2.setState({
              hover: true
            });
          },
          onMouseLeave: function onMouseLeave(e) {
            return _this2.setState({
              hover: false
            });
          },
          style: {
            margin: this.props.margin,
            WebkitUserSelect: "none",
            position: "relative",
            "float": "left",
            background: "#eee",
            padding: "0px"
          }
        }, /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_tile-icon-bar",
          key: "tile-icon-bar-" + this.props.index,
          style: {
            pointerEvents: "none",
            opacity: 1,
            position: "absolute",
            height: "36px",
            width: "100%"
          }
        }, this.renderCheckButton()), /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_tile-bottom-bar",
          key: "tile-bottom-bar-" + this.props.index,
          style: {
            padding: "2px",
            pointerEvents: "none",
            position: "absolute",
            minHeight: "0px",
            maxHeight: "160px",
            width: "100%",
            bottom: "0px",
            overflow: "hidden"
          }
        }, tags), customOverlay, /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_tile-overlay",
          key: "tile-overlay-" + this.props.index,
          style: {
            pointerEvents: "none",
            opacity: 1,
            position: "absolute",
            height: "100%",
            width: "100%",
            background: this.state.hover && !this.props.item.isSelected && this.props.isSelectable ? 'linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)' : 'none'
          }
        }), /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_tile-viewport",
          "data-testid": "grid-gallery-item_viewport",
          style: this.tileViewportStyle(),
          key: "tile-viewport-" + this.props.index,
          onClick: this.props.onClick ? function (e) {
            return _this2.props.onClick.call(_this2, _this2.props.index, e);
          } : null
        }, ThumbnailImageComponent ? /*#__PURE__*/React__default["default"].createElement(ThumbnailImageComponent, _extends$a({}, this.props, {
          imageProps: thumbnailProps
        })) : /*#__PURE__*/React__default["default"].createElement("img", thumbnailProps)), this.props.item.thumbnailCaption && /*#__PURE__*/React__default["default"].createElement("div", {
          className: "ReactGridGallery_tile-description",
          style: {
            background: "white",
            height: "100%",
            width: "100%",
            margin: 0,
            userSelect: "text",
            WebkitUserSelect: "text",
            MozUserSelect: "text",
            overflow: "hidden"
          }
        }, this.props.item.thumbnailCaption));
      }
    }]);

    return Image;
  }(React.Component);

  Image$1.propTypes = {
    item: propTypes.exports.object,
    index: propTypes.exports.number,
    margin: propTypes.exports.number,
    height: propTypes.exports.number,
    isSelectable: propTypes.exports.bool,
    onClick: propTypes.exports.func,
    onSelectImage: propTypes.exports.func,
    tileViewportStyle: propTypes.exports.func,
    thumbnailStyle: propTypes.exports.func,
    tagStyle: propTypes.exports.object,
    customOverlay: propTypes.exports.element,
    thumbnailImageComponent: propTypes.exports.func
  };
  Image$1.defaultProps = {
    isSelectable: true,
    hover: false
  };

  var calculateCutOff = function calculateCutOff(len, delta, items) {
    var cutoff = [];
    var cutsum = 0;

    for (var i in items) {
      var item = items[i];
      var fractOfLen = item.scaletwidth / len;
      cutoff[i] = Math.floor(fractOfLen * delta);
      cutsum += cutoff[i];
    }

    var stillToCutOff = delta - cutsum;

    while (stillToCutOff > 0) {
      for (i in cutoff) {
        cutoff[i]++;
        stillToCutOff--;
        if (stillToCutOff < 0) break;
      }
    }

    return cutoff;
  };

  var buildImageRow = function buildImageRow(data, _ref) {
    var containerWidth = _ref.containerWidth,
        margin = _ref.margin;
    var row = [];
    var len = 0;
    var imgMargin = 2 * margin;

    while (data.items.length > 0 && len < containerWidth) {
      var item = data.items.shift();
      row.push(item);
      len += item.scaletwidth + imgMargin;
    }

    var delta = len - containerWidth;

    if (row.length > 0 && delta > 0) {
      var cutoff = calculateCutOff(len, delta, row);

      for (var i in row) {
        var pixelsToRemove = cutoff[i];
        item = row[i];
        item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));
        item.vwidth = item.scaletwidth - pixelsToRemove;
      }
    } else {
      for (var j in row) {
        item = row[j];
        item.marginLeft = 0;
        item.vwidth = item.scaletwidth;
      }
    }

    return row;
  };

  var renderThumbs = function renderThumbs(images, _ref2) {
    var containerWidth = _ref2.containerWidth,
        maxRows = _ref2.maxRows,
        rowHeight = _ref2.rowHeight,
        margin = _ref2.margin;
    rowHeight = typeof rowHeight === "undefined" ? 180 : rowHeight;
    margin = typeof margin === "undefined" ? 2 : margin;
    if (!images) return [];
    if (!containerWidth) return [];
    var items = images.slice();
    items = items.map(function (item) {
      return _objectSpread2(_objectSpread2({}, item), {}, {
        scaletwidth: Math.floor(rowHeight * (item.thumbnailWidth / item.thumbnailHeight))
      });
    });
    var data = {
      items: items
    };
    var thumbs = [];
    var rows = [];

    while (data.items.length > 0) {
      rows.push(buildImageRow(data, {
        containerWidth: containerWidth,
        margin: margin
      }));
    }

    for (var r in rows) {
      for (var i in rows[r]) {
        var item = _objectSpread2(_objectSpread2({}, rows[r][i]), {}, {
          rowIndex: parseInt(r)
        });

        if (maxRows) {
          if (r < maxRows) {
            thumbs.push(item);
          }
        } else {
          thumbs.push(item);
        }
      }
    }

    return thumbs;
  };

  var Gallery = /*#__PURE__*/function (_Component) {
    _inherits$7(Gallery, _Component);

    var _super = _createSuper(Gallery);

    function Gallery(props) {
      var _this;

      _classCallCheck$7(this, Gallery);

      _this = _super.call(this, props);
      _this.state = {
        lightboxIsOpen: _this.props.isOpen,
        currentImage: _this.props.currentImage,
        containerWidth: _this.props.defaultContainerWidth
      };
      _this.onResize = _this.onResize.bind(_assertThisInitialized(_this));
      _this.closeLightbox = _this.closeLightbox.bind(_assertThisInitialized(_this));
      _this.gotoImage = _this.gotoImage.bind(_assertThisInitialized(_this));
      _this.gotoNext = _this.gotoNext.bind(_assertThisInitialized(_this));
      _this.gotoPrevious = _this.gotoPrevious.bind(_assertThisInitialized(_this));
      _this.onClickImage = _this.onClickImage.bind(_assertThisInitialized(_this));
      _this.openLightbox = _this.openLightbox.bind(_assertThisInitialized(_this));
      _this.onSelectImage = _this.onSelectImage.bind(_assertThisInitialized(_this));
      return _this;
    }

    _createClass$7(Gallery, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onResize();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        if (!this._gallery) return;

        if (this.getContainerWidth() !== this.state.containerWidth) {
          this.onResize();
        }
      }
    }, {
      key: "onResize",
      value: function onResize() {
        if (!this._gallery) return;
        var containerWidth = this.getContainerWidth();
        this.setState({
          containerWidth: containerWidth
        });
      }
    }, {
      key: "getContainerWidth",
      value: function getContainerWidth() {
        var width = this._gallery.clientWidth;

        try {
          width = this._gallery.getBoundingClientRect().width;
        } catch (err) {}

        return Math.floor(width);
      }
    }, {
      key: "getCurrentImageIndex",
      value: function getCurrentImageIndex() {
        return Math.min(this.state.currentImage, this.props.images.length - 1);
      }
    }, {
      key: "openLightbox",
      value: function openLightbox(index, event) {
        if (event) {
          event.preventDefault();
        }

        if (this.props.lightboxWillOpen) {
          this.props.lightboxWillOpen.call(this, index);
        }

        if (this.props.currentImageWillChange) {
          this.props.currentImageWillChange.call(this, index);
        }

        this.setState({
          currentImage: index,
          lightboxIsOpen: true
        });
      }
    }, {
      key: "closeLightbox",
      value: function closeLightbox() {
        if (this.props.lightboxWillClose) {
          this.props.lightboxWillClose.call(this);
        }

        if (this.props.currentImageWillChange) {
          this.props.currentImageWillChange.call(this, 0);
        }

        this.setState({
          currentImage: 0,
          lightboxIsOpen: false
        });
      }
    }, {
      key: "gotoPrevious",
      value: function gotoPrevious() {
        if (this.props.currentImageWillChange) {
          this.props.currentImageWillChange.call(this, this.getCurrentImageIndex() - 1);
        }

        this.setState({
          currentImage: this.getCurrentImageIndex() - 1
        });
      }
    }, {
      key: "gotoNext",
      value: function gotoNext() {
        if (this.props.currentImageWillChange) {
          this.props.currentImageWillChange.call(this, this.getCurrentImageIndex() + 1);
        }

        this.setState({
          currentImage: this.getCurrentImageIndex() + 1
        });
      }
    }, {
      key: "onClickImage",
      value: function onClickImage() {
        if (this.state.currentImage === this.props.images.length - 1) return;
        this.gotoNext();
      }
    }, {
      key: "onSelectImage",
      value: function onSelectImage(index, event) {
        event.preventDefault();
        if (this.props.onSelectImage) this.props.onSelectImage.call(this, index, this.props.images[index]);
      }
    }, {
      key: "gotoImage",
      value: function gotoImage(index) {
        if (this.props.currentImageWillChange) {
          this.props.currentImageWillChange.call(this, index);
        }

        this.setState({
          currentImage: index
        });
      }
    }, {
      key: "getOnClickThumbnailFn",
      value: function getOnClickThumbnailFn() {
        if (!this.props.onClickThumbnail && this.props.enableLightbox) return this.openLightbox;
        if (this.props.onClickThumbnail) return this.props.onClickThumbnail;
        return null;
      }
    }, {
      key: "getOnClickLightboxThumbnailFn",
      value: function getOnClickLightboxThumbnailFn() {
        if (!this.props.onClickLightboxThumbnail && this.props.showLightboxThumbnails) return this.gotoImage;
        if (this.props.onClickLightboxThumbnail && this.props.showLightboxThumbnails) return this.props.onClickLightboxThumbnail;
        return null;
      }
    }, {
      key: "getOnClickImageFn",
      value: function getOnClickImageFn() {
        if (this.props.onClickImage) return this.props.onClickImage;
        return this.onClickImage;
      }
    }, {
      key: "getOnClickPrevFn",
      value: function getOnClickPrevFn() {
        if (this.props.onClickPrev) return this.props.onClickPrev;
        return this.gotoPrevious;
      }
    }, {
      key: "getOnClickNextFn",
      value: function getOnClickNextFn() {
        if (this.props.onClickNext) return this.props.onClickNext;
        return this.gotoNext;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            maxRows = _this$props.maxRows,
            rowHeight = _this$props.rowHeight,
            margin = _this$props.margin;
        var containerWidth = this.state.containerWidth;
        var thumbnails = renderThumbs(this.props.images, {
          containerWidth: containerWidth,
          maxRows: maxRows,
          rowHeight: rowHeight,
          margin: margin
        });
        var images = thumbnails.map(function (item, idx) {
          return /*#__PURE__*/React__default["default"].createElement(Image$1, {
            key: "Image-" + idx + "-" + item.src,
            item: item,
            index: idx,
            margin: _this2.props.margin,
            height: _this2.props.rowHeight,
            isSelectable: _this2.props.enableImageSelection,
            onClick: _this2.getOnClickThumbnailFn(),
            onSelectImage: _this2.onSelectImage,
            tagStyle: _this2.props.tagStyle,
            tileViewportStyle: _this2.props.tileViewportStyle,
            thumbnailStyle: _this2.props.thumbnailStyle,
            thumbnailImageComponent: _this2.props.thumbnailImageComponent
          });
        });
        var resizeIframeStyles = {
          height: 0,
          margin: 0,
          padding: 0,
          overflow: "hidden",
          borderWidth: 0,
          position: "fixed",
          backgroundColor: "transparent",
          width: "100%"
        };
        return /*#__PURE__*/React__default["default"].createElement("div", {
          id: this.props.id,
          className: "ReactGridGallery",
          ref: function ref(c) {
            return _this2._gallery = c;
          }
        }, /*#__PURE__*/React__default["default"].createElement("iframe", {
          style: resizeIframeStyles,
          ref: function ref(c) {
            return c && c.contentWindow && c.contentWindow.addEventListener('resize', _this2.onResize);
          }
        }), images, /*#__PURE__*/React__default["default"].createElement(_default, _extends$a({
          images: this.props.images,
          backdropClosesModal: this.props.backdropClosesModal,
          currentImage: this.getCurrentImageIndex(),
          preloadNextImage: this.props.preloadNextImage,
          customControls: this.props.customControls,
          enableKeyboardInput: this.props.enableKeyboardInput,
          imageCountSeparator: this.props.imageCountSeparator,
          isOpen: this.state.lightboxIsOpen,
          onClickImage: this.getOnClickImageFn(),
          onClickNext: this.getOnClickNextFn(),
          onClickPrev: this.getOnClickPrevFn(),
          showCloseButton: this.props.showCloseButton,
          showImageCount: this.props.showImageCount,
          onClose: this.closeLightbox,
          width: this.props.lightboxWidth,
          theme: this.props.theme,
          onClickThumbnail: this.getOnClickLightboxThumbnailFn(),
          showThumbnails: this.props.showLightboxThumbnails
        }, this.props.lightBoxProps)));
      }
    }]);

    return Gallery;
  }(React.Component);

  Gallery.displayName = 'Gallery';
  Gallery.propTypes = {
    images: propTypes.exports.arrayOf(propTypes.exports.shape({
      src: propTypes.exports.string.isRequired,
      nano: propTypes.exports.string,
      alt: propTypes.exports.string,
      thumbnail: propTypes.exports.string.isRequired,
      srcset: propTypes.exports.array,
      caption: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.element]),
      tags: propTypes.exports.arrayOf(propTypes.exports.shape({
        value: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.element]).isRequired,
        title: propTypes.exports.string.isRequired,
        key: propTypes.exports.string
      })),
      thumbnailWidth: propTypes.exports.number.isRequired,
      thumbnailHeight: propTypes.exports.number.isRequired,
      isSelected: propTypes.exports.bool,
      thumbnailCaption: propTypes.exports.oneOfType([propTypes.exports.string, propTypes.exports.element])
    })).isRequired,
    id: propTypes.exports.string,
    enableImageSelection: propTypes.exports.bool,
    onSelectImage: propTypes.exports.func,
    rowHeight: propTypes.exports.number,
    maxRows: propTypes.exports.number,
    margin: propTypes.exports.number,
    defaultContainerWidth: propTypes.exports.number,
    onClickThumbnail: propTypes.exports.func,
    lightboxWillOpen: propTypes.exports.func,
    lightboxWillClose: propTypes.exports.func,
    enableLightbox: propTypes.exports.bool,
    backdropClosesModal: propTypes.exports.bool,
    currentImage: propTypes.exports.number,
    preloadNextImage: propTypes.exports.bool,
    customControls: propTypes.exports.arrayOf(propTypes.exports.node),
    currentImageWillChange: propTypes.exports.func,
    enableKeyboardInput: propTypes.exports.bool,
    imageCountSeparator: propTypes.exports.string,
    isOpen: propTypes.exports.bool,
    onClickImage: propTypes.exports.func,
    onClickNext: propTypes.exports.func,
    onClickPrev: propTypes.exports.func,
    onClose: propTypes.exports.func,
    showCloseButton: propTypes.exports.bool,
    showImageCount: propTypes.exports.bool,
    lightboxWidth: propTypes.exports.number,
    tileViewportStyle: propTypes.exports.func,
    thumbnailStyle: propTypes.exports.func,
    showLightboxThumbnails: propTypes.exports.bool,
    onClickLightboxThumbnail: propTypes.exports.func,
    tagStyle: propTypes.exports.object,
    thumbnailImageComponent: propTypes.exports.func,
    lightBoxProps: propTypes.exports.object
  };
  Gallery.defaultProps = {
    id: "ReactGridGallery",
    enableImageSelection: true,
    rowHeight: 180,
    margin: 2,
    defaultContainerWidth: 0,
    enableLightbox: true,
    backdropClosesModal: false,
    currentImage: 0,
    preloadNextImage: true,
    enableKeyboardInput: true,
    imageCountSeparator: ' of ',
    isOpen: false,
    showCloseButton: true,
    showImageCount: true,
    lightboxWidth: 1024,
    showLightboxThumbnails: false,
    lightBoxProps: {}
  };

  return Gallery;

}));
